[{"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\index.js":"1","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\App.jsx":"2","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\store.js":"3","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\reportWebVitals.js":"4","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Cart\\Cart.jsx":"5","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Home\\Home.jsx":"6","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Detail\\Detail.jsx":"7","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\SignUp.jsx":"8","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Checkout\\Checkout.jsx":"9","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\SignIn.jsx":"10","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\History\\History.jsx":"11","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Shop.jsx":"12","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Share\\Footer\\Footer.jsx":"13","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Share\\Header\\Header.jsx":"14","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Share\\Chat\\Chat.jsx":"15","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Reducer\\ReducerRoot.jsx":"16","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\convertMoney.js":"17","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\LoginLink.jsx":"18","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\Name.jsx":"19","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\LogoutLink.jsx":"20","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Action\\ActionCart.jsx":"21","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Action\\ActionSession.jsx":"22","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\CartAPI.jsx":"23","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Cart\\Component\\ListCart.jsx":"24","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\ProductAPI.jsx":"25","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\UserAPI.jsx":"26","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\CommentAPI.jsx":"27","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\CheckoutAPI.jsx":"28","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\MessengerAPI.jsx":"29","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Share\\img\\Image.jsx":"30","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\ChatRoomsAPI.jsx":"31","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\History\\Component\\DetailHistory.jsx":"32","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\History\\Component\\MainHistory.jsx":"33","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\Search.jsx":"34","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\SortProduct.jsx":"35","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\Products.jsx":"36","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\Pagination.jsx":"37","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Reducer\\ReducerCart.jsx":"38","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Reducer\\ReducerSession.jsx":"39","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\HistoryAPI.jsx":"40","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\axiosClient.jsx":"41","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\IndexPage.jsx":"42","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\index.js":"43","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\App.jsx":"44","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\reportWebVitals.js":"45","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\SignUp.jsx":"46","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Home\\Home.jsx":"47","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Detail\\Detail.jsx":"48","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\SignIn.jsx":"49","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Share\\Chat\\Chat.jsx":"50","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Share\\Footer\\Footer.jsx":"51","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Share\\Header\\Header.jsx":"52","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\convertMoney.js":"53","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\UserAPI.jsx":"54","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Share\\img\\Image.jsx":"55","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\LoginLink.jsx":"56","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\LogoutLink.jsx":"57","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\Name.jsx":"58","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\axiosClient.jsx":"59","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_create\\FormCampaign.js":"60","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_create\\test.js":"61","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\CampaignAPI.jsx":"62","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_quyengop\\FormDonations.js":"63","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Table\\TableCampaign.js":"64","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\error\\error.jsx":"65","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Table\\TableUser.js":"66","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_Edit_User\\Form_Edit_User.jsx":"67","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Detail\\detail_User\\Detail_User.jsx":"68","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\DonationsAPI.jsx":"69","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\ForgotPassword.jsx":"70","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Table\\tableDonation.js":"71","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_admin_create_donation\\FormAdminCreateDonations.js":"72","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\UploadAPI.jsx":"73","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Img\\Image.jsx":"74","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\programme\\Programme.jsx":"75","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Introduce\\GioiThieu.jsx":"76","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\AuthAPI.jsx":"77","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\configApp.jsx":"78","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Manage_User\\ChiTietUser.jsx":"79"},{"size":614,"mtime":1662556007000,"results":"80","hashOfConfig":"81"},{"size":1214,"mtime":1662556007000,"results":"82","hashOfConfig":"81"},{"size":153,"mtime":1662556007000,"results":"83","hashOfConfig":"81"},{"size":396,"mtime":1662556007000,"results":"84","hashOfConfig":"81"},{"size":11477,"mtime":1679757429149,"results":"85","hashOfConfig":"81"},{"size":12677,"mtime":1679400169721,"results":"86","hashOfConfig":"81"},{"size":19893,"mtime":1679759669064,"results":"87","hashOfConfig":"81"},{"size":7228,"mtime":1677929819707,"results":"88","hashOfConfig":"81"},{"size":15281,"mtime":1679767152646,"results":"89","hashOfConfig":"81"},{"size":5763,"mtime":1678171920554,"results":"90","hashOfConfig":"81"},{"size":393,"mtime":1662556007000,"results":"91","hashOfConfig":"81"},{"size":13740,"mtime":1679714147024,"results":"92","hashOfConfig":"81"},{"size":2051,"mtime":1662556007000,"results":"93","hashOfConfig":"81"},{"size":3299,"mtime":1662556007000,"results":"94","hashOfConfig":"81"},{"size":7336,"mtime":1679805468645,"results":"95","hashOfConfig":"81"},{"size":247,"mtime":1662556007000,"results":"96","hashOfConfig":"81"},{"size":313,"mtime":1679332893326,"results":"97","hashOfConfig":"81"},{"size":546,"mtime":1679400203699,"results":"98","hashOfConfig":"81"},{"size":1175,"mtime":1677920940823,"results":"99","hashOfConfig":"81"},{"size":295,"mtime":1662556007000,"results":"100","hashOfConfig":"81"},{"size":335,"mtime":1662556007000,"results":"101","hashOfConfig":"81"},{"size":179,"mtime":1662556007000,"results":"102","hashOfConfig":"81"},{"size":693,"mtime":1679393813686,"results":"103","hashOfConfig":"81"},{"size":6549,"mtime":1679755771008,"results":"104","hashOfConfig":"81"},{"size":482,"mtime":1662556007000,"results":"105","hashOfConfig":"81"},{"size":363,"mtime":1662556007000,"results":"106","hashOfConfig":"81"},{"size":307,"mtime":1662556007000,"results":"107","hashOfConfig":"81"},{"size":400,"mtime":1679331587633,"results":"108","hashOfConfig":"81"},{"size":419,"mtime":1662556007000,"results":"109","hashOfConfig":"81"},{"size":341,"mtime":1662556007000,"results":"110","hashOfConfig":"81"},{"size":449,"mtime":1679294257750,"results":"111","hashOfConfig":"81"},{"size":4173,"mtime":1678174758810,"results":"112","hashOfConfig":"81"},{"size":5162,"mtime":1678173117558,"results":"113","hashOfConfig":"81"},{"size":986,"mtime":1662556007000,"results":"114","hashOfConfig":"81"},{"size":694,"mtime":1662556007000,"results":"115","hashOfConfig":"81"},{"size":1859,"mtime":1679396136829,"results":"116","hashOfConfig":"81"},{"size":2163,"mtime":1662556007000,"results":"117","hashOfConfig":"81"},{"size":2633,"mtime":1662556007000,"results":"118","hashOfConfig":"81"},{"size":523,"mtime":1662556007000,"results":"119","hashOfConfig":"81"},{"size":311,"mtime":1678173733567,"results":"120","hashOfConfig":"81"},{"size":786,"mtime":1677857085509,"results":"121","hashOfConfig":"81"},{"size":889,"mtime":1662556007000,"results":"122","hashOfConfig":"81"},{"size":504,"mtime":1690970288514,"results":"123","hashOfConfig":"124"},{"size":5408,"mtime":1690969988638,"results":"125","hashOfConfig":"124"},{"size":396,"mtime":1662556007000,"results":"126","hashOfConfig":"124"},{"size":10535,"mtime":1688652369436,"results":"127","hashOfConfig":"124"},{"size":19303,"mtime":1690642889391,"results":"128","hashOfConfig":"124"},{"size":22213,"mtime":1690643598957,"results":"129","hashOfConfig":"124"},{"size":4431,"mtime":1690633594812,"results":"130","hashOfConfig":"124"},{"size":7336,"mtime":1679805468645,"results":"131","hashOfConfig":"124"},{"size":4901,"mtime":1688878069655,"results":"132","hashOfConfig":"124"},{"size":9154,"mtime":1690630737619,"results":"133","hashOfConfig":"124"},{"size":313,"mtime":1679332893326,"results":"134","hashOfConfig":"124"},{"size":4626,"mtime":1690970094220,"results":"135","hashOfConfig":"124"},{"size":470,"mtime":1688271006443,"results":"136","hashOfConfig":"124"},{"size":585,"mtime":1681998614229,"results":"137","hashOfConfig":"124"},{"size":295,"mtime":1662556007000,"results":"138","hashOfConfig":"124"},{"size":1175,"mtime":1677920940823,"results":"139","hashOfConfig":"124"},{"size":846,"mtime":1690631122456,"results":"140","hashOfConfig":"124"},{"size":15943,"mtime":1690642090316,"results":"141","hashOfConfig":"124"},{"size":2893,"mtime":1682233545377,"results":"142","hashOfConfig":"124"},{"size":1665,"mtime":1688832125390,"results":"143","hashOfConfig":"124"},{"size":9072,"mtime":1690430694559,"results":"144","hashOfConfig":"124"},{"size":21026,"mtime":1690970780411,"results":"145","hashOfConfig":"124"},{"size":918,"mtime":1688874459415,"results":"146","hashOfConfig":"124"},{"size":17713,"mtime":1687499460582,"results":"147","hashOfConfig":"124"},{"size":16839,"mtime":1690687456139,"results":"148","hashOfConfig":"124"},{"size":37149,"mtime":1690733028612,"results":"149","hashOfConfig":"124"},{"size":3559,"mtime":1690689214005,"results":"150","hashOfConfig":"124"},{"size":6649,"mtime":1690633844370,"results":"151","hashOfConfig":"124"},{"size":21477,"mtime":1690427636338,"results":"152","hashOfConfig":"124"},{"size":19243,"mtime":1690688705470,"results":"153","hashOfConfig":"124"},{"size":186,"mtime":1687670752499,"results":"154","hashOfConfig":"124"},{"size":499,"mtime":1688876139678,"results":"155","hashOfConfig":"124"},{"size":18738,"mtime":1689082410067,"results":"156","hashOfConfig":"124"},{"size":1557,"mtime":1689126205999,"results":"157","hashOfConfig":"124"},{"size":319,"mtime":1690970435427,"results":"158","hashOfConfig":"124"},{"size":92,"mtime":1690631094191,"results":"159","hashOfConfig":"124"},{"size":450,"mtime":1690970039855,"results":"160","hashOfConfig":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"1kwqeag",{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"163"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"163"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"163"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"163"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"163"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"163"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"163"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"163"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"163"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"163"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"163"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},"5jtikp",{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"261"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"261"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"261"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"261"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"261"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"298"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"261"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"261"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"261"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"261"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"261"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"261"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"261"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"261"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"261"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"261"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"261"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"261"},"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\index.js",[],["357","358"],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\App.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\store.js",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\reportWebVitals.js",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Cart\\Cart.jsx",["359","360","361","362"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteCart, updateCart } from \"../Redux/Action/ActionCart\";\nimport ListCart from \"./Component/ListCart\";\nimport alertify from \"alertifyjs\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport convertMoney from \"../convertMoney\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n\nfunction Cart(props) {\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [cart, setCart] = useState([]);\n\n  const [total, setTotal] = useState();\n\n  const dispatch = useDispatch();\n\n  //State dùng để Load dữ liệu từ Redux\n  const [loadRedux, setLoadRedux] = useState({\n    idProduct: \"\",\n    count: \"\",\n  });\n\n  //State dùng để Load dữ liệu từ API\n  const [loadAPI, setLoadAPI] = useState(false);\n\n  //Hàm này dùng để Load dữ liệu ở Redux\n  //Khi người dùng chưa đăng nhập\n  useEffect(() => {\n    const fetchDataRedux = () => {\n      if (!localStorage.getItem(\"id_user\")) {\n        setCart(listCart);\n\n        getTotal(listCart);\n      }\n    };\n\n    fetchDataRedux();\n  }, [loadRedux]);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Hàm này dùng để load dữ liệu từ API\n  //Khi người dùng đã đăng nhập\n  useEffect(() => {\n    const fetchData = async () => {\n      if (localStorage.getItem(\"id_user\")) {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n        const query = \"?\" + queryString.stringify(params);\n        const response = await CartAPI.getCarts(query);\n        const arr = [];\n        response.user.cart.forEach(function (item, index) {\n          const data = {\n            count: item.quantity,\n            idProduct: item.productId._id,\n            idUser: response.user._id,\n            img: item.productId.img1,\n            nameProduct: item.productId.name,\n            priceProduct: item.productId.price,\n          };\n          arr.push(data);\n        });\n\n        setCart(arr);\n\n        getTotal(arr);\n      }\n    };\n\n    fetchData();\n    setLoadAPI(false);\n  }, [loadAPI]);\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onDeleteCart = (getUser, getProduct, count) => {\n    console.log(\"idUser: \" + getUser + \", idProduct: \" + getProduct);\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchDelete = async () => {\n        const params = {\n          idUser: getUser,\n          idProduct: getProduct,\n          count: count,\n        };\n\n        const response = await CartAPI.deleteToCart(params);\n\n        if (response) {\n          let timerInterval;\n          Swal.fire({\n            title: \"Adding products to cart!!\",\n            html: \"Add product successfully after <b></b> milliseconds.\",\n            timer: 1000,\n            timerProgressBar: true,\n            didOpen: () => {\n              Swal.showLoading();\n              const b = Swal.getHtmlContainer().querySelector(\"b\");\n              timerInterval = setInterval(() => {\n                b.textContent = Swal.getTimerLeft();\n              }, 100);\n            },\n            willClose: () => {\n              clearInterval(timerInterval);\n            },\n          }).then((result) => {\n            //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n            setLoadAPI(true);\n            alertify.set(\"notifier\", \"position\", \"bottom-left\");\n            alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n            /* Read more about handling dismissals below */\n            if (result.dismiss === Swal.DismissReason.timer) {\n              console.log(\"I was closed by the timer\");\n            }\n          });\n        }\n      };\n\n      fetchDelete();\n    } else {\n      // user chưa đăng nhập\n\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        idProduct: getProduct,\n        idUser: getUser,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = deleteCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        idProduct: getProduct,\n        count: \"\",\n      });\n    }\n  };\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onUpdateCount = (getUser, getProduct, getCount, calculation) => {\n    console.log(\n      \"Count: \" +\n        getCount +\n        \", idUser: \" +\n        getUser +\n        \", idProduct: \" +\n        getProduct\n    );\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchPut = async () => {\n        const params = {\n          idUser: getUser,\n          idProduct: getProduct,\n          count: getCount,\n          calculation: calculation,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.putToCart(query);\n        if (response) {\n          let timerInterval;\n          Swal.fire({\n            title: \"Updated products in cart!!\",\n            html: \"Update product successfully after <b></b> milliseconds.\",\n            timer: 1000,\n            timerProgressBar: true,\n            didOpen: () => {\n              Swal.showLoading();\n              const b = Swal.getHtmlContainer().querySelector(\"b\");\n              timerInterval = setInterval(() => {\n                b.textContent = Swal.getTimerLeft();\n              }, 100);\n            },\n            willClose: () => {\n              clearInterval(timerInterval);\n            },\n          }).then((result) => {\n            //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n            setLoadAPI(true);\n            alertify.set(\"notifier\", \"position\", \"bottom-left\");\n            alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n            /* Read more about handling dismissals below */\n            if (result.dismiss === Swal.DismissReason.timer) {\n              console.log(\"I was closed by the timer\");\n            }\n          });\n        }\n      };\n\n      fetchPut();\n\n      console.log(\"Ban Da Dang Nhap!\");\n    } else {\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        idProduct: getProduct,\n        idUser: getUser,\n        count: getCount,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = updateCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        idProduct: getProduct,\n        count: getCount,\n      });\n    }\n  };\n\n  //Hàm này dùng để redirect đến page checkout\n  const [redirect, setRedirect] = useState(false);\n\n  const onCheckout = () => {\n    if (!localStorage.getItem(\"id_user\")) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Đăng Nhập!\");\n      return;\n    }\n\n    if (cart.length === 0) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Giỏ Hàng!\");\n      return;\n    }\n\n    setRedirect(true);\n  };\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Cart</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Cart\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"py-5\">\n        <h2 className=\"h5 text-uppercase mb-4\">Shopping cart</h2>\n        <div className=\"row\">\n          <div className=\"col-lg-8 mb-4 mb-lg-0\">\n            <ListCart\n              listCart={cart}\n              onDeleteCart={onDeleteCart}\n              onUpdateCount={onUpdateCount}\n            />\n\n            <div className=\"bg-light px-4 py-3\">\n              <div className=\"row align-items-center text-center\">\n                <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\n                  <Link\n                    className=\"btn btn-link p-0 text-dark btn-sm\"\n                    to={`/shop`}\n                  >\n                    <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>\n                    Continue shopping\n                  </Link>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  {redirect && <Redirect to={\"/checkout\"} />}\n                  <span\n                    className=\"btn btn-outline-dark btn-sm\"\n                    onClick={onCheckout}\n                  >\n                    Proceed to checkout\n                    <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n              <div className=\"card-body\">\n                <h5 className=\"text-uppercase mb-4\">Cart total</h5>\n                <ul className=\"list-unstyled mb-0\">\n                  <li className=\"d-flex align-items-center justify-content-between\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Subtotal\n                    </strong>\n                    <span className=\"text-muted small\">\n                      {convertMoney(total)} VND\n                    </span>\n                  </li>\n                  <li className=\"border-bottom my-2\"></li>\n                  <li className=\"d-flex align-items-center justify-content-between mb-4\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Total\n                    </strong>\n                    <span>{convertMoney(total)} VND</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Cart;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Home\\Home.jsx",["363"],"import React, { useEffect, useState } from \"react\";\nimport Image from \"../Share/img/Image\";\nimport convertMoney from \"../convertMoney\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport openSocket from \"socket.io-client\";\n\nfunction Home(props) {\n  const [products, setProducts] = useState([]);\n\n  //Fetch Product\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/shop/\");\n        const data = res.data.splice(0, 8);\n        setProducts(data);\n      } catch (err) {\n        console.log(err);\n      }\n      openSocket(\"http://localhost:5000\");\n    };\n    getProducts();\n  }, []);\n\n  return (\n    <div className=\"page-holder\">\n      <header className=\"header bg-white\">\n        {products &&\n          products.map((value) => (\n            <div\n              className=\"modal fade show\"\n              id={`product_${value._id}`}\n              key={value._id}\n            >\n              <div\n                className=\"modal-dialog modal-lg modal-dialog-centered\"\n                role=\"document\"\n              >\n                <div className=\"modal-content\">\n                  <div className=\"modal-body p-0\">\n                    <div className=\"row align-items-stretch\">\n                      <div className=\"col-lg-6 p-lg-0\">\n                        <img\n                          style={{ width: \"100%\" }}\n                          className=\"product-view d-block h-100 bg-cover bg-center\"\n                          src={value.img1}\n                          data-lightbox={`product_${value._id}`}\n                          alt=\"\"\n                        />\n                        <img className=\"d-none\" href={value.img2} alt=\"\" />\n                        <img className=\"d-none\" href={value.img3} alt=\"\" />\n                      </div>\n                      <div className=\"col-lg-6\">\n                        {/* Để tắt modal phải có class=\"close\" và data-dissmiss=\"modal\" và aria-label=\"Close\" */}\n                        <a\n                          className=\"close p-4\"\n                          type=\"button\"\n                          href=\"#section_product\"\n                          data-dismiss=\"modal\"\n                          aria-label=\"Close\"\n                        >\n                          ×\n                        </a>\n                        <div className=\"p-5 my-md-4\">\n                          <h2 className=\"h4\">{value.name}</h2>\n                          <b className=\"text-muted\">\n                            {convertMoney(value.price)} VND\n                          </b>\n                          <br></br>\n                          <p className=\"text-small mb-4\">{value.short_desc}</p>\n                          <div className=\"row align-items-stretch mb-4\">\n                            <div className=\"col-sm-5 pl-sm-0 fix_addwish\">\n                              <a\n                                className=\"btn btn-dark btn-sm btn-block h-100 d-flex align-items-center justify-content-center px-0\"\n                                href={`/detail/${value._id}`}\n                                target=\"_blank\"\n                              >\n                                <i className=\"fa fa-shopping-cart\"></i>\n                                <span className=\"ml-2\">View Detail</span>\n                              </a>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n\n        <div className=\"container\">\n          <section\n            className=\"hero pb-3 bg-cover bg-center d-flex align-items-center\"\n            style={{ backgroundImage: `url(${Image.banner})` }}\n          >\n            <div className=\"container py-5\">\n              <div className=\"row px-4 px-lg-5\">\n                <div className=\"col-lg-6\">\n                  <p className=\"text-muted small text-uppercase mb-2\">\n                    New Inspiration 2020\n                  </p>\n                  <h1 className=\"h2 text-uppercase mb-3\">\n                    20% off on new season\n                  </h1>\n                  <a className=\"btn btn-dark\" href=\"./shop\">\n                    Browse collections\n                  </a>\n                </div>\n              </div>\n            </div>\n          </section>\n          <section className=\"pt-5\">\n            <header className=\"text-center\">\n              <p className=\"small text-muted small text-uppercase mb-1\">\n                Carefully created collections\n              </p>\n              <h2 className=\"h5 text-uppercase mb-4\">Browse our categories</h2>\n            </header>\n            <div className=\"row\">\n              <div className=\"col-md-12 mb-4\">\n                <div className=\"row\">\n                  <div className=\"col-md-6 mb-4 mb-md-0\">\n                    <Link\n                      className=\"category-item\"\n                      to={\"/shop?category=iphone\"}\n                    >\n                      <img className=\"img-fluid\" src={Image.img1} alt=\"\" />\n                    </Link>\n                  </div>\n                  <div className=\"col-md-6 mb-4 mb-md-0\">\n                    <Link className=\"category-item\" to={\"/shop?category=mac\"}>\n                      <img className=\"img-fluid\" src={Image.img2} alt=\"\" />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"row\">\n                  <div className=\"col-md-4 mb-4 mb-md-0\">\n                    <Link className=\"category-item\" to={\"/shop?category=ipad\"}>\n                      <img className=\"img-fluid\" src={Image.img3} alt=\"\" />\n                    </Link>\n                  </div>\n                  <div className=\"col-md-4 mb-4 mb-md-0\">\n                    <Link className=\"category-item\" to={\"/shop?category=watch\"}>\n                      <img className=\"img-fluid\" src={Image.img4} alt=\"\" />\n                    </Link>\n                  </div>\n                  <div className=\"col-md-4 mb-4 mb-md-0\">\n                    <Link\n                      className=\"category-item\"\n                      to={\"/shop?category=airpod\"}\n                    >\n                      <img className=\"img-fluid\" src={Image.img5} alt=\"\" />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <section className=\"py-5\" id=\"section_product\">\n            <header>\n              <p className=\"small text-muted small text-uppercase mb-1\">\n                Made the hard way\n              </p>\n              <h2 className=\"h5 text-uppercase mb-4\">Top trending products</h2>\n            </header>\n            <div className=\"row\">\n              {products &&\n                products.map((value) => (\n                  <div className=\"col-xl-3 col-lg-4 col-sm-6\" key={value._id}>\n                    <div className=\"product text-center\">\n                      <div className=\"position-relative mb-3\">\n                        <div className=\"badge text-white badge-\"></div>\n                        <a\n                          className=\"d-block\"\n                          href={`#product_${value._id}`}\n                          data-toggle=\"modal\"\n                        >\n                          <img className=\"img-fluid\" src={value.img1} alt=\"\" />\n                        </a>\n                        <div className=\"product-overlay\">\n                          <ul className=\"mb-0 list-inline\">\n                            {/* <li className=\"list-inline-item m-0 p-0\"><a className=\"btn btn-sm btn-outline-dark\" href=\"#\"><i className=\"far fa-heart\"></i></a></li> */}\n                            {/* <li className=\"list-inline-item m-0 p-0\">\n                                                            <Link className=\"btn btn-sm btn-dark\" to={`/detail/${value._id}`}>\n                                                                Add to cart\n                                                            </Link>\n                                                        </li> */}\n                          </ul>\n                        </div>\n                      </div>\n                      <h6>\n                        <Link\n                          className=\"reset-anchor\"\n                          to={`/detail/${value._id}`}\n                        >\n                          {value.name}\n                        </Link>\n                      </h6>\n                      <p className=\"small text-muted\">\n                        {convertMoney(value.price)} VND\n                      </p>\n                      <p className=\"small text-muted\">\n                        Pieces Available x {value.count}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </section>\n          <section className=\"py-5 bg-light\">\n            <div className=\"container\">\n              <div className=\"row text-center\">\n                <div className=\"col-lg-4 mb-3 mb-lg-0\">\n                  <div className=\"d-inline-block\">\n                    <div className=\"media align-items-end\">\n                      <svg className=\"svg-icon svg-icon-big svg-icon-light\">\n                        <use xlinkHref=\"#delivery-time-1\"></use>\n                      </svg>\n                      <div className=\"media-body text-left ml-3\">\n                        <h6 className=\"text-uppercase mb-1\">Free shipping</h6>\n                        <p className=\"text-small mb-0 text-muted\">\n                          Free shipping worlwide\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-4 mb-3 mb-lg-0\">\n                  <div className=\"d-inline-block\">\n                    <div className=\"media align-items-end\">\n                      <svg className=\"svg-icon svg-icon-big svg-icon-light\">\n                        <use xlinkHref=\"#helpline-24h-1\"> </use>\n                      </svg>\n                      <div className=\"media-body text-left ml-3\">\n                        <h6 className=\"text-uppercase mb-1\">24 x 7 service</h6>\n                        <p className=\"text-small mb-0 text-muted\">\n                          Free shipping worlwide\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-4\">\n                  <div className=\"d-inline-block\">\n                    <div className=\"media align-items-end\">\n                      <svg className=\"svg-icon svg-icon-big svg-icon-light\">\n                        <use xlinkHref=\"#label-tag-1\"> </use>\n                      </svg>\n                      <div className=\"media-body text-left ml-3\">\n                        <h6 className=\"text-uppercase mb-1\">Festival offer</h6>\n                        <p className=\"text-small mb-0 text-muted\">\n                          Free shipping worlwide\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <section className=\"py-5\">\n            <div className=\"container p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 mb-3 mb-lg-0\">\n                  <h5 className=\"text-uppercase\">Let's be friends!</h5>\n                </div>\n                <div className=\"col-lg-6\">\n                  <form action=\"#\">\n                    <div className=\"input-group flex-column flex-sm-row mb-3\">\n                      <input\n                        className=\"form-control form-control-lg py-3\"\n                        type=\"email\"\n                        placeholder=\"Enter your email address\"\n                        aria-describedby=\"button-addon2\"\n                      />\n                      <div className=\"input-group-append\">\n                        <button\n                          className=\"btn btn-dark btn-block\"\n                          id=\"button-addon2\"\n                          type=\"submit\"\n                        >\n                          Subscribe\n                        </button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Detail\\Detail.jsx",["364","365","366","367","368","369","370","371","372","373","374"],"import React, { useEffect, useState } from \"react\";\nimport ProductAPI from \"../API/ProductAPI\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport alertify from \"alertifyjs\";\nimport { addCart } from \"../Redux/Action/ActionCart\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport CommentAPI from \"../API/CommentAPI\";\nimport convertMoney from \"../../src/convertMoney\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nfunction Detail(props) {\n  const [detail, setDetail] = useState({});\n\n  const dispatch = useDispatch();\n\n  //id params cho từng sản phẩm\n  const { id } = useParams();\n\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [product, setProduct] = useState([]);\n\n  const [star, setStar] = useState(1);\n\n  const [comment, setComment] = useState(\"\");\n\n  // id_user đã đăng nhập\n  const idUser = useSelector((state) => state.Session.idUser);\n\n  // Listcomment\n  const [list_comment, set_list_comment] = useState([]);\n\n  // state này dùng để load lại comment khi user gửi comment lên\n  const [load_comment, set_load_comment] = useState(false);\n  // state này dùng để load lại detail khi Add to Cart\n  const [load, setLoad] = useState(false);\n\n  // Hàm này dùng để lấy dữ liệu comment\n  // Hàm này sẽ chạy lại phụ thuộc vào id Param\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\n          `http://localhost:5000/shop/product?prodId=${id}`\n        );\n        const data = await res.data;\n        set_list_comment(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  // Hàm thay đổi sao đánh giá\n  // const onChangeStar = (e) => {\n  //   setStar(e.target.value);\n  // };\n\n  // Hàm thay đổi comment\n  // const onChangeComment = (e) => {\n  //   setComment(e.target.value);\n  // };\n\n  // Hàm này dùng để bình luận\n  const handlerComment = () => {\n    if (idUser === \"\") {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Đăng Nhập!\");\n      return;\n    }\n\n    const fetchSendComment = async () => {\n      const params = {\n        idProduct: id,\n        idUser: localStorage.getItem(\"id_user\"),\n        fullname: localStorage.getItem(\"name_user\"),\n        content: comment,\n        star: star,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.postCommentProduct(query);\n      console.log(response);\n\n      set_load_comment(true);\n    };\n\n    fetchSendComment();\n\n    setComment(\"\");\n  };\n\n  // Hàm này dùng để load lại dữ liệu comment\n  // Phụ thuộc vào state load_comment\n  useEffect(() => {\n    if (load_comment) {\n      const fetchData = async () => {\n        const params = {\n          idProduct: id,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CommentAPI.getCommentProduct(query);\n        console.log(response);\n\n        set_list_comment(response);\n      };\n\n      fetchData();\n\n      set_load_comment(false);\n    }\n  }, [load_comment]);\n\n  //Hàm này gọi API và cắt chỉ lấy 4 sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/shop/\");\n        const data = await response.data;\n        setProduct(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  //Phần này là để thay đổi số lượng khi mua sản phẩm\n  const [text, setText] = useState(1);\n  const onChangeText = (e) => {\n    setText(e.target.value);\n  };\n\n  //Tăng lên 1 đơn vị\n  const upText = () => {\n    const value = parseInt(text) + 1;\n\n    setText(value);\n  };\n\n  //Giảm 1 đơn vị\n  const downText = () => {\n    const value = parseInt(text) - 1;\n\n    if (value === 0) return;\n\n    setText(value);\n  };\n\n  //Hàm này để lấy dữ liệu chi tiết sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\n          `http://localhost:5000/shop/product?prodId=${id}`\n        );\n        const data = await res.data;\n\n        setDetail(data);\n        setLoad(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [id, load]);\n\n  //Phần này dùng để xem review hay description\n  const [review, setReview] = useState(\"description\");\n  const handlerReview = (value) => {\n    setReview(value);\n  };\n\n  //Hàm này là Thêm Sản Phẩm\n  const addToCart = () => {\n    let id_user_cart = \"\";\n\n    if (localStorage.getItem(\"id_user\")) {\n      id_user_cart = localStorage.getItem(\"id_user\");\n    } else {\n      id_user_cart = id_user;\n    }\n\n    const data = {\n      idUser: id_user_cart,\n      idProduct: detail._id,\n      nameProduct: detail.name,\n      priceProduct: detail.price,\n      count: text,\n      img: detail.img1,\n    };\n\n    if (localStorage.getItem(\"id_user\")) {\n      console.log(\"Bạn Đã Đăng Nhập!\");\n\n      const fetchPost = async () => {\n        const params = {\n          idUser: id_user_cart, //localStorage.getItem('id_user')\n          idProduct: detail._id, // Lấy idProduct\n          count: text, // Lấy số lượng\n        };\n\n        const response = await CartAPI.postAddToCart(params);\n\n        if (response) {\n          let timerInterval;\n          Swal.fire({\n            title: \"Adding products to cart!!\",\n            html: \"Add product successfully after <b></b> milliseconds.\",\n            timer: 1000,\n            timerProgressBar: true,\n            didOpen: () => {\n              Swal.showLoading();\n              const b = Swal.getHtmlContainer().querySelector(\"b\");\n              timerInterval = setInterval(() => {\n                b.textContent = Swal.getTimerLeft();\n              }, 100);\n            },\n            willClose: () => {\n              clearInterval(timerInterval);\n            },\n          }).then((result) => {\n            setLoad(false);\n            alertify.set(\"notifier\", \"position\", \"bottom-left\");\n            alertify.success(\"Bạn Đã Thêm Hàng Thành Công!\");\n            /* Read more about handling dismissals below */\n            if (result.dismiss === Swal.DismissReason.timer) {\n              console.log(\"I was closed by the timer\");\n            }\n          });\n        }\n      };\n\n      fetchPost();\n    } else {\n      const action = addCart(data);\n      dispatch(action);\n    }\n  };\n\n  // Thông báo cho khách hàng biết khi hết sản Phẩm\n  useEffect(() => {\n    if (detail.count === 0) {\n      Swal.fire(\n        \"This product is out of stock, please see other product information.\"\n      );\n    }\n  }, [detail]);\n\n  return (\n    <section className=\"py-5\">\n      <div className=\"container\">\n        <div className=\"row mb-5\">\n          {detail.count === 0 && (\n            <h1 style={{ width: \"100%\", textAlign: \"center\", color: \"red\" }}>\n              (Products in stock are out of stock!)\n            </h1>\n          )}\n          <div className=\"col-lg-6\">\n            <div className=\"row m-sm-0\">\n              <div className=\"col-sm-2 p-sm-0 order-2 order-sm-1 mt-2 mt-sm-0\">\n                <div\n                  className=\"owl-thumbs d-flex flex-row flex-sm-column\"\n                  data-slider-id=\"1\"\n                >\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img1} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img2} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img3} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img4} alt=\"...\" />\n                  </div>\n                </div>\n              </div>\n\n              <div\n                id=\"carouselExampleControls\"\n                className=\"carousel slide col-sm-10 order-1 order-sm-2\"\n                data-ride=\"carousel\"\n              >\n                <div className=\"carousel-inner owl-carousel product-slider\">\n                  <div className=\"carousel-item active\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img1}\n                      alt=\"First slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img2}\n                      alt=\"Second slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img3}\n                      alt=\"Third slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img4}\n                      alt=\"Third slide\"\n                    />\n                  </div>\n                </div>\n                <a\n                  className=\"carousel-control-prev\"\n                  href=\"#carouselExampleControls\"\n                  role=\"button\"\n                  data-slide=\"prev\"\n                >\n                  <span\n                    className=\"carousel-control-prev-icon\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Previous</span>\n                </a>\n                <a\n                  className=\"carousel-control-next\"\n                  href=\"#carouselExampleControls\"\n                  role=\"button\"\n                  data-slide=\"next\"\n                >\n                  <span\n                    className=\"carousel-control-next-icon\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Next</span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\">\n            <br></br>\n            <h1>{detail.name}</h1>\n            <br></br>\n            <p className=\"text-muted lead\">{convertMoney(detail.price)} VND</p>\n            <br></br>\n            <p className=\"text-small mb-4\">{detail.short_desc}</p>\n            <ul className=\"list-unstyled small d-inline-block\">\n              <li className=\"mb-3 bg-white text-muted\">\n                <strong className=\"text-uppercase text-dark\">Category:</strong>\n                <a className=\"reset-anchor ml-2\">{detail.category}s</a>\n              </li>\n              <li className=\"mb-3 bg-white text-muted\">\n                <strong className=\"text-uppercase text-dark\">\n                  pieces available:\n                </strong>\n                <a className=\"reset-anchor ml-2\">{detail.count}</a>\n              </li>\n            </ul>\n            <div\n              className=\"row align-items-stretch mb-4\"\n              style={{ display: `${detail.count === 0 ? \"none\" : \"\"}` }}\n            >\n              <div className=\"col-sm-5 pr-sm-0\">\n                <div className=\"border d-flex align-items-center justify-content-between py-1 px-3 bg-white border-white\">\n                  <span className=\"small text-uppercase text-gray mr-4 no-select\">\n                    Quantity\n                  </span>\n                  <div className=\"quantity\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i className=\"fas fa-caret-left\" onClick={downText}></i>\n                    </button>\n                    <input\n                      className=\"form-control border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={text}\n                      onChange={(e) => {\n                        if (e.target.value <= detail.count) {\n                          if (!e.target.value) {\n                            setText(1);\n                          } else setText(e.target.value);\n                        } else setText(detail.count);\n                      }}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i\n                        className=\"fas fa-caret-right\"\n                        onClick={() => {\n                          const value = parseInt(text) + 1;\n                          if (value > detail.count) return;\n                          setText(value);\n                        }}\n                      ></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-3 pl-sm-0\">\n                <a\n                  className=\"btn btn-dark btn-sm btn-block d-flex align-items-center justify-content-center px-0 text-white\"\n                  onClick={addToCart}\n                >\n                  Add to cart\n                </a>\n              </div>\n              <br></br>\n              {detail && detail.count === Number(text) && (\n                <p style={{ color: \"red\" }}>\n                  You have reached the maximum quantity available for this item.\n                </p>\n              )}\n              <br></br>\n            </div>\n          </div>\n        </div>\n        {/* <div className='form-group'>\n\t\t\t\t\t<label htmlFor='exampleFormControlTextarea1'>Comment:</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\trows='3'\n\t\t\t\t\t\tonChange={onChangeComment}\n\t\t\t\t\t\tvalue={comment}></textarea>\n\t\t\t\t</div> */}\n        {/* <div className='d-flex justify-content-between'>\n\t\t\t\t\t<div className='d-flex w-25'>\n\t\t\t\t\t\t<span className='mt-2'>Evaluate: </span>\n\t\t\t\t\t\t&nbsp; &nbsp;\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='form-control w-25'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\tmax='5'\n\t\t\t\t\t\t\tvalue={star}\n\t\t\t\t\t\t\tonChange={onChangeStar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t&nbsp; &nbsp;\n\t\t\t\t\t\t<span className='mt-2'>Star</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName='btn btn-dark btn-sm btn-block px-0 text-white'\n\t\t\t\t\t\t\tstyle={{ width: '12rem' }}\n\t\t\t\t\t\t\tonClick={handlerComment}>\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div> */}\n        <br />\n        <ul className=\"nav nav-tabs border-0\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link fix_comment\"\n              onClick={() => handlerReview(\"description\")}\n              style={\n                review === \"description\"\n                  ? { backgroundColor: \"#383838\", color: \"#ffffff\" }\n                  : { color: \"#383838\" }\n              }\n            >\n              Description\n            </a>\n          </li>\n          {/* <li className='nav-item'>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName='nav-link fix_comment'\n\t\t\t\t\t\t\tonClick={() => handlerReview('review')}\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\treview === 'review'\n\t\t\t\t\t\t\t\t\t? { backgroundColor: '#383838', color: '#ffffff' }\n\t\t\t\t\t\t\t\t\t: { color: '#383838' }\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\tReviews\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li> */}\n        </ul>\n        <div className=\"tab-content mb-5\">\n          {review === \"description\" ? (\n            <div className=\"tab-pane fade show active\">\n              <div className=\"pt-4 pb-4 bg-white\">\n                <h6 className=\"text-uppercase\">Product description </h6>\n                <br></br>\n                <p\n                  className=\"text-muted text-small mb-0\"\n                  style={{ whiteSpace: \"pre-wrap\" }}\n                >\n                  {detail.long_desc}\n                </p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"tab-pane fade show active\">\n              <div className=\"p-4 p-lg-5 bg-white\">\n                <div className=\"row\">\n                  <div className=\"col-lg-8\">\n                    {list_comment &&\n                      list_comment.map((value) => (\n                        <div className=\"media mb-3\" key={value._id}>\n                          <img\n                            className=\"rounded-circle\"\n                            src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                            alt=\"\"\n                            width=\"50\"\n                          />\n                          <div className=\"media-body ml-3\">\n                            <h6 className=\"mb-0 text-uppercase\">\n                              {value.fullname}\n                            </h6>\n                            <p className=\"small text-muted mb-0 text-uppercase\">\n                              dd/mm/yyyy\n                            </p>\n                            <ul className=\"list-inline mb-1 text-xs\">\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star1}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star2}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star3}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star4}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star5}></i>\n                              </li>\n                            </ul>\n                            <p className=\"text-small mb-0 text-muted\">\n                              {value.content}\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <h2 className=\"h5 text-uppercase mb-4\">Related products</h2>\n        <div className=\"row\">\n          {product &&\n            product\n              .filter(\n                (el) => el.category === detail.category && el._id !== detail._id\n              )\n              .map((value) => (\n                <div className=\"col-lg-3 col-sm-6\" key={value._id}>\n                  <div className=\"product text-center skel-loader\">\n                    <div className=\"d-block mb-3 position-relative\">\n                      <img\n                        className=\"img-fluid w-100\"\n                        src={value.img1}\n                        alt=\"...\"\n                      />\n                      <div className=\"product-overlay\">\n                        <ul className=\"mb-0 list-inline\"></ul>\n                      </div>\n                    </div>\n                    <h6>\n                      <Link\n                        className=\"reset-anchor\"\n                        to={`/detail/${value._id}`}\n                      >\n                        {value.name}\n                      </Link>\n                    </h6>\n                    <p className=\"small text-muted\">\n                      {convertMoney(value.price)} VND\n                    </p>\n                  </div>\n                </div>\n              ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Detail;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\SignUp.jsx",["375"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport MessengerAPI from \"../API/MessengerAPI\";\nimport axios from \"axios\";\n\nSignUp.propTypes = {};\n\nfunction SignUp(props) {\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [errorEmail, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setPasswordError] = useState(false);\n  const [errorFullname, setFullnameError] = useState(false);\n  const [errorPhone, setPhoneError] = useState(false);\n\n  const [success, setSuccess] = useState(null);\n  const [click, setClick] = useState(false);\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handlerSignUp = (e) => {\n    e.preventDefault();\n    setClick(false);\n\n    if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setEmailRegex(false);\n      return;\n    } else {\n      setFullnameError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setFullnameError(false);\n      setEmailRegex(false);\n\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setPasswordError(false);\n        return;\n      } else {\n        setEmailError(false);\n        setPhoneError(false);\n        setPasswordError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setPasswordError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!password) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setPasswordError(true);\n            return;\n          } else {\n            setFullnameError(false);\n            setPhoneError(false);\n            setPasswordError(false);\n            setFullnameError(false);\n            setEmailRegex(false);\n\n            if (!phone) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(true);\n              setPasswordError(false);\n            } else {\n              console.log(\"Thanh Cong\");\n\n              const fetchSignUp = async (\n                fullname,\n                email,\n                password,\n                phonenumber\n              ) => {\n                try {\n                  const response = await axios.post(\n                    \"http://localhost:5000/sigup\",\n                    { fullname, email, password, phonenumber }\n                  );\n                  const data = await response.data;\n\n                  setSuccess(data);\n                } catch (err) {\n                  console.log(err);\n                }\n              };\n\n              fetchSignUp(fullname, email, password, phone);\n\n              // Hàm này dùng để tạo các conversation cho user và admin\n              const fetchConversation = async () => {\n                const params = {\n                  email: email,\n                  password: password,\n                };\n\n                const query = \"?\" + queryString.stringify(params);\n\n                const response = await MessengerAPI.postConversation(query);\n                console.log(response);\n              };\n\n              fetchConversation();\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  console.log(click);\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign Up</span>\n          <div className=\"d-flex justify-content-center pb-5\">\n            {errorFullname && (\n              <span className=\"text-danger\">\n                * Please Check Your Full Name!\n              </span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email!</span>\n            )}\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password!</span>\n            )}\n            {errorPhone && (\n              <span className=\"text-danger\">\n                * Please Check Your Phone Number!\n              </span>\n            )}\n            {success && success.user.length === 0 && (\n              <span className=\"text-danger\">{success.message}</span>\n            )}\n          </div>\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              value={fullname}\n              onChange={onChangeName}\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className={`input100 ${\n                success && success.user.length === 0 && !click && \"emailErr\"\n              }`}\n              value={email}\n              onChange={onChangeEmail}\n              type=\"text\"\n              placeholder=\"Email\"\n              onMouseDown={() => setClick(true)}\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={password}\n              onChange={onChangePassword}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={phone}\n              onChange={onChangePhone}\n              type=\"text\"\n              placeholder=\"Phone\"\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {success && success.user.length > 0 && <Redirect to={\"/signin\"} />}\n            <button className=\"login100-form-btn\" onClick={handlerSignUp}>\n              Sign Up\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Login?</span>\n            &nbsp;\n            <Link to=\"/signin\" className=\"txt2 hov1\">\n              Click\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Checkout\\Checkout.jsx",["376","377","378"],"import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport CheckoutAPI from \"../API/CheckoutAPI\";\nimport convertMoney from \"../convertMoney\";\nimport \"./Checkout.css\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nconst socket = io(\"http://localhost:5000\");\n\nfunction Checkout(props) {\n  const [carts, setCarts] = useState([]);\n\n  const [total, setTotal] = useState(0);\n\n  const [fullname, setFullname] = useState(\"\");\n  const [fullnameError, setFullnameError] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n\n  const [emailRegex, setEmailRegex] = useState(false);\n\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n\n  const [address, setAddress] = useState(\"\");\n  const [addressError, setAddressError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n\n  const [load, setLoad] = useState(false);\n\n  //Hàm này dùng để gọi API và render số sản phẩm\n  useEffect(() => {\n    if (localStorage.getItem(\"id_user\")) {\n      const fetchData = async () => {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query);\n\n        const arr = [];\n        response.user.cart.forEach(function (item, index) {\n          const data = {\n            count: item.quantity,\n            idProduct: item.productId._id,\n            idUser: response.user._id,\n            img: item.productId.img1,\n            nameProduct: item.productId.name,\n            priceProduct: item.productId.price,\n          };\n          arr.push(data);\n        });\n\n        setCarts(arr);\n\n        getTotal(arr);\n\n        if (response.length === 0) {\n          window.location.replace(\"/cart\");\n        }\n      };\n\n      fetchData();\n    }\n  }, []);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Check Validation\n  const handlerSubmit = () => {\n    if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setAddressError(false);\n      return;\n    } else {\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setAddressError(false);\n        return;\n      } else {\n        setPhoneError(false);\n        setAddressError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setAddressError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!phone) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(true);\n            setAddressError(false);\n            return;\n          } else {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setAddressError(false);\n\n            if (!address) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(false);\n              setAddressError(true);\n            } else {\n              console.log(\"đang tiến hành thêm sản phẩm vào đơn hàng\");\n\n              const addOrderDB = async (\n                userId,\n                fullName,\n                phoneNumber,\n                total,\n                address,\n                toEmail,\n                date\n              ) => {\n                // const params = {\n                //   to: email,\n                //   fullname: fullname,\n                //   phone: phone,\n                //   address: address,\n                //   idUser: localStorage.getItem(\"id_user\"),\n                // };\n\n                const response = await axios.post(\n                  \"http://localhost:5000/shop/create-order\",\n                  {\n                    userId,\n                    fullName,\n                    phoneNumber,\n                    total,\n                    address,\n                    toEmail,\n                    date,\n                  },\n                  {\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                    },\n                  }\n                );\n\n                if (response) {\n                  Swal.fire({\n                    position: \"top-end\",\n                    icon: \"success\",\n                    title: \"Đặt đơn hàng thành công\",\n                    showConfirmButton: false,\n                    timer: 3000,\n                  });\n                  setLoad(true);\n                } else {\n                  Swal.fire({\n                    icon: \"error\",\n                    title: \"Lỗi! Không đặt được đơn hàng\",\n                    text: \"Đã xảy ra sự cố, không thể thực hiện đặt Hàng.   Vui lòng xem lại thông tìn đơn hàng hoặc liên hệ tư vấn viên để được hỗ trợ.\",\n                    // footer:\n                    //   '<a href=\"\">Bạn có muốn liên hệ với tư vấn viên?</a>',\n                  });\n                }\n              };\n\n              addOrderDB(\n                localStorage.getItem(\"id_user\"),\n                fullname,\n                phone,\n                total,\n                address,\n                email,\n                new Date()\n              );\n            }\n          }\n        }\n      }\n    }\n  };\n\n  //Hàm này bắt đầu gửi Email xác nhận đơn hàng\n  useEffect(() => {\n    if (load) {\n      const sendMail = async () => {\n        try {\n          const params = {\n            to: email,\n            total: total,\n            fullname: fullname,\n            phone: phone,\n            address: address,\n            carts: carts,\n            idUser: localStorage.getItem(\"id_user\"),\n          };\n          const response = await CheckoutAPI.postEmail(params);\n\n          if (response.message === \"success\") {\n            setTimeout(() => {\n              setSuccess(true);\n              setLoad(false);\n            }, 3000);\n          } else {\n            setLoad(false);\n            Swal.fire({\n              icon: \"error\",\n              title: \"Lỗi! Không gửi được Email\",\n              text: \"Đã xảy ra sự cố, không thể gửi được Email. Bạn vui lòng kiểm tra lại thông tin liên hệ hoặc liên hệ với tư vấn viên để được hỗ trợ.\",\n              // footer:\n              //   '<a href=\"\">Bạn có muốn liên hệ với tư vấn viên?</a>',\n            });\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n      sendMail();\n\n      const data = localStorage.getItem(\"id_user\");\n\n      // Gửi socket lên server\n      socket.emit(\"send_order\", data);\n    }\n  }, [load]);\n\n  const onChangeName = (e) => {\n    setFullname(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div>\n      {load && (\n        <div className=\"wrapper_loader\">\n          <div className=\"loader\"></div>\n          <h3 className=\"textloader\">\n            Đang tiến hành lấy dữ liệu và gửi hóa đơn vào hộp thư của bạn!\n          </h3>\n        </div>\n      )}\n\n      <div className=\"container\">\n        <section className=\"py-5 bg-light\">\n          <div className=\"container\">\n            <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n              <div className=\"col-lg-6\">\n                <h1 className=\"h2 text-uppercase mb-0\">Checkout</h1>\n              </div>\n              <div className=\"col-lg-6 text-lg-right\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/cart\">Cart</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Checkout\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {!success && (\n          <section className=\"py-5\">\n            <h2 className=\"h5 text-uppercase mb-4\">Billing details</h2>\n            <div className=\"row\">\n              <div className=\"col-lg-8\">\n                <form>\n                  <div className=\"row\">\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Fullname\"\n                      >\n                        Full Name:\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={fullname}\n                        onChange={onChangeName}\n                        type=\"text\"\n                        placeholder=\"Enter Your Full Name Here!\"\n                      />\n                      {fullnameError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Full Name!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Email\"\n                      >\n                        Email:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={email}\n                        onChange={onChangeEmail}\n                        type=\"text\"\n                        placeholder=\"Enter Your Email Here!\"\n                      />\n                      {emailError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Email!\n                        </span>\n                      )}\n                      {emailRegex && (\n                        <span className=\"text-danger\">\n                          * Incorrect Email Format\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Phone\"\n                      >\n                        Phone Number:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={phone}\n                        onChange={onChangePhone}\n                        type=\"text\"\n                        placeholder=\"Enter Your Phone Number Here!\"\n                      />\n                      {phoneError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Phone Number!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Address\"\n                      >\n                        Address:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={address}\n                        onChange={onChangeAddress}\n                        type=\"text\"\n                        placeholder=\"Enter Your Address Here!\"\n                      />\n                      {addressError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Address!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <a\n                        className=\"btn btn-dark\"\n                        style={{ color: \"white\" }}\n                        type=\"submit\"\n                        onClick={handlerSubmit}\n                      >\n                        Place order\n                      </a>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"col-lg-4\">\n                <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n                  <div className=\"card-body\">\n                    <h5 className=\"text-uppercase mb-4\">Your order</h5>\n                    <ul className=\"list-unstyled mb-0\">\n                      {carts &&\n                        carts.map((value, index) => (\n                          <div key={index}>\n                            <li className=\"d-flex align-items-center justify-content-between\">\n                              <strong className=\"small font-weight-bold\">\n                                {value.nameProduct}\n                              </strong>\n                              <br></br>\n                              <span className=\"text-muted small\">\n                                {convertMoney(value.priceProduct)} VND x{\" \"}\n                                {value.count}\n                              </span>\n                            </li>\n                            <li className=\"border-bottom my-2\"></li>\n                          </div>\n                        ))}\n                      <li className=\"d-flex align-items-center justify-content-between\">\n                        <strong className=\"text-uppercase small font-weight-bold\">\n                          Total\n                        </strong>\n                        <span>{convertMoney(total)} VND</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        )}\n\n        {success && (\n          <section className=\"py-5\">\n            <div className=\"p-5\">\n              <h1>You Have Successfully Ordered!</h1>\n              <p style={{ fontSize: \"1.2rem\" }}>Please Check Your Email.</p>\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\SignIn.jsx",["379","380","381"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport axios from \"axios\";\n\nfunction SignIn(props) {\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [user, setUser] = useState(null);\n\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [checkPush, setCheckPush] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          const fetchSignIn = async (email, password) => {\n            try {\n              const response = await axios.post(\n                \"http://localhost:5000/login\",\n                {\n                  email,\n                  password,\n                },\n                {\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                  withCredentials: true,\n                }\n              );\n              const data = await response.data;\n              if (data) {\n                if (!data.isLogin) {\n                  data.message === \"Email is incorrect!\" && setErrorEmail(true);\n                  data.message === \"Password is incorrect!\" &&\n                    setErrorPassword(true);\n                  return;\n                } else {\n                  setErrorEmail(false);\n                  setErrorPassword(false);\n\n                  localStorage.setItem(\"id_user\", data.userId);\n\n                  localStorage.setItem(\"name_user\", data.userName);\n\n                  const action = addSession(localStorage.getItem(\"id_user\"));\n                  dispatch(action);\n\n                  setCheckPush(true);\n                }\n              }\n              setUser(data);\n            } catch (err) {\n              console.log(err);\n            }\n          };\n\n          fetchSignIn(email, password);\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    };\n\n    fetchData();\n  }, [checkPush]);\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign In</span>\n\n          <div className=\"d-flex justify-content-center pb-5\">\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password</span>\n            )}\n          </div>\n\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"text\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {redirect && <Redirect to={`/`} />}\n            <button className=\"login100-form-btn\" onClick={onSubmit}>\n              Sign in\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Create an account?</span>\n            &nbsp;\n            <Link to=\"/signup\" className=\"txt2 hov1\">\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\History\\History.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Shop.jsx",["382","383","384","385","386","387","388"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport ProductAPI from \"../API/ProductAPI\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./Component/Search\";\nimport Pagination from \"./Component/Pagination\";\nimport Products from \"./Component/Products\";\nimport SortProduct from \"./Component/SortProduct\";\nimport convertMoney from \"../convertMoney\";\nimport axios from \"axios\";\n\nfunction Shop(props) {\n  const [products, setProducts] = useState([]);\n  const [temp, setTemp] = useState([]);\n\n  //state dùng để sắp xếp sản phẩm\n  const [sort, setSort] = useState(\"default\");\n\n  //Tổng số trang\n  const [totalPage, setTotalPage] = useState();\n\n  // Get category parram from url by localtion\n  const category =\n    new URLSearchParams(window.location.search).get(\"category\") || \"all\";\n\n  //Từng trang hiện tại\n  const [pagination, setPagination] = useState({\n    page: \"1\",\n    count: \"9\",\n    search: \"\",\n    category: category,\n  });\n\n  //Hàm nà dùng để lấy value từ component SortProduct truyền lên\n  const handlerChangeSort = (value) => {\n    console.log(\"Value: \", value);\n\n    setSort(value);\n  };\n\n  //Hàm này dùng để thay đổi state pagination.page\n  //Nó sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\n  const handlerChangePage = (value) => {\n    console.log(\"Value: \", value);\n\n    //Sau đó set lại cái pagination để gọi chạy làm useEffect gọi lại API pagination\n    setPagination({\n      page: value,\n      count: pagination.count,\n      search: pagination.search,\n      category: pagination.category,\n    });\n  };\n\n  //Hàm này dùng để thay đổi state pagination.search\n  //Hàm này sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\n  const handlerSearch = (value) => {\n    console.log(\"Value: \", value);\n\n    setPagination({\n      page: pagination.page,\n      count: pagination.count,\n      search: value,\n      category: pagination.category,\n    });\n  };\n\n  //Hàm này dùng để thay đổi state pagination.category\n  const handlerCategory = (value) => {\n    console.log(\"Value: \", value);\n\n    setPagination({\n      page: pagination.page,\n      count: pagination.count,\n      search: pagination.search,\n      category: value,\n    });\n  };\n\n  //Gọi hàm useEffect tìm tổng số sản phẩm để tính tổng số trang\n  //Và nó phụ thuộc và state pagination\n  useEffect(() => {\n    const fetchAllData = async () => {\n      const response = await axios.get(\"http://localhost:5000/shop\");\n      const data = response.data;\n      const filterCategory = data.filter(\n        (x) => x.category === pagination.category\n      );\n\n      // Nếu mà category === 'all' thì nó sẽ gọi hàm get tất cả sản phẩm\n      // Ngược lại thì nó sẽ gọi hàm pagination và phân loại sản phẩm\n      if (pagination.category === \"all\") {\n        const totalPage = Math.ceil(\n          parseInt(data.length) / parseInt(pagination.count)\n        );\n        setTotalPage(totalPage);\n      } else {\n        const totalPage = Math.ceil(\n          parseInt(filterCategory.length) / parseInt(pagination.count)\n        );\n        setTotalPage(totalPage);\n      }\n\n      //Tính tổng số trang = tổng số sản phẩm / số lượng sản phẩm 1 trang\n    };\n\n    fetchAllData();\n  }, [pagination]);\n\n  //Gọi hàm Pagination\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"http://localhost:5000/shop\");\n      const data = await response.data;\n      const filterCategory = data.filter(\n        (x) => x.category === pagination.category\n      );\n      if (pagination.category === \"all\") {\n        setProducts(data);\n      } else {\n        setProducts(filterCategory);\n      }\n      setTemp(data);\n    };\n\n    fetchData();\n  }, [pagination]);\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Shop</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Shop\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* -------------Modal Product----------------- */}\n      {products &&\n        products.map((value) => (\n          <div\n            className=\"modal fade show\"\n            id={`product_${value._id}`}\n            key={value._id}\n          >\n            <div\n              className=\"modal-dialog modal-lg modal-dialog-centered\"\n              role=\"document\"\n            >\n              <div className=\"modal-content\">\n                <div className=\"modal-body p-0\">\n                  <div className=\"row align-items-stretch\">\n                    <div className=\"col-lg-6 p-lg-0\">\n                      <img\n                        style={{ width: \"100%\" }}\n                        className=\"product-view d-block h-100 bg-cover bg-center\"\n                        src={value.img1}\n                        data-lightbox={`product_${value._id}`}\n                      />\n                      <img className=\"d-none\" href={value.img2} />\n                      <img className=\"d-none\" href={value.img3} />\n                    </div>\n                    <div className=\"col-lg-6\">\n                      {/* Để tắt modal phải có class=\"close\" và data-dissmiss=\"modal\" và aria-label=\"Close\" */}\n                      <a\n                        className=\"close p-4\"\n                        type=\"button\"\n                        href=\"#section_product\"\n                        data-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                      >\n                        ×\n                      </a>\n                      <div className=\"p-5 my-md-4\">\n                        <ul className=\"list-inline mb-2\">\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                        </ul>\n                        <h2 className=\"h4\">{value.name}</h2>\n                        <p className=\"text-muted\">\n                          {convertMoney(value.price)} VND\n                        </p>\n                        <p className=\"text-small mb-4\">\n                          Lorem ipsum dolor sit amet, consectetur adipiscing\n                          elit. In ut ullamcorper leo, eget euismod orci. Cum\n                          sociis natoque penatibus et magnis dis parturient\n                          montes nascetur ridiculus mus. Vestibulum ultricies\n                          aliquam convallis.\n                        </p>\n                        <div className=\"row align-items-stretch mb-4\">\n                          <div className=\"col-sm-5 pl-sm-0 fix_addwish\">\n                            <a className=\"btn btn-dark btn-sm btn-block h-100 d-flex align-items-center justify-content-center px-0\">\n                              <i className=\"far fa-heart mr-2\"></i>\n                              Add Too Wish List\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {/* -------------Modal Product----------------- */}\n\n      <section className=\"py-5\">\n        <div className=\"container p-0\">\n          <div className=\"row\">\n            <div className=\"col-lg-3 order-2 order-lg-1\">\n              <h5 className=\"text-uppercase mb-4\">Categories</h5>\n              <div className=\"py-2 px-4 bg-dark text-white mb-3\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Apple\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal\">\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"all\")}\n                  >\n                    All\n                  </a>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Iphone & Mac\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal\">\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"iphone\")}\n                  >\n                    IPhone\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"ipad\")}\n                  >\n                    Ipad\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"macbook\")}\n                  >\n                    Macbook\n                  </a>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Wireless\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal\">\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"airpod\")}\n                  >\n                    Airpod\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"watch\")}\n                  >\n                    Watch\n                  </a>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Other\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal mb-5\">\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"mouse\")}\n                  >\n                    Mouse\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"keyboard\")}\n                  >\n                    Keyboard\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"other\")}\n                  >\n                    Other\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-lg-9 order-1 order-lg-2 mb-5 mb-lg-0\">\n              <div className=\"row mb-3 align-items-center\">\n                {/* ------------------Search----------------- */}\n                <Search handlerSearch={handlerSearch} />\n                {/* ------------------Search----------------- */}\n\n                <div className=\"col-lg-8\">\n                  <ul className=\"list-inline d-flex align-items-center justify-content-lg-end mb-0\">\n                    <li className=\"list-inline-item\">\n                      <SortProduct handlerChangeSort={handlerChangeSort} />\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <Products products={products} sort={sort} />\n\n              <Pagination\n                pagination={pagination}\n                handlerChangePage={handlerChangePage}\n                totalPage={totalPage}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Shop;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Share\\Footer\\Footer.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Share\\Header\\Header.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Share\\Chat\\Chat.jsx",["389","390","391","392","393","394"],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Reducer\\ReducerRoot.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\convertMoney.js",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\LoginLink.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\Name.jsx",["395"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\n\nfunction Name(props) {\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await UserAPI.getDetailData(\n        localStorage.getItem(\"id_user\")\n      );\n      setName(response.user);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <li className=\"nav-item dropdown\">\n      <a\n        className=\"nav-link dropdown-toggle\"\n        style={{ cursor: \"pointer\" }}\n        id=\"pagesDropdown\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        <i className=\"fas fa-user-alt mr-1 text-gray\"></i>\n        {name.fullName}\n      </a>\n      <div className=\"dropdown-menu mt-3\" aria-labelledby=\"pagesDropdown\">\n        {/* <Link\n\t\t\t\t\tclassName='dropdown-item border-0 transition-link'\n\t\t\t\t\tto={'/manage'}>\n\t\t\t\t\tManage\n\t\t\t\t</Link> */}\n        <Link\n          className=\"dropdown-item border-0 transition-link\"\n          to={\"/history\"}\n        >\n          History\n        </Link>\n      </div>\n    </li>\n  );\n}\n\nexport default Name;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Authentication\\LogoutLink.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Action\\ActionCart.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Action\\ActionSession.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\CartAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Cart\\Component\\ListCart.jsx",["396","397"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nListCart.propTypes = {\n  listCart: PropTypes.array,\n  onDeleteCart: PropTypes.func,\n  onUpdateCount: PropTypes.func,\n};\n\nListCart.defaultProps = {\n  listCart: [],\n  onDeleteCart: null,\n  onUpdateCount: null,\n};\n\nfunction ListCart(props) {\n  const { listCart, onDeleteCart, onUpdateCount } = props;\n\n  const handlerChangeText = (e) => {\n    console.log(e.target.value);\n  };\n\n  const handlerDelete = (getUser, getProduct, count) => {\n    if (!onDeleteCart) {\n      return;\n    }\n\n    onDeleteCart(getUser, getProduct, count);\n  };\n\n  const handlerDown = (getIdUser, getIdProduct, getCount, calculation) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    if (getCount === 1) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) - 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount, calculation);\n  };\n\n  const handlerUp = async (getIdUser, getIdProduct, getCount, calculation) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    const res = await axios.get(\n      `http://localhost:5000/shop/check-count?prodId=${getIdProduct}`\n    );\n    const data = await res.data;\n\n    if (data.count) {\n      //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n      const updateCount = parseInt(getCount) + 1;\n\n      onUpdateCount(getIdUser, getIdProduct, updateCount, calculation);\n    } else {\n      Swal.fire(\n        \"Số lượng sản phẩm này trong kho đã hêt, bạn không thể tăng thêm!!\"\n      );\n    }\n  };\n\n  return (\n    <div className=\"table-responsive mb-4\">\n      <table className=\"table\">\n        <thead className=\"bg-light\">\n          <tr className=\"text-center\">\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Image</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Product</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Price</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Quantity</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Total</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Remove</strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCart &&\n            listCart.map((value, index) => (\n              <tr className=\"text-center\" key={index}>\n                <td className=\"pl-0 border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor d-block animsition-link\"\n                      to={`/detail/${value.idProduct}`}\n                    >\n                      <img src={value.img} alt=\"...\" width=\"70\" />\n                    </Link>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor h6 animsition-link\"\n                      to={`/detail/${value.idProduct}`}\n                    >\n                      {value.nameProduct}\n                    </Link>\n                  </div>\n                </td>\n\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(value.priceProduct)} VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"quantity justify-content-center\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerDown(\n                          value.idUser,\n                          value.idProduct,\n                          value.count,\n                          \"reduce\"\n                        )\n                      }\n                    >\n                      <i className=\"fas fa-caret-left\"></i>\n                    </button>\n                    <input\n                      className=\"form-control form-control-sm border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={value.count}\n                      onChange={handlerChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerUp(\n                          value.idUser,\n                          value.idProduct,\n                          value.count,\n                          \"increase\"\n                        )\n                      }\n                    >\n                      <i className=\"fas fa-caret-right\"></i>\n                    </button>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(\n                      parseInt(value.priceProduct) * parseInt(value.count)\n                    )}{\" \"}\n                    VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <a\n                    className=\"reset-anchor remove_cart\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() =>\n                      handlerDelete(value.idUser, value.idProduct, value.count)\n                    }\n                  >\n                    <i className=\"fas fa-trash-alt small text-muted\"></i>\n                  </a>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListCart;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\ProductAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\UserAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\CommentAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\CheckoutAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\MessengerAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Share\\img\\Image.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\ChatRoomsAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\History\\Component\\DetailHistory.jsx",["398"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport HistoryAPI from \"../../API/HistoryAPI\";\nimport convertMoney from \"../../convertMoney\";\n\nfunction DetailHistory(props) {\n  const { id } = useParams();\n\n  const [cart, setCart] = useState([]);\n\n  const [information, setInformation] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await HistoryAPI.getDetail(id);\n      console.log(response.cart);\n\n      setCart(response.products);\n\n      console.log(response);\n\n      setInformation(response);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Detail Order</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\">Detail</li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"p-5\">\n        <h1 className=\"h2 text-uppercase\">Information Order</h1>\n        <p>ID User: {information.userId}</p>\n        <p>Full Name: {information.fullName}</p>\n        <p>Phone: {information.phoneNumber}</p>\n        <p>Address: {information.address}</p>\n        <p>Total: {convertMoney(information.total)} VND</p>\n      </div>\n\n      <div className=\"table-responsive pt-5 pb-5\">\n        <table className=\"table\">\n          <thead className=\"bg-light\">\n            <tr className=\"text-center\">\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">\n                  ID Product\n                </strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Image</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Name</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Price</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Count</strong>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {cart &&\n              cart.map((value, index) => (\n                <tr className=\"text-center\" key={index}>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.product._id}</h6>\n                  </td>\n                  <td className=\"pl-0 border-0\">\n                    <div className=\"media align-items-center justify-content-center\">\n                      <Link\n                        className=\"reset-anchor d-block animsition-link\"\n                        to={`/detail/${value.product._id}`}\n                      >\n                        <img src={value.product.img1} alt=\"...\" width=\"200\" />\n                      </Link>\n                    </div>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.product.name}</h6>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">\n                      {convertMoney(value.product.price)} VND\n                    </h6>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.quantity}</h6>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailHistory;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\History\\Component\\MainHistory.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\Search.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\SortProduct.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\Products.jsx",["399"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\n\nProducts.propTypes = {\n  products: PropTypes.array,\n  sort: PropTypes.string,\n};\n\nProducts.defaultProps = {\n  products: [],\n  sort: \"\",\n};\n\nfunction Products(props) {\n  const { products, sort } = props;\n\n  if (sort === \"DownToUp\") {\n    products.sort((a, b) => {\n      return a.price - b.price;\n    });\n  } else if (sort === \"UpToDown\") {\n    products.sort((a, b) => {\n      return b.price - a.price;\n    });\n  }\n\n  return (\n    <div className=\"row\">\n      {/* -------------Product----------------- */}\n      {products &&\n        products.map((value) => (\n          <div className=\"col-lg-4 col-sm-6 Section_Category\" key={value._id}>\n            <div className=\"product text-center\">\n              <div className=\"position-relative mb-3\">\n                <div className=\"badge text-white badge-\"></div>\n                <Link className=\"d-block\" to={`/detail/${value._id}`}>\n                  <img className=\"img-fluid w-100\" src={value.img1} alt=\"...\" />\n                </Link>\n                <div className=\"product-overlay\">\n                  <ul className=\"mb-0 list-inline\"></ul>\n                </div>\n              </div>\n              <h6>\n                {\" \"}\n                <a className=\"reset-anchor\" href={`/detail/${value._id}`}>\n                  {value.name}\n                </a>\n              </h6>\n              <p className=\"small text-muted\">\n                {convertMoney(value.price)} VND\n              </p>\n              <p className=\"small text-muted\">\n                Pieces Available x {value.count}\n              </p>\n            </div>\n          </div>\n        ))}\n      {/* -------------Product----------------- */}\n    </div>\n  );\n}\n\nexport default Products;\n","C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\Pagination.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Reducer\\ReducerCart.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Redux\\Reducer\\ReducerSession.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\HistoryAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\API\\axiosClient.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Nodejs\\asm3\\CLIENT\\src\\Shop\\Component\\IndexPage.jsx",["400"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nIndexPage.propTypes = {\n\tindexPage: PropTypes.array,\n\thandlerChangePage: PropTypes.func,\n\tpagination: PropTypes.object,\n};\n\nIndexPage.defaultProps = {\n\tindexPage: null,\n\thandlerChangePage: null,\n\tpagination: {},\n};\n\nfunction IndexPage(props) {\n\tconst { indexPage, handlerChangePage, pagination } = props;\n\n\tconst { page } = pagination;\n\n\tconst onIndexPage = (value) => {\n\t\tif (!handlerChangePage) {\n\t\t\treturn;\n\t\t}\n\n\t\thandlerChangePage(value);\n\t};\n\n\tconsole.log(indexPage);\n\n\treturn (\n\t\t<div className='d-flex'>\n\t\t\t{indexPage &&\n\t\t\t\tindexPage.map((value) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tvalue === parseInt(page) ? 'page-item active' : 'page-item'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\tonClick={() => onIndexPage(value)}>\n\t\t\t\t\t\t<a className='page-link'>{value}</a>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default IndexPage;\n",["401","402"],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\index.js",[],["403","404"],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\App.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\reportWebVitals.js",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\SignUp.jsx",["405"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n// import \"./Auth.css\";\n// import queryString from \"query-string\";\n// import MessengerAPI from \"../API/MessengerAPI\";\nimport UserAPI from \"../API/UserAPI\";\nimport axios from \"axios\";\nimport { Button, Form, Input, Spin, Result } from \"antd\";\nimport Swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport styled from \"./Auth.module.css\";\n\nfunction SignUp(props) {\n  // dùng để chuyển hình ảnh trong phần đăng ký\n  const [taiKhoanVaEmail, setTaiKhoanVaEmail] = useState([]);\n\n  const [maXacNhan, setMaXacNhan] = useState(false);\n  const [ma, setMa] = useState(\"\");\n  const [load, setLoad] = useState(false);\n  const [createSuccess, setCreateSuccess] = useState(false);\n\n  const history = useHistory();\n  const locaton = useLocation();\n\n  const [form] = Form.useForm();\n  console.log(locaton);\n\n  //thông báo tự đông chuyển trang\n  const notify = () =>\n    toast.success(\"Chuẩn bị chuyến đến màng hình đăng nhập!\", {\n      autoClose: 3000,\n      onClose: () => {\n        setCreateSuccess(false);\n        history.push(\"/signin\", { pathName: locaton.pathname });\n      },\n    });\n\n  window.scrollTo(0, 143);\n  // hook useEffect này dùng để gọi API và lấy giá trị của tên đăng nhập và email đã được đăng ký\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await UserAPI.getAllTenDangNhap();\n        setTaiKhoanVaEmail(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [load]);\n  //hàm dùng để kiểm tra value nhập có trùng với tên đăng nhập hay Email dữ liệu đã có trong hệ thống hay không\n  const kiemTraTaiKhoan = (e) => {\n    return taiKhoanVaEmail && taiKhoanVaEmail.find((x) => x.TenDangNhap === e);\n  };\n  const kiemTraEmail = (e) => {\n    return taiKhoanVaEmail && taiKhoanVaEmail.find((x) => x.Email === e);\n  };\n\n  const onFinish = async (values) => {\n    // console.log(\"Success:\" /*, values*/);\n    try {\n      if (maXacNhan) {\n        setLoad(true);\n        const res = await UserAPI.postMaXacThucAndCreatedUser(values, ma);\n        if (res.message === \"Tạo tài khoản thành công!\") {\n          setLoad(false);\n          setCreateSuccess(true);\n          form.resetFields();\n          // Swal.fire({\n          //   position: \"top-end\",\n          //   icon: \"success\",\n          //   title: \"tạo tài khoản thành công!\",\n          //   showConfirmButton: false,\n          //   timer: 3000,\n          // }).then(() => {\n          notify();\n          // });\n        } else {\n          setLoad(false);\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"error\",\n            title: \"tạo tài khoản thất bại!\",\n            showConfirmButton: false,\n            timer: 4000,\n          });\n        }\n        setMaXacNhan(false);\n      } else {\n        setLoad(true);\n        const res = await UserAPI.postSendEmail(values);\n        if (res.message === \"success\") {\n          setLoad(false);\n          setMaXacNhan(true);\n          setMa(res.token);\n        } else {\n          setLoad(false);\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"error\",\n            title: \"tạo tài khoản thất bại!\",\n            showConfirmButton: false,\n            timer: 4000,\n          });\n        }\n      }\n    } catch (err) {\n      setLoad(false);\n      console.log(err.response);\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"error\",\n        title: err.response?.data.errors[0].msg,\n        showConfirmButton: false,\n        timer: 4000,\n      });\n    }\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Spin\n      tip=\"...Loading\"\n      size=\"large\"\n      spinning={load ? true : false}\n      style={{ top: 100 }}\n    >\n      <div className={styled.font_Sigup}>\n        <Form\n          style={{ display: !createSuccess ? \"block\" : \"none\" }}\n          name=\"basic\"\n          form={form}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onKeyDown={(e) => (e.key === \"Enter\" ? e.preventDefault() : \"\")}\n          layout=\"vertical\"\n        >\n          <h1>Đăng Ký</h1>\n          <div style={{ display: maXacNhan ? \"none\" : \"block\" }}>\n            <Form.Item\n              label=\"Tên đăng nhập\"\n              name=\"TenDangNhap\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Tên đăng nhập không được để trống!\",\n                },\n                { max: 100, message: \"Số ký tự không được vượt quá 100 ký tự\" },\n                {\n                  pattern: new RegExp(/^[a-zA-Z0-9]+$/i),\n                  message:\n                    \"Tên đăng nhập chỉ cho phép các chữ cái (a-z,A-Z) số (0-9)\",\n                },\n                () => ({\n                  validator(_, value) {\n                    if (!value || !kiemTraTaiKhoan(value)) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(\"Tên tài khoản đã có người sử dụng!\")\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input placeholder=\"Nhập tên đăng nhập\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Họ và tên\"\n              name=\"HoVaTen\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Họ và tên không được để trống!\",\n                },\n                { max: 150, message: \"Số ký tự không được vượt quá 150 ký tự\" },\n              ]}\n            >\n              <Input placeholder=\"Nhập họ và tên\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Email\"\n              name=\"Email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Email không được để trống!\",\n                },\n                { max: 50, message: \"Số ký tự không được vượt quá 50 ký tự\" },\n                {\n                  pattern: new RegExp(\n                    /^[a-zA-Z0-9._]+@[a-zA-Z0-9]+\\.(com|vn)$/g\n                  ),\n                  message: \"Email không hợp lệ\",\n                },\n                {\n                  pattern: new RegExp(/^[a-zA-Z0-9@.]+$/i),\n                  message:\n                    \"Email chỉ cho phép các chữ cái (a-z,A-Z) số (0-9) và dấu chấm (.)\",\n                },\n                () => ({\n                  validator(_, value) {\n                    if (!value || !kiemTraEmail(value)) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(\n                        \"Email đã tồn tại trên hệ thông! hãy chọn email khác.\"\n                      )\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input placeholder=\"Nhập Email\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Mật Khẩu\"\n              name=\"MatKhau\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Mật khẩu không được để trống!\",\n                },\n                { max: 50, message: \"Số ký tự không được vượt quá 50 ký tự\" },\n                { min: 8, message: \"Số ký tự it nhất là 8 ký tự\" },\n              ]}\n            >\n              <Input.Password placeholder=\"Nhập mật khâu\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Nhập lại mật khẩu\"\n              name=\"NhapLaiMatKhau\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Vui lòng nhập lại mật khẩu\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue(\"MatKhau\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(\"Hai mật khẩu bạn đã nhập không khớp!\")\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password placeholder=\"Nhập lại mật khẩu\" />\n            </Form.Item>\n\n            <Form.Item style={{ textAlign: \"center\" }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Đăng ký\n              </Button>\n            </Form.Item>\n          </div>\n          <div style={{ display: maXacNhan ? \"block\" : \"none\" }}>\n            <Form.Item\n              label=\"Xác nhận mã\"\n              name=\"XacNhanMa\"\n              rules={[\n                () => ({\n                  validator(_, value) {\n                    if (!value || (value && value.length === 6)) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(\"Số ký tự it nhất là 6 ký tự\")\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input placeholder=\"Nhập mã xác nhận\" maxLength={6} />\n            </Form.Item>\n            <p>\n              Vui lòng kiểm tra email đã nhập ở mục đăng ký để lấy mã xác thực!\n            </p>\n            <Form.Item style={{ textAlign: \"center\" }}>\n              <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"50%\" }}>\n                Xác nhận\n              </Button>\n            </Form.Item>\n          </div>\n        </Form>\n        <Result\n          style={{ display: !createSuccess ? \"none\" : \"block\" }}\n          status=\"success\"\n          title=\"Bạn đã đăng ký tài khoản thành công!\"\n          subTitle=\"hệ thống chuẩn bị chuyển sang màn hình đăng nhập!\"\n          // extra={[\n          //   <Button type=\"primary\" key=\"console\">\n          //     Go Console\n          //   </Button>,\n          //   <Button key=\"buy\">Buy Again</Button>,\n          // ]}\n        />\n      </div>\n    </Spin>\n  );\n}\n\nexport default SignUp;\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Home\\Home.jsx",["406","407","408","409","410","411","412","413","414","415"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Card,\n  Col,\n  Row,\n  Button,\n  Progress,\n  Typography,\n  Pagination,\n  Tooltip,\n  Spin,\n  Empty,\n} from \"antd\";\nimport convertMoney from \"../convertMoney\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Image from \"../Img/Image\";\nimport CampaignAPI from \"../API/CampaignAPI\";\nimport styled from \"./Home.module.css\";\nimport \"./Home.css\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\nfunction Home(props) {\n  const [products, setProducts] = useState([]);\n  const [data, setData] = useState([]);\n  const [pageUnfCampaign, setPageUnfCampaign] = useState({\n    page: 1,\n    pageSize: 6,\n  });\n  const [dataUnfCamapaign, setDataUnfCamapaign] = useState([]);\n  const [unfLoad, setUnfLoad] = useState(false);\n\n  const [pageCmpCampaign, setPageCmpCampaign] = useState({\n    page: 1,\n    pageSize: 6,\n  });\n  const [dataCmpCamapaign, setDataCmpCamapaign] = useState([]);\n  const [CmpLoad, setCmpLoad] = useState(false);\n\n  const history = useHistory();\n  //xử lý sự kiện onchang môi khi chuyển trang hoặc thêm mục hiện thì trong đợt quyên góp chưa hoàn thành\n  const onChangePageUnfCampaign = (page, pageSize) => {\n    setPageUnfCampaign({ page: page, pageSize: pageSize });\n    setUnfLoad(true);\n  };\n  //xử lý sự kiện onchang môi khi chuyển trang hoặc thêm mục hiện thì trong đợt quyên góp đã hoàn thành\n  const onChangePageCmpCampaign = (page, pageSize) => {\n    setPageCmpCampaign({ page: page, pageSize: pageSize });\n    setCmpLoad(true);\n  };\n\n  // Get toàn bộ dữ liệu campaign\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await CampaignAPI.getAllCampaign();\n        if (res.message === \"lấy dữ liệu thanh công\") {\n          setData(res.data);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  //Get dữ liệu campaign chưa hoàn thành cà đã phân trang\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await CampaignAPI.getUnfCampaign(pageUnfCampaign);\n        if (res.message === \"lấy dữ liệu thanh công\") {\n          setDataUnfCamapaign(res);\n          setUnfLoad(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setUnfLoad(false);\n      }\n    };\n\n    fetchData();\n  }, [pageUnfCampaign]);\n\n  //Get dữ liệu campaign đã hoàn thành cà đã phân trang\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await CampaignAPI.getCmpCampaign(pageCmpCampaign);\n        if (res.message === \"lấy dữ liệu thanh công\") {\n          setDataCmpCamapaign(res);\n          setCmpLoad(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setCmpLoad(false);\n      }\n    };\n\n    fetchData();\n  }, [pageCmpCampaign]);\n\n  const tongTienDaNhan = data\n    ?.reduce((acc, cur) => acc + cur.SoTienDaNhan, 0)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    .split(\",\");\n\n  return (\n    <div className=\"page-holder\" style={{ margin: \"0 0 20px 0\" }}>\n      <header className=\"header bg-white\">\n        <div className=\"container\">\n          <section\n            className=\"hero pb-3 bg-cover bg-center d-flex align-items-center\"\n            style={{ backgroundImage: `url(${Image.img1})` }}\n          >\n            <div className=\"container py-5\">\n              <div className=\"row px-4 px-lg-5\">\n                <div className={styled.banner}>\n                  {/* <p className=\"text-muted small text-uppercase mb-2\">\n                    New Inspiration 2020\n                  </p> */}\n                  <h1 className=\"h2  mb-3\" style={{ color: \"#ff00c3\" }}>\n                    \"Chúng ta cùng chung tay vì một Việt Nam tốt đẹp hơn, bằng\n                    cách lan tỏa lòng nhân ái, chuyển hóa khổ đau\"\n                  </h1>\n                </div>\n              </div>\n            </div>\n          </section>\n          <section\n            className={styled.thanhtich}\n            style={{ backgroundColor: \"white\" }}\n          >\n            <div\n              className=\"container\"\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <div style={{ width: \"48%\", alignSelf: \"center \" }}>\n                <h1>\n                  {/* ĐÊN HÔM NAY NHỮNG NGƯỜI HẢO TÂM VÀ QUỸ VÌ TRÁI TIM ĐÃ LÀM\n                  ĐƯỢC: */}\n                  Đến Hôm Nay Những Hào Tâm Đồng Hành Cùng Với Quỹ Trái Tim Nhân\n                  Ái Đã Làm Được\n                </h1>\n                <Row className={styled.thongke}>\n                  <Col span={7}>\n                    <h2>{data?.length}</h2>\n                    <p>Dự án đã được gây quỹ thành công</p>\n                  </Col>\n                  <Col span={7}>\n                    <h2>\n                      {tongTienDaNhan && tongTienDaNhan.length === 2\n                        ? tongTienDaNhan[0] + \"+\" + \" \" + \"Nghìn\"\n                        : tongTienDaNhan.length === 3\n                        ? tongTienDaNhan[0] + \"+\" + \" \" + \"Triệu\"\n                        : tongTienDaNhan[0] + \"+\" + \" \" + \"Tỷ\"}\n                    </h2>\n                    <p>Đồng được quyên góp</p>\n                  </Col>\n                  <Col span={7}>\n                    <h2>\n                      {data?.reduce((acc, cur) => acc + cur.LuotQuyenGop, 0)}\n                    </h2>\n                    <p>Lượt quyên góp</p>\n                  </Col>\n                </Row>\n              </div>\n              <div style={{ maxWidth: \"48%\", objectFit: \"cover\" }}>\n                {/* <img src={Image.donation} alt={Image.donation} /> */}\n                <p className={styled.mucdich}>\n                  - Hướng tới sự thuận tiện và minh bạch,liên kết với những quỹ\n                  thiện nguyện, những dự án cộng đồng, trở thành cầu nối cho các\n                  nhà hảo tâm.\n                </p>\n                <p className={styled.mucdich}>\n                  - Giúp việc quyên góp tiền từ thiện trở nên đơn giản, chỉ gói\n                  gọn trong vài thao tác nhỏ trên laptop hoặc điện thoại di\n                  động. Các thông tin về đóng góp, tài trợ được công khai và cập\n                  nhật liên tục, người dùng có thể dễ dàng tra cứu.\n                </p>\n              </div>\n            </div>\n          </section>\n          {dataUnfCamapaign.data?.length === 0 && (\n            <section className=\"pt-5\">\n              <header className=\"text-center\">\n                {/* <p className=\"small text-muted small text-uppercase mb-1\">\n                Carefully created collections\n              </p> */}\n                <h2\n                  className=\"h5 text-uppercase mb-4\"\n                  style={{ color: \"#0798db\" }}\n                >\n                  Những đợt quyên góp đang được tiến hành\n                </h2>\n              </header>\n              <Empty description={false}>\n                <p>Hiện không có đợt quyên góp nào được tiến hành</p>\n              </Empty>\n            </section>\n          )}\n          {dataUnfCamapaign.data?.length > 0 && (\n            <section className=\"pt-5\">\n              <header className=\"text-center\">\n                {/* <p className=\"small text-muted small text-uppercase mb-1\">\n                Carefully created collections\n              </p> */}\n                <h2\n                  className=\"h5 text-uppercase mb-4\"\n                  style={{ color: \"#0798db\" }}\n                >\n                  Những đợt quyên góp đang được tiến hành\n                </h2>\n              </header>\n              <Spin tip=\"Loading...\" spinning={unfLoad} size=\"large\">\n                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                  {dataUnfCamapaign?.data?.length > 0 &&\n                    dataUnfCamapaign?.data?.map((item, index) => (\n                      <Card\n                        key={index}\n                        hoverable\n                        style={{ width: \"31%\", margin: \"1% 1% 1% 1%\" }}\n                        cover={\n                          <img\n                            alt=\"example\"\n                            src={item.HinhAnh.length > 0 && item.HinhAnh[0].url}\n                          />\n                        }\n                        actions={[\n                          <Button\n                            type=\"primary\"\n                            onClick={() =>\n                              history.push({\n                                pathname: `/quyengop/${item._id}`,\n                                state: item,\n                              })\n                            }\n                          >\n                            Đóng Góp\n                          </Button>,\n                        ]}\n                      >\n                        <Tooltip\n                          title={item.TieuDe}\n                          placement=\"bottom\"\n                          color=\"#0798db\"\n                        >\n                          <div>\n                            <Meta\n                              title={item.TieuDe}\n                              style={{ marginBottom: 10 }}\n                            />\n                          </div>\n                        </Tooltip>\n                        <div>\n                          <div\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <Text\n                              style={{\n                                backgroundColor: \"#86d9ffbf\",\n                                color: \"#3a83e6\",\n                                padding: \"1% 2% 1% 2%\",\n                                borderRadius: \"5px\",\n                              }}\n                            >\n                              {item.MaHoanCanh}\n                            </Text>\n                            <Text\n                              style={{\n                                backgroundColor: \"#d7ad2f61\",\n                                color: \"#ff9900\",\n                                padding: \"1% 2% 1% 2%\",\n                                borderRadius: \"5px\",\n                              }}\n                            >\n                              Còn{\" \"}\n                              {Math.ceil(\n                                (new Date(item.NgayKetThuc) - new Date()) /\n                                  1000 /\n                                  60 /\n                                  60 /\n                                  24\n                              )}{\" \"}\n                              ngày\n                            </Text>\n                          </div>\n                          <Row>\n                            <Text strong>\n                              {convertMoney(\n                                item.SoTienDaNhan ? item.SoTienDaNhan : 0\n                              )}\n                              đ\n                            </Text>\n                            <Text>/{convertMoney(item.SoTienHuyDong)}đ</Text>\n                          </Row>\n                          <Progress\n                            strokeColor=\"#0798db\"\n                            percent={(\n                              ((item.SoTienDaNhan ? item.SoTienDaNhan : 0) /\n                                item.SoTienHuyDong) *\n                              100\n                            ).toFixed(2)}\n                            showInfo={false}\n                          />\n                          <Row className={styled.solieu}>\n                            <Col span={12}>\n                              <p>Lượt quyên góp</p>\n                              <p>\n                                <b>\n                                  {item.LuotQuyenGop ? item.LuotQuyenGop : 0}\n                                </b>\n                              </p>\n                            </Col>\n                            <Col span={12}>\n                              <p>Đạt được</p>\n                              <p>\n                                <b>\n                                  {(\n                                    ((item.SoTienDaNhan\n                                      ? item.SoTienDaNhan\n                                      : 0) /\n                                      item.SoTienHuyDong) *\n                                    100\n                                  ).toFixed(2)}\n                                  %\n                                </b>\n                              </p>\n                            </Col>\n                          </Row>\n                        </div>\n                      </Card>\n                    ))}\n                </div>\n              </Spin>\n              <Pagination\n                defaultCurrent={pageUnfCampaign.page}\n                defaultPageSize={pageUnfCampaign.pageSize}\n                current={pageUnfCampaign?.page}\n                // total={data.length}\n                // showTotal={showTotal}\n                pageSizeOptions={[6, 12, 24, 48]}\n                onChange={onChangePageUnfCampaign}\n                total={dataUnfCamapaign.total}\n                showSizeChanger\n                style={{ textAlign: \"center\" }}\n              />\n            </section>\n          )}\n\n          {dataCmpCamapaign.data?.length > 0 && (\n            <section className=\"pt-5\">\n              <header className=\"text-center\">\n                {/* <p className=\"small text-muted small text-uppercase mb-1\">\n                Carefully created collections\n              </p> */}\n                <h2\n                  className=\"h5 text-uppercase mb-4\"\n                  style={{ color: \"#db07b1\" }}\n                >\n                  Những đợt quyên góp Đã Hoàn Thành\n                </h2>\n              </header>\n              <Spin tip=\"Loading...\" spinning={CmpLoad} size=\"large\">\n                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                  {dataCmpCamapaign?.data?.length > 0 &&\n                    dataCmpCamapaign?.data?.map((item, index) => (\n                      <Card\n                        key={index}\n                        hoverable\n                        style={{ width: \"31%\", margin: \"1% 1% 1% 1%\" }}\n                        cover={\n                          <img\n                            alt=\"example\"\n                            src={item.HinhAnh.length > 0 && item.HinhAnh[0].url}\n                          />\n                        }\n                        actions={[\n                          <Button\n                            type=\"text\"\n                            onClick={() =>\n                              history.push({\n                                pathname: `/xem/${item._id}`,\n                                state: item._id,\n                              })\n                            }\n                          >\n                            Chi Tiết\n                          </Button>,\n                        ]}\n                      >\n                        <Tooltip\n                          title={item.TieuDe}\n                          placement=\"bottom\"\n                          color=\"#0798db\"\n                        >\n                          <div>\n                            <Meta\n                              title={item.TieuDe}\n                              style={{ marginBottom: 10 }}\n                            />\n                          </div>\n                        </Tooltip>\n                        <div>\n                          <Text\n                            style={{\n                              backgroundColor: \"#86d9ffbf\",\n                              color: \"#3a83e6\",\n                              padding: \"1% 2% 1% 2%\",\n                              borderRadius: \"5px\",\n                            }}\n                          >\n                            {item.MaHoanCanh}\n                          </Text>\n                          <Row>\n                            <Text strong>\n                              {convertMoney(item.SoTienDaNhan)}đ\n                            </Text>\n                            <Text>/{convertMoney(item.SoTienHuyDong)}đ</Text>\n                          </Row>\n                          <Progress\n                            strokeColor=\"#0798db\"\n                            percent={(\n                              (item.SoTienDaNhan / item.SoTienHuyDong) *\n                              100\n                            ).toFixed(2)}\n                            showInfo={false}\n                          />\n                          <Row className={styled.solieu}>\n                            <Col span={12}>\n                              <p>Lượt quyên góp</p>\n                              <p>\n                                <b>{item.LuotQuyenGop}</b>\n                              </p>\n                            </Col>\n                            <Col span={12}>\n                              <p>Đạt được</p>\n                              <p>\n                                <b>\n                                  {(\n                                    (item.SoTienDaNhan / item.SoTienHuyDong) *\n                                    100\n                                  ).toFixed(2)}\n                                  %\n                                </b>\n                              </p>\n                            </Col>\n                          </Row>\n                        </div>\n                      </Card>\n                    ))}\n                </div>\n              </Spin>\n              <Pagination\n                defaultCurrent={pageCmpCampaign.page}\n                defaultPageSize={pageCmpCampaign.pageSize}\n                current={pageCmpCampaign?.page}\n                // total={data.length}\n                // showTotal={showTotal}\n                pageSizeOptions={[6, 12, 24, 48]}\n                onChange={onChangePageCmpCampaign}\n                total={dataCmpCamapaign.total}\n                showSizeChanger\n                style={{ textAlign: \"center\" }}\n              />\n            </section>\n          )}\n          {dataCmpCamapaign.data?.length === 0 && (\n            <section className=\"pt-5\">\n              <header className=\"text-center\">\n                {/* <p className=\"small text-muted small text-uppercase mb-1\">\n                Carefully created collections\n              </p> */}\n                <h2\n                  className=\"h5 text-uppercase mb-4\"\n                  style={{ color: \"#0798db\" }}\n                >\n                  Những đợt quyên góp Đã Hoàn Thành\n                </h2>\n              </header>\n              <Empty description={false}>\n                <p>Hiện chưa có đợt quyên góp nào hoàn thành</p>\n              </Empty>\n            </section>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Detail\\Detail.jsx",["416","417","418","419","420","421","422","423","424"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Tabs,\n  Card,\n  Button,\n  Row,\n  Col,\n  Typography,\n  Progress,\n  Divider,\n  List,\n  Pagination,\n  Spin,\n} from \"antd\";\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\nimport CampaignAPI from \"../API/CampaignAPI\";\nimport DonationAPI from \"../API/DonationsAPI\";\nimport Slider from \"react-slick\";\nimport convertMoney from \"../convertMoney\";\nimport { valuesContext } from \"../App\";\n\nimport FormDonations from \"../Form/Form_quyengop/FormDonations\";\nimport styled from \"./Detail.module.css\";\nimport \"./Detail.css\";\n\nconst Detail = () => {\n  const [data, setData] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [dataDonationsSortedMoney, setDataDonationsSortedMoney] = useState(\"\");\n  const [loadDonationsSortedMoney, setLoadDonationsSortedMoney] =\n    useState(false);\n  const [pageDonationsSortedMoney, setPageDonationsSortedMoney] = useState({\n    page: 1,\n    pageSize: 10,\n  });\n  const [dataDonationsSortedDate, setDataDonationsSortedDate] = useState(\"\");\n  const [loadDonationsSortedDate, setLoadDonationsSortedDate] = useState(false);\n  const [pageDonationsSortedDate, setPageDonationsSortedDate] = useState({\n    page: 1,\n    pageSize: 10,\n  });\n\n  // window.scrollTo(0, 0);\n  const notifyError = useContext(valuesContext).notifyError;\n  const location = useLocation();\n  const { id } = useParams();\n  const { Meta } = Card;\n  const { Text } = Typography;\n\n  const type = location.pathname.split(\"/\")[1];\n\n  const settings = {\n    dots: true,\n    dotsClass: \"slick-dots slick-thumb\",\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n  };\n  const openModal = (e) => setOpen(e);\n  //hàm sử lý định dạng ngày DD/MM/YYYY\n  const dinhDangDate = (day) => {\n    const date = new Date(day);\n    return (\n      date.getDate().toString().padStart(2, \"0\") +\n      \"/\" +\n      (date.getMonth() + 1).toString().padStart(2, \"0\") +\n      \"/\" +\n      date.getFullYear()\n    );\n  };\n  //thay đổi state page\n  const onChangePageDonationsSortedMoney = (page, pageSize) => {\n    setPageDonationsSortedMoney({ page: page, pageSize: pageSize });\n    setLoadDonationsSortedMoney(true);\n  };\n  //thay đổi state page\n  const onChangePageDonationsSortedDate = (page, pageSize) => {\n    setPageDonationsSortedDate({ page: page, pageSize: pageSize });\n    setLoadDonationsSortedDate(true);\n  };\n  //get dữ liệu campaign theo campaignId\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await CampaignAPI.getFindCampaign(id);\n        setData(res);\n      } catch (err) {\n        console.log(err);\n        notifyError(err?.response?.data?.errors[0].msg);\n      }\n    };\n    fetchData();\n  }, [id]);\n  //get Donation theo campaignId được sắp xếp theo số tiền quyên góp\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await DonationAPI.getDonationsByCampaignIdSortedMoney({\n          campaignId: id,\n          page: pageDonationsSortedMoney.page,\n          pageSize: pageDonationsSortedMoney.pageSize,\n        });\n        if (res.message === \"lấy dữ liệu thành công!\") {\n          setDataDonationsSortedMoney(res);\n          setLoadDonationsSortedMoney(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setLoadDonationsSortedMoney(false);\n        notifyError(err?.response?.data?.errors[0].msg);\n      }\n    };\n    fetchData();\n  }, [id, pageDonationsSortedMoney]);\n  //get Donation theo campaignId được sắp xếp theo thời gian quyên góp\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await DonationAPI.getDonationsByCampaignIdSortedDay({\n          campaignId: id,\n          page: pageDonationsSortedDate.page,\n          pageSize: pageDonationsSortedDate.pageSize,\n        });\n        if (res.message === \"lấy dữ liệu thành công!\") {\n          setDataDonationsSortedDate(res);\n          setLoadDonationsSortedDate(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setLoadDonationsSortedDate(false);\n        notifyError(err?.response?.data?.errors[0].msg);\n      }\n    };\n    fetchData();\n  }, [id, pageDonationsSortedDate]);\n\n  const dataSortedMoney = dataDonationsSortedMoney?.data?.map(\n    (item, index) => ({\n      title: item.TenCongKhai,\n      description: item.SoDienThoai,\n      content: item.SoTienQuyenGop,\n      stt: index + 1,\n    })\n  );\n  const dataSortedDate = dataDonationsSortedDate?.data?.map((item, index) => ({\n    title: item.TenCongKhai,\n    description: item.SoDienThoai,\n    content: item.SoTienQuyenGop,\n    stt: index + 1,\n  }));\n  return (\n    <div\n      className=\"container\"\n      style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n    >\n      <h1>{data?.TieuDe}</h1>\n      <p>{dinhDangDate(data?.NgayBatDau)}</p>\n      <div className={styled.girdImg}>\n        <Slider {...settings}>\n          {data?.HinhAnh?.length > 0 &&\n            data?.HinhAnh?.map((item, index) => (\n              <div key={index}>\n                <a href={item.url} target=\"_blank\">\n                  <img src={item.url} alt={item.name} />\n                </a>\n              </div>\n            ))}\n        </Slider>\n      </div>\n      <FormDonations open={open} handlerOpen={openModal} data={data} />\n      <Tabs\n        defaultActiveKey=\"1\"\n        items={[\n          {\n            label: `Câu chuyện`,\n            key: \"1\",\n            children: (\n              <div className={styled.body}>\n                <div className={styled.content}>\n                  <h3>Câu chuyện</h3>\n                  <br />\n                  <div className={styled.cauchuyen}>\n                    {data?.MoTaHoanCanh?.length > 0 &&\n                      data?.MoTaHoanCanh?.map((item, index) => (\n                        <div key={index}>\n                          <p>{item.NoiDung}</p>\n                          <br />\n                          {data?.HinhAnh[index] && (\n                            <>\n                              <img\n                                src={data?.HinhAnh[index].url}\n                                alt={data?.HinhAnh[index].name}\n                              />\n                              <br />\n                            </>\n                          )}\n                        </div>\n                      ))}\n                  </div>\n                </div>\n                <div className={styled.card}>\n                  <Card\n                    style={{\n                      width: \"100%\",\n                      position: \"-webkit-sticky\",\n                      position: \"sticky\",\n                      top: \"10px\",\n                    }}\n                    actions={[\n                      type !== \"xem\" && (\n                        <Button type=\"primary\" onClick={() => setOpen(true)}>\n                          Quyên góp\n                        </Button>\n                      ),\n                    ]}\n                  >\n                    <Meta\n                      title={`Thông tin quyên góp - ${data.MaHoanCanh}`}\n                      style={{\n                        marginBottom: 10,\n                        fontSize: \"130%\",\n                        fontWeight: \"700\",\n                        fontFamily: \"serif\",\n                        marginBottom: \"30px\",\n                      }}\n                    />\n                    <div>\n                      <Row>\n                        <Text strong>{convertMoney(data?.SoTienDaNhan)}đ </Text>\n                        <Text style={{ padding: \"0 0 0 5px\" }}>\n                          quyên góp / {convertMoney(data?.SoTienHuyDong)}đ\n                        </Text>\n                      </Row>\n                      <Progress\n                        strokeColor={type === \"xem\" ? \"#52c41a\" : \"#0798db\"}\n                        percent={(\n                          (data?.SoTienDaNhan / data?.SoTienHuyDong) *\n                          100\n                        ).toFixed(2)}\n                        showInfo={false}\n                      />\n                      <Row className={styled.solieu}>\n                        <Col span={10}>\n                          <p>Lượt quyên góp</p>\n                          <p>\n                            <b>{data?.LuotQuyenGop}</b>\n                          </p>\n                        </Col>\n                        <Col span={6}>\n                          <p>Đạt được</p>\n                          <p>\n                            <b>\n                              {(\n                                (data?.SoTienDaNhan / data?.SoTienHuyDong) *\n                                100\n                              ).toFixed(2)}\n                              %\n                            </b>\n                          </p>\n                        </Col>\n                        <Col span={8}>\n                          {type === \"quyengop\" && (\n                            <>\n                              <p>Thời hạn còn</p>\n                              <p>\n                                <b>\n                                  {Math.ceil(\n                                    (new Date(data?.NgayKetThuc) - new Date()) /\n                                      1000 /\n                                      60 /\n                                      60 /\n                                      24\n                                  )}{\" \"}\n                                  ngày\n                                </b>\n                              </p>\n                            </>\n                          )}\n                          {type === \"xem\" && (\n                            <Text type=\"success\">Đã hoàn thành</Text>\n                          )}\n                        </Col>\n                      </Row>\n                    </div>\n                    {type === \"quyengop\" && (\n                      <div className={styled.hinh_thuc_quyen_gop}>\n                        <Meta\n                          title={`Hình thức quyên góp - ${data.MaHoanCanh}`}\n                          style={{\n                            fontSize: \"130%\",\n                            fontWeight: \"700\",\n                            fontFamily: \"serif\",\n                            marginBottom: \"30px\",\n                          }}\n                        />\n                        <div>\n                          <Row>\n                            <p>Ngân hàng: AGRIBANK</p>\n                          </Row>\n                          <Row>\n                            <p>Sô tài khoản: *************</p>\n                          </Row>\n                          <Row>\n                            <p>Số tiền: \"vi dụ 1000đ\"</p>\n                          </Row>\n                          <Row>\n                            <p>\n                              Nội dung: quyen gop hoan canh {data.MaHoanCanh}\n                            </p>\n                          </Row>\n                        </div>\n                      </div>\n                    )}\n                  </Card>\n                </div>\n              </div>\n            ),\n          },\n          {\n            label: `Nhà hảo tâm`,\n            key: \"2\",\n            children: (\n              <div className={styled.body}>\n                <div className={styled.content} style={{ marginTop: \"0px\" }}>\n                  <div className={styled.cauchuyen}>\n                    <Divider orientation=\"left\">Nhà Hảo Tâm Hàng Đầu</Divider>\n                    <Spin\n                      tip=\"Loading...\"\n                      spinning={loadDonationsSortedMoney}\n                      size=\"default\"\n                    >\n                      <List\n                        size=\"small\"\n                        bordered\n                        dataSource={dataSortedMoney}\n                        style={{ height: \"460px\", overflow: \"auto\" }}\n                        renderItem={(item) => {\n                          return (\n                            <List.Item>\n                              <div className={styled.list_donation}>\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                  }}\n                                >\n                                  <div\n                                    style={{\n                                      marginRight: \"20px\",\n                                      alignSelf: \"center\",\n                                    }}\n                                  >\n                                    <span>{item.stt}</span>\n                                  </div>\n                                  <div>\n                                    <p>{item.title}</p>\n                                    <p>\n                                      {item.description\n                                        ? item.description\n                                            ?.toString()\n                                            .slice(-3)\n                                            .padStart(10, \"*\")\n                                        : \"\".padStart(10, \"*\")}\n                                    </p>\n                                  </div>\n                                </div>\n                                <div>\n                                  <p>{convertMoney(item.content)}đ</p>\n                                </div>\n                              </div>\n                            </List.Item>\n                          );\n                        }}\n                      />\n                    </Spin>\n                    <br />\n                    <Pagination\n                      defaultCurrent={pageDonationsSortedMoney.page}\n                      defaultPageSize={pageDonationsSortedMoney.pageSize}\n                      current={pageDonationsSortedMoney?.page}\n                      // total={data.length}\n                      // showTotal={showTotal}\n                      pageSizeOptions={[10, 20, 50]}\n                      onChange={onChangePageDonationsSortedMoney}\n                      total={dataDonationsSortedMoney?.total}\n                      showSizeChanger\n                      style={{ textAlign: \"center\" }}\n                    />\n                  </div>\n                  <div className={styled.cauchuyen}>\n                    <Divider orientation=\"left\">Nhà Hảo Tâm Mới Nhất</Divider>\n                    <Spin\n                      tip=\"Loading...\"\n                      spinning={loadDonationsSortedDate}\n                      size=\"default\"\n                    >\n                      <List\n                        size=\"small\"\n                        bordered\n                        dataSource={dataSortedDate}\n                        style={{ height: \"470px\", overflow: \"auto\" }}\n                        renderItem={(item) => {\n                          return (\n                            <List.Item>\n                              <div className={styled.list_donation}>\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                  }}\n                                >\n                                  <div\n                                    style={{\n                                      marginRight: \"20px\",\n                                      alignSelf: \"center\",\n                                    }}\n                                  >\n                                    <span>{item.stt}</span>\n                                  </div>\n                                  <div>\n                                    <p>{item.title}</p>\n                                    <p>\n                                      {item.description\n                                        ? item.description\n                                            ?.toString()\n                                            .slice(-3)\n                                            .padStart(10, \"*\")\n                                        : \"\".padStart(10, \"*\")}\n                                    </p>\n                                  </div>\n                                </div>\n                                <div>\n                                  <p>{convertMoney(item.content)}đ</p>\n                                </div>\n                              </div>\n                            </List.Item>\n                          );\n                        }}\n                      />\n                    </Spin>\n                    <br />\n                    <Pagination\n                      defaultCurrent={pageDonationsSortedDate.page}\n                      defaultPageSize={pageDonationsSortedDate.pageSize}\n                      current={pageDonationsSortedDate?.page}\n                      // total={data.length}\n                      // showTotal={showTotal}\n                      pageSizeOptions={[10, 20, 50]}\n                      onChange={onChangePageDonationsSortedDate}\n                      total={dataDonationsSortedDate?.total}\n                      showSizeChanger\n                      style={{ textAlign: \"center\" }}\n                    />\n                  </div>\n                </div>\n                <div className={styled.card}>\n                  <Card\n                    style={{\n                      width: \"100%\",\n                      position: \"-webkit-sticky\",\n                      position: \"sticky\",\n                      top: \"10px\",\n                    }}\n                    actions={[\n                      type !== \"xem\" && (\n                        <Button type=\"primary\" onClick={() => setOpen(true)}>\n                          Quyên góp\n                        </Button>\n                      ),\n                    ]}\n                  >\n                    <Meta\n                      title={`Thông tin quyên góp - ${data.MaHoanCanh}`}\n                      style={{\n                        marginBottom: 10,\n                        fontSize: \"130%\",\n                        fontWeight: \"700\",\n                        fontFamily: \"serif\",\n                        marginBottom: \"30px\",\n                      }}\n                    />\n                    <div>\n                      <Row>\n                        <Text strong>{convertMoney(data?.SoTienDaNhan)}đ </Text>\n                        <Text style={{ padding: \"0 0 0 5px\" }}>\n                          quyên góp / {convertMoney(data?.SoTienHuyDong)}đ\n                        </Text>\n                      </Row>\n                      <Progress\n                        strokeColor={type === \"xem\" ? \"#52c41a\" : \"#0798db\"}\n                        percent={(\n                          (data?.SoTienDaNhan / data?.SoTienHuyDong) *\n                          100\n                        ).toFixed(2)}\n                        showInfo={false}\n                      />\n                      <Row className={styled.solieu}>\n                        <Col span={10}>\n                          <p>Lượt quyên góp</p>\n                          <p>\n                            <b>{data?.LuotQuyenGop}</b>\n                          </p>\n                        </Col>\n                        <Col span={6}>\n                          <p>Đạt được</p>\n                          <p>\n                            <b>\n                              {(\n                                (data?.SoTienDaNhan / data?.SoTienHuyDong) *\n                                100\n                              ).toFixed(2)}\n                              %\n                            </b>\n                          </p>\n                        </Col>\n                        <Col span={8}>\n                          {type === \"quyengop\" && (\n                            <>\n                              <p>Thời hạn còn</p>\n                              <p>\n                                <b>\n                                  {Math.ceil(\n                                    (new Date(data?.NgayKetThuc) - new Date()) /\n                                      1000 /\n                                      60 /\n                                      60 /\n                                      24\n                                  )}{\" \"}\n                                  ngày\n                                </b>\n                              </p>\n                            </>\n                          )}\n                          {type === \"xem\" && (\n                            <Text type=\"success\">Đã hoàn thành</Text>\n                          )}\n                        </Col>\n                      </Row>\n                    </div>\n                    {type === \"quyengop\" && (\n                      <div className={styled.hinh_thuc_quyen_gop}>\n                        <Meta\n                          title={`Hình thức quyên góp - ${data.MaHoanCanh}`}\n                          style={{\n                            fontSize: \"130%\",\n                            fontWeight: \"700\",\n                            fontFamily: \"serif\",\n                            marginBottom: \"30px\",\n                          }}\n                        />\n                        <div>\n                          <Row>\n                            <p>Ngân hàng: AGRIBANK</p>\n                          </Row>\n                          <Row>\n                            <p>Sô tài khoản: *************</p>\n                          </Row>\n                          <Row>\n                            <p>Số tiền: \"vi dụ 1000đ\"</p>\n                          </Row>\n                          <Row>\n                            <p>\n                              Nội dung: quyen gop hoan canh {data.MaHoanCanh}\n                            </p>\n                          </Row>\n                        </div>\n                      </div>\n                    )}\n                  </Card>\n                </div>\n              </div>\n            ),\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default Detail;\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\SignIn.jsx",["425","426","427"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n\nimport UserAPI from \"../API/UserAPI\";\nimport { Button, Form, Input, Spin } from \"antd\";\nimport Swal from \"sweetalert2\";\nimport { valuesContext } from \"../App\";\nimport styled from \"./Auth.module.css\";\n\nfunction SignIn(props) {\n  const [load, setLoad] = useState(false);\n  const [form] = Form.useForm();\n  const [err, seterr] = useState([]);\n\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n\n  const auth = useContext(valuesContext).loadAuth;\n  window.scrollTo(0, 143);\n  const onFinish = async (values) => {\n    try {\n      seterr([]);\n      setLoad(true);\n      const res = await UserAPI.postSignIn(values);\n      if (res.message === \"Đăng nhập thành công\") {\n        localStorage.setItem(\"User\", res.token);\n        auth(true);\n        if (\n          location?.state?.pathName === \"/signup\" ||\n          location?.state?.pathName === \"/forgot-password\"\n        ) {\n          history.replace(\"/\");\n        } else {\n          history.goBack(-1);\n        }\n      }\n    } catch (err) {\n      setLoad(false);\n      console.log(err.response);\n      if (err.response) seterr(err.response.data.errors);\n    }\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  const checkErr = (items) => {\n    const test = err?.find((x) => x.path === items);\n    return test;\n  };\n\n  return (\n    <Spin\n      tip=\"...Loading\"\n      size=\"large\"\n      spinning={load ? true : false}\n      style={{ top: 100 }}\n    >\n      <div className={styled.font_Signin}>\n        <Form\n          name=\"basic\"\n          form={form}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          layout=\"vertical\"\n        >\n          <h1>Đăng Nhập</h1>\n          <p style={{ visibility: err.length > 0 ? \"\" : \"hidden\" }}>\n            <i> {err.length > 0 && err[0].msg}</i>\n          </p>\n          <Form.Item\n            label=\"Tên đăng nhập\"\n            name=\"TenDangNhap\"\n            rules={[\n              {\n                required: true,\n                message: \"Tên đăng nhập không được để trống!\",\n              },\n              { max: 100, message: \"Số ký tự không được vượt quá 100 ký tự\" },\n              () => ({\n                validator(_, value) {\n                  if (form.getFieldValue(\"TenDangNhap\").includes(\"@\")) {\n                    if (\n                      !value ||\n                      new RegExp(\n                        /^[a-zA-Z0-9._]+@[a-zA-Z0-9]+\\.(com|vn)$/g\n                      ).test(value)\n                    ) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(new Error(\"Email không hợp lệ\"));\n                  } else {\n                    if (!value || new RegExp(/^[a-zA-Z0-9]+$/i).test(value)) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(\n                        \"Tên đăng nhập chỉ cho phép các chữ cái (a-z,A-Z) số (0-9)\"\n                      )\n                    );\n                  }\n                },\n              }),\n            ]}\n          >\n            <Input placeholder=\"Nhập tên đăng nhập hoặc email\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Mật Khẩu\"\n            name=\"MatKhau\"\n            rules={[\n              {\n                required: true,\n                message: \"Mật khẩu không được để trống!\",\n              },\n              { max: 50, message: \"Số ký tự không được vượt quá 50 ký tự\" },\n              { min: 8, message: \"Số ký tự it nhất là 8 ký tự\" },\n            ]}\n          >\n            <Input.Password placeholder=\"Nhập mật khâu\" />\n          </Form.Item>\n\n          <Form.Item style={{ textAlign: \"center\" }}>\n            <Button htmlType=\"submit\" style={{ width: \"50%\" }}>\n              Đăng Nhập\n            </Button>\n          </Form.Item>\n          <p>\n            <Link to=\"/forgot-password\">Quên mật khẩu?</Link>\n          </p>\n          <p>\n            nếu chưa có tài khoản hãy click <Link to=\"/signup\">Đăng Ký!</Link>\n          </p>\n        </Form>\n      </div>\n    </Spin>\n  );\n}\n\nexport default SignIn;\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Share\\Chat\\Chat.jsx",["428","429","430","431","432","433"],"import React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\nimport queryString from \"query-string\";\n\nimport ChatRoomsAPI from \"../../API/ChatRoomsAPI\";\nimport { useSelector } from \"react-redux\";\n\nimport { io } from \"socket.io-client\";\nconst socket = io(\"http://localhost:5000\", { transports: [\"websocket\"] });\n\nfunction Chat(props) {\n  const [activeChat, setActiveChat] = useState(false);\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [roomId, setRoomId] = useState(\n    localStorage.getItem(\"njs_asm3_roomId\") || \"\"\n  );\n\n  //Get id_user từ redux khi user đã đăng nhập\n  const [load, setLoad] = useState(false);\n\n  // Hàm này dùng để mở hộp thoại chat\n  const onChat = () => {\n    setActiveChat(!activeChat);\n  };\n\n  const onChangeText = (e) => {\n    setTextMessage(e.target.value);\n  };\n\n  const handlerSend = async () => {\n    try {\n      //Sau đó nó emit dữ liệu lên server bằng socket với key send_message và value data\n\n      // Check if text equal \"/end\" then end room\n      if (roomId && textMessage.toLowerCase() === \"/end\") {\n        await ChatRoomsAPI.addMessage({\n          message: \"==END ROOM==\",\n          roomId: roomId,\n          is_admin: false,\n        });\n\n        localStorage.removeItem(\"njs_asm3_roomId\");\n        setTextMessage(\"\");\n        setRoomId(\"\");\n        setMessage([]);\n        setActiveChat(false);\n\n        return;\n      }\n\n      let test2 = roomId;\n\n      // Check if roomId is null then create new Room\n      if (!roomId) {\n        const newRoomData = await ChatRoomsAPI.createNewRoom();\n        setRoomId(newRoomData._id);\n        test2 = newRoomData._id;\n        localStorage.setItem(\"njs_asm3_roomId\", newRoomData._id);\n      }\n\n      const data = {\n        message: textMessage,\n        roomId: test2,\n        is_admin: false,\n        date: new Date(),\n      };\n\n      console.log(data);\n\n      //Tiếp theo nó sẽ postdata lên api đưa dữ liệu vào database\n\n      const test = await ChatRoomsAPI.addMessage(data);\n\n      setTextMessage(\"\");\n\n      setTimeout(() => {\n        setLoad(true);\n        socket.emit(\"send_message\", data);\n      }, 200);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchData = async () => {\n    const response = await ChatRoomsAPI.getMessageByRoomId(roomId);\n    setMessage(response.content);\n  };\n\n  // Hàm này dùng để load dữ liệu message của user khi user gửi tin nhán\n  useEffect(() => {\n    if (load) {\n      fetchData();\n      setLoad(false);\n    }\n  }, [load]);\n\n  useEffect(() => {\n    setLoad(true);\n  }, [roomId]);\n\n  //Hàm này dùng để nhận socket từ server gửi lên\n  useEffect(() => {\n    //Nhận dữ liệu từ server gửi lên thông qua socket với key receive_message\n    socket.on(\"receive_message\", (data) => {\n      //Sau đó nó sẽ setLoad gọi lại hàm useEffect lấy lại dữ liệu\n      setLoad(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"wrapper_chat\">\n      <div className=\"chat_messenger\" onClick={onChat}>\n        <svg x=\"0\" y=\"0\" width=\"60px\" height=\"60px\">\n          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g>\n              <circle fill=\"#383838\" cx=\"30\" cy=\"30\" r=\"30\"></circle>\n              <svg x=\"10\" y=\"10\">\n                <g transform=\"translate(0.000000, -10.000000)\" fill=\"#FFFFFF\">\n                  <g id=\"logo\" transform=\"translate(0.000000, 10.000000)\">\n                    <path\n                      d=\"M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 \n\t\t\t\t\t\t\t\t20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 \n\t\t\t\t\t\t\t\t13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 \n\t\t\t\t\t\t\t\tC6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 \n\t\t\t\t\t\t\t\t20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 \n\t\t\t\t\t\t\t\tC16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 \n\t\t\t\t\t\t\t\t25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 \n\t\t\t\t\t\t\t\t30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 \n\t\t\t\t\t\t\t\tL18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z\"\n                    ></path>\n                  </g>\n                </g>\n              </svg>\n            </g>\n          </g>\n        </svg>\n      </div>\n\n      {activeChat && (\n        <div className=\"active_chat animate__animated animate__jackInTheBox\">\n          <div style={{ width: \"100%\" }}>\n            <div\n              className=\"card card-bordered fix_boderChat\"\n              style={{ width: \"fit-content\" }}\n            >\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">\n                  <strong>Customer Support</strong>\n                </h4>{\" \"}\n                <a className=\"btn btn-xs btn-secondary\" href=\"#\">\n                  Let's Chat App\n                </a>\n              </div>\n              <div className=\"ps-container ps-theme-default ps-active-y fix_scoll\">\n                {message &&\n                  message.map((value) =>\n                    !value.is_admin ? (\n                      <div\n                        className=\"media media-chat media-chat-reverse\"\n                        key={value._id}\n                      >\n                        <div className=\"media-body\">\n                          <p>You: {value.message}</p>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"media media-chat\" key={value.id}>\n                        {\" \"}\n                        <img\n                          className=\"avatar\"\n                          src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                          alt=\"...\"\n                        />\n                        <div className=\"media-body\" key={value.id}>\n                          <p>Cộng tác viên: {value.message}</p>\n                        </div>\n                      </div>\n                    )\n                  )}\n              </div>\n              <div className=\"publisher bt-1 border-light\">\n                <img\n                  className=\"avatar avatar-xs\"\n                  src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                  alt=\"...\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter Message!\"\n                  onChange={onChangeText}\n                  value={textMessage}\n                  style={{ width: \"80%\" }}\n                  onKeyUp={(e) => {\n                    if (e.key === \"Enter\") {\n                      handlerSend();\n                    }\n                  }}\n                />\n                <a\n                  onClick={handlerSend}\n                  className=\"publisher-btn text-info\"\n                  data-abc=\"true\"\n                >\n                  <i className=\"fa fa-paper-plane\"></i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n",["434","435"],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Share\\Footer\\Footer.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Share\\Header\\Header.jsx",["436","437"],"import {\n  HomeOutlined,\n  CalendarOutlined,\n  HeartOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  UserSwitchOutlined,\n  AppstoreOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Menu, Collapse, Space, Breadcrumb } from \"antd\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { valuesContext } from \"../../App\";\nimport Image from \"../../Img/Image\";\nimport styled from \"./Header.module.css\";\nimport \"./Header.css\";\n\nconst { Panel } = Collapse;\nfunction getItem(label, key, icon, children, title, type) {\n  return {\n    key,\n    icon,\n    children,\n    label,\n    type,\n    title,\n  };\n}\nconst Header = () => {\n  const [current, setCurrent] = useState(\"/\");\n  const [collapsed, setCollapsed] = useState(false);\n  const [width, setWidth] = useState(0);\n\n  const location = useLocation();\n  const history = useHistory();\n\n  // console.log(location);\n  const data = useContext(valuesContext).data;\n  const auth = useContext(valuesContext).loadAuth;\n\n  const toggleCollapsed = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const items = [\n    getItem(\"Trang Chủ\", \"/\", <HomeOutlined />),\n    getItem(\"Chương Trình\", \"/ChuongTrinh\", <CalendarOutlined />, [\n      getItem(\n        \"Người Già Và Người Khuyết Tật\",\n        \"/ChuongTrinh/nguoi-gia-va-nguoi-khuyet-tat/null\",\n        \"\",\n        \"\",\n        \"Người Già Và Người Khuyết Tật\"\n      ),\n      getItem(\n        \"Quỹ Vì Trẻ Em\",\n        \"/ChuongTrinh/quy-vi-tre-em/null\",\n        \"\",\n        \"\",\n        \"Trẻ Em\"\n      ),\n      getItem(\n        \"Người Vùng Sâu,Vùng Xa\",\n        \"/ChuongTrinh/nguoi-vung-sau-vung-xa/null\",\n        \"\",\n        \"\",\n        \"Người Vùng Sâu,Vùng Xa\"\n      ),\n      getItem(\n        \"Quỹ Bảo Vệ Động Vật\",\n        \"/ChuongTrinh/quy-bao-ve-dong-vat/null\",\n        \"\",\n        \"\",\n        \"Quỹ Bảo Vệ Động Vật\"\n      ),\n    ]),\n    getItem(\"Giới Thiệu\", \"/GioiThieu\", <HeartOutlined />, [\n      getItem(\"Tổ Chức\", \"/to-chuc\"),\n    ]),\n    data?.mesaage === \"Đăng nhập thành công\" &&\n      getItem(\"Người dùng\", \"/NguoiDung\", <UserOutlined />, [\n        getItem(\n          \"Thông Tin Tài Khoản\",\n          `/ThongTintaiKhoan/${data?.data?.userId}`\n        ),\n        getItem(\n          \"Cập Nhât Thông Tin Tài Khoản\",\n          `/CapNhatThongTinTaiKhoan/${data?.data?.userId}`\n        ),\n      ]),\n    data?.data?.VaiTro === \"admin\" &&\n      getItem(\"Quản Lý Webpage\", \"/QuanLyWebpage\", <AppstoreOutlined />, [\n        getItem(\"Danh sách Đợt Quyên Góp\", \"/table-campaign\"),\n        getItem(\"Thêm Mới Đợt Quyên Góp\", \"/create-campaign\"),\n        getItem(\"Danh sách Người Dùng\", \"/table-user\"),\n        getItem(\"Thêm Người Dùng\", \"/create-user\"),\n        getItem(\"Danh sách Quyên Góp\", \"/table-donation\"),\n      ]),\n    width < 850 &&\n      data?.mesaage !== \"Đăng nhập thành công\" &&\n      getItem(\"Đăng Nhập\", \"/signin\", <UserSwitchOutlined />),\n    width < 850 &&\n      data?.mesaage !== \"Đăng nhập thành công\" &&\n      getItem(\"Đăng Ký\", \"/signup\", <UserSwitchOutlined />),\n    width < 850 &&\n      data &&\n      getItem(\n        \"Đăng Xuất\",\n        \"DangXuat\",\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={16}\n          height={20}\n          fill=\"#ffffffa6\"\n          viewBox=\"0 0 512 512\"\n        >\n          <path d=\"M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z\" />\n        </svg>\n      ),\n  ];\n\n  useEffect(() => {\n    if (\n      location?.pathname?.split(\"/\")[1] !== \"ThongTintaiKhoan\" &&\n      location?.pathname?.split(\"/\")[1] !== \"CapNhatThongTinTaiKhoan\" &&\n      location?.pathname?.split(\"/\")[1] !== \"ChuongTrinh\"\n    ) {\n      setCurrent(\"/\" + location.pathname.split(\"/\")[1]);\n    } else if (location?.pathname?.split(\"/\")[1] === \"ChuongTrinh\") {\n      setCurrent(\n        \"/\" +\n          location.pathname.split(\"/\")[1] +\n          \"/\" +\n          location.pathname.split(\"/\")[2] +\n          \"/\" +\n          \"null\"\n      );\n    } else {\n      setCurrent(\n        \"/\" + location.pathname.split(\"/\")[1] + \"/\" + data?.data?.userId\n      );\n    }\n  }, [location.pathname]);\n\n  useEffect(() => {\n    function handleResize() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const onClick2 = (e) => {\n    if (e.key === \"DangXuat\") {\n      auth(true);\n      window.localStorage.removeItem(\"User\");\n      history.push(\"/signin\");\n    } else if (e.key === \"/signin\") {\n      history.push(\"/signin\", { pathName: location.pathname });\n    } else {\n      history.push(e.key, { title: e.item.props.title });\n      setCurrent(e.key);\n    }\n    setCollapsed(false);\n  };\n\n  return (\n    <div className={styled.header}>\n      <div className={styled.font_header}>\n        <div>\n          <img src={Image.logo} alt=\"logo\" />\n        </div>\n        {width > 850 && (\n          <div className={styled.button_auth}>\n            {data && (\n              <Collapse ghost expandIconPosition=\"end\">\n                <Panel\n                  className=\"panel-dangxuat\"\n                  header={`Hello ${data?.data?.HoVaTen}!`}\n                >\n                  <Link to=\"/signin\">\n                    <Button\n                      type=\"ghost\"\n                      style={{ display: \"flex\", flexDirection: \"row\" }}\n                      onClick={() => {\n                        auth(true);\n                        window.localStorage.removeItem(\"User\");\n                      }}\n                    >\n                      <Space style={{ padding: \"0 3px 0 0\" }}>\n                        {\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width={16}\n                            height={20}\n                            fill=\"#0798db\"\n                            viewBox=\"0 0 512 512\"\n                          >\n                            <path d=\"M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z\" />\n                          </svg>\n                        }\n                      </Space>\n                      Đăng Xuất\n                    </Button>\n                  </Link>\n                </Panel>\n              </Collapse>\n            )}\n            {!data && (\n              <>\n                {location.pathname !== \"/signin\" && (\n                  <Button\n                    type=\"ghost\"\n                    onClick={() =>\n                      history.push(\"/signin\", { pathName: location.pathname })\n                    }\n                  >\n                    Đăng Nhập\n                  </Button>\n                )}\n                {location.pathname !== \"/signup\" && (\n                  <Link to=\"/signup\">\n                    <Button type=\"ghost\">Đăng Ký</Button>\n                  </Link>\n                )}\n              </>\n            )}\n          </div>\n        )}\n        {width < 850 && (\n          <Button type=\"primary\" onClick={toggleCollapsed}>\n            {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n          </Button>\n        )}\n      </div>\n      {width > 850 && (\n        <Menu\n          className={styled.nav}\n          style={{ fontSize: \"100%\", width: \"80%\", margin: \"0 10% 20px 10%\" }}\n          // defaultSelectedKeys={\"/\"}\n          // defaultOpenKeys={\"Trang Chủ\"}\n          onClick={onClick2}\n          mode=\"horizontal\"\n          theme=\"light\"\n          selectedKeys={[current]}\n          items={items}\n          // onSelect={(e) => {\n          //   if (e.item.props.title) console.log(e.item.props.title);\n          // }}\n        />\n      )}\n\n      {width <= 850 && (\n        <div className={collapsed ? styled.close : styled.font_nav}>\n          <Menu\n            // defaultSelectedKeys={\"/\"}\n            // defaultOpenKeys={\"Trang Chủ\"}\n            onClick={onClick2}\n            mode=\"inline\"\n            inlineCollapsed={width <= 400 ? true : false}\n            theme=\"dark\"\n            selectedKeys={[current]}\n            items={items}\n          />\n          <img src={Image.logo} alt=\"anh_logo.jpg\" />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Header;\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\convertMoney.js",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\UserAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Share\\img\\Image.jsx",[],["438","439"],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\LoginLink.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\LogoutLink.jsx",[],["440","441"],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\Name.jsx",["442"],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\axiosClient.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_create\\FormCampaign.js",["443","444","445"],"import {\r\n  UploadOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Select,\r\n  Upload,\r\n  Modal,\r\n  Spin,\r\n} from \"antd\";\r\nimport configApp from \"../../configApp\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport CampaignAPI from \"../../API/CampaignAPI\";\r\n\r\nimport styled from \"./FormCampaogn.module.css\";\r\nimport \"./FormCampaogn.css\";\r\nimport dayjs from \"dayjs\";\r\nimport moment from \"moment\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\nconst normFile = (e) => {\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e?.fileList;\r\n};\r\n\r\nconst getBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nconst FormCampaign = () => {\r\n  const [data, setData] = useState([]);\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [fileList, setFileList] = useState([]);\r\n  const [noEdit, setNoEdit] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [isUpload, setIsUpload] = useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const dateFormatList = \"DD/MM/YYYY\";\r\n  //toastify thông báo thành công khi nhận được response chả về thành công\r\n  const notify = (values) =>\r\n    toast.success(values, {\r\n      autoClose: 3000,\r\n      onClose: () => history.push(\"/table-campaign\"),\r\n    });\r\n\r\n  //toastify thông báo thát bại khi nhận được response chả về thất bại\r\n  const notifyError = (values) =>\r\n    toast.error(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/create-campaign\") {\r\n      form.resetFields();\r\n      setFileList([]);\r\n    }\r\n  }, [location.pathname]);\r\n  useEffect(() => {\r\n    if (location.pathname === \"/edit-campaign\") {\r\n      try {\r\n        const fetchData = async () => {\r\n          const res = await CampaignAPI.getFindCampaign(location.state);\r\n          console.log(res);\r\n          setData(res);\r\n          setFileList(res.HinhAnh);\r\n          form.setFieldsValue({\r\n            TieuDe: res.TieuDe,\r\n            DiaChi: res.DiaChi,\r\n            DoiTuongQuyenGop: res.DoiTuongQuyenGop,\r\n            ThoiGianHoatDong: [dayjs(res.NgayBatDau), dayjs(res.NgayKetThuc)],\r\n            SoTienHuyDong: res.SoTienHuyDong,\r\n            MoTaHoanCanh: res.MoTaHoanCanh.map((item, index) => ({\r\n              NoiDung: item.NoiDung,\r\n            })),\r\n          });\r\n        };\r\n        fetchData();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }, [location.state?._id]);\r\n\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle initialValue=\"VND\">\r\n      <Select style={{ width: 80 }}></Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  const handleCancel = () => setPreviewOpen(false);\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewOpen(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  };\r\n  const handleChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n    if (newFileList.find((x) => x.status && x.status !== \"done\")) {\r\n      setIsUpload(true);\r\n    } else {\r\n      setIsUpload(false);\r\n    }\r\n  };\r\n\r\n  //thêm mới hoàn cảnh\r\n  const onFinish = async (values) => {\r\n    setLoad(true);\r\n    try {\r\n      const res = await CampaignAPI.postCreatedCampaign(values);\r\n      if (res.data === \"Tạo hoàn cảnh thành công!\") {\r\n        setLoad(false);\r\n        // Swal.fire({\r\n        //   position: \"top-end\",\r\n        //   icon: \"success\",\r\n        //   title: \"Thêm mới hoàn cảnh thành công!\",\r\n        //   showConfirmButton: false,\r\n        //   timer: 3000,\r\n        // });\r\n        setNoEdit(true);\r\n        notify(\r\n          \"Thêm mới hoàn cảnh thành công!chuẩn bị chuyển qua màn hình danh sách\"\r\n        );\r\n        form.resetFields();\r\n        setFileList([]);\r\n      } else {\r\n        notifyError(\"Thêm mới hoàn cảnh thất bại!\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //thay đổi thông tin hoàn cảnh\r\n  const UpdateCampaign = async (values) => {\r\n    values.id = location.state;\r\n    console.log(values);\r\n    try {\r\n      const res = await CampaignAPI.postUpdateCampaign(values);\r\n      if (res.message === \"Cập nhật hoàn cảnh thành Công!\") {\r\n        setNoEdit(true);\r\n        notify(\r\n          \"Cập nhật đợt quyên góp thành công! chuẩn bị chuyển về màn hình danh sách\"\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <h2 className=\"title-form\">\r\n        Form{\" \"}\r\n        {location.pathname !== \"/edit-campaign\"\r\n          ? \"thêm mới hoàn cảnh\"\r\n          : \"cập nhật thông tin hoàn cảnh\"}\r\n      </h2>\r\n      <Spin tip=\"Loading...\" size=\"large\" spinning={load ? true : false}>\r\n        <div className={styled.font_Form}>\r\n          <Button\r\n            className=\"huyEdit\"\r\n            danger\r\n            onClick={() => history.push(\"/table-campaign\")}\r\n          >\r\n            {location.pathname === \"/edit-campaign\"\r\n              ? \"Hủy Cập Nhật\"\r\n              : \"Hủy Thêm\"}\r\n          </Button>\r\n          <Form\r\n            form={form}\r\n            disabled={noEdit}\r\n            layout=\"vertical\"\r\n            onKeyDown={(e) => (e.key === \"Enter\" ? e.preventDefault() : \"\")}\r\n            onFinish={\r\n              location.pathname !== \"/edit-campaign\" ? onFinish : UpdateCampaign\r\n            }\r\n          >\r\n            <Form.Item\r\n              label=\"Tiêu Đề Hoàn Cảnh\"\r\n              name=\"TieuDe\"\r\n              rules={[\r\n                { required: true, message: \"Tiêu đề không được để trống\" },\r\n              ]}\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Input placeholder=\"Nhập tiêu đề hoàn cảnh\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Địa Chỉ\"\r\n              name=\"DiaChi\"\r\n              rules={[\r\n                { required: true, message: \"Địa chỉ không được để trống\" },\r\n              ]}\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Input placeholder=\"Nhập địa chỉ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Đối Tượng Quyên Góp\"\r\n              name=\"DoiTuongQuyenGop\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Đối tượng quyên góp không được để trống\",\r\n                },\r\n              ]}\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Select placeholder=\"Chọn hoàn cảnh quyên góp\">\r\n                <Select.Option value=\"Người Già Và Người Khuyết Tật\">\r\n                  Người Già Và Người Khuyết Tật\r\n                </Select.Option>\r\n                <Select.Option value=\"Trẻ Em\">Trẻ Em</Select.Option>\r\n                <Select.Option value=\"Người Vùng Sâu,Vùng Xa\">\r\n                  Người Vùng Sâu,Vùng Xa\r\n                </Select.Option>\r\n                <Select.Option value=\"Người Bệnh Hiểm Nghèo\">\r\n                  Người Bệnh Hiểm Nghèo\r\n                </Select.Option>\r\n                <Select.Option value=\"Quỹ Bảo Vệ Động Vật\">\r\n                  Quỹ Bảo Vệ Động Vật\r\n                </Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Row\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                label=\"Thời Gian Hoạt Động\"\r\n                name=\"ThoiGianHoatDong\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Vui lòng chọn thời gian\",\r\n                  },\r\n                ]}\r\n                style={{\r\n                  width: \"47.5%\",\r\n                  marginRight: \"2.5%\",\r\n                }}\r\n              >\r\n                <RangePicker\r\n                  format={dateFormatList}\r\n                  disabledDate={(current) =>\r\n                    current.isBefore(moment().subtract(1, \"day\"))\r\n                  }\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Số Tiền Huy Động\"\r\n                name=\"SoTienHuyDong\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Số tiền huy động không được để trống\",\r\n                  },\r\n                  {\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Chỉ cho phép số số nguyên dương\",\r\n                  },\r\n                  () => ({\r\n                    validator(_, value) {\r\n                      if (!value || (value !== 0 && value >= 1000)) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error(\r\n                          \"Số tiền khuyên góp không được nhỏ hơn 1000đ.\"\r\n                        )\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}\r\n                style={{\r\n                  width: \"47.5%\",\r\n                  marginLeft: \"2.5%\",\r\n                }}\r\n              >\r\n                <InputNumber\r\n                  placeholder=\"Nhập số tiền huy dộng\"\r\n                  addonAfter={suffixSelector}\r\n                  style={{ width: \"100%\" }}\r\n                  formatter={(value) =>\r\n                    `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                  }\r\n                  min={1000}\r\n                  step={1}\r\n                  maxLength={14}\r\n                />\r\n              </Form.Item>\r\n            </Row>\r\n            <label\r\n              htmlFor=\"MoTaHoanCanh\"\r\n              style={{\r\n                width: \"80%\",\r\n                margin: \"0 10%\",\r\n              }}\r\n            >\r\n              Mô Tả Hoàn Cảnh\r\n            </label>\r\n            <Form.List\r\n              id=\"MoTaHoanCanh\"\r\n              name=\"MoTaHoanCanh\"\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n              initialValue={[{ NoiDung: \"\" }]}\r\n            >\r\n              {/* <TextArea rows={4} /> */}\r\n              {(fields, { add, remove }) => (\r\n                <>\r\n                  {fields.map(({ key, name, ...restField }) => (\r\n                    <div\r\n                      key={key}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        maxWidth: \"80%\",\r\n                        margin: \"auto\",\r\n                        marginBottom: 8,\r\n                      }}\r\n                    >\r\n                      <Form.Item\r\n                        {...restField}\r\n                        name={[name, \"NoiDung\"]}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"mô tả hoàn cảnh không được để trống\",\r\n                          },\r\n                        ]}\r\n                        noStyle\r\n                      >\r\n                        <TextArea rows={3} />\r\n                      </Form.Item>\r\n                      <MinusCircleOutlined\r\n                        onClick={() => remove(name)}\r\n                        span={4}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                  <Form.Item\r\n                    style={{\r\n                      maxWidth: \"40%\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"dashed\"\r\n                      onClick={() => add()}\r\n                      block\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Thêm nội dung mô tả\r\n                    </Button>\r\n                  </Form.Item>\r\n                </>\r\n              )}\r\n            </Form.List>\r\n            <div className={styled.upload}>\r\n              <Form.Item\r\n                label={`Hình Ảnh (số lượng : ${fileList.length})`}\r\n                name=\"HinhAnh\"\r\n                getValueProps={normFile}\r\n                rules={[\r\n                  {\r\n                    required: location.pathname === \"/create-HC\" ? true : false,\r\n                    message: \"Hình ảnh không được để trống\",\r\n                  },\r\n                  () => ({\r\n                    validator(_, value) {\r\n                      if (!value || fileList.length >= 3) {\r\n                        if (fileList.length <= 10) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error(\"Số lượng ảnh tối đa là 10.\")\r\n                        );\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error(\"Số lượng ảnh it nhất là 3.\")\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Upload.Dragger\r\n                  className={styled.parent}\r\n                  name=\"HinhAnh\"\r\n                  action={configApp.apiGateWay + \"/upload\"}\r\n                  listType=\"picture\"\r\n                  multiple={true}\r\n                  fileList={fileList}\r\n                  maxCount={10}\r\n                  onPreview={handlePreview}\r\n                  onChange={handleChange}\r\n                >\r\n                  <p className=\"ant-upload-drag-icon\">\r\n                    <UploadOutlined />\r\n                  </p>\r\n                  <p className=\"ant-upload-text\">\r\n                    Thêm hình ảnh của bạn vào đây <br />\r\n                    (số lượng it nhát là 5 và nhiều nhất là 10)\r\n                  </p>\r\n                </Upload.Dragger>\r\n              </Form.Item>\r\n            </div>\r\n            <Modal\r\n              open={previewOpen}\r\n              title={previewTitle}\r\n              footer={null}\r\n              onCancel={handleCancel}\r\n            >\r\n              <img\r\n                alt=\"example\"\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n                src={previewImage}\r\n              />\r\n            </Modal>\r\n            <Form.Item wrapperCol={{ span: 1, offset: 10 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\" disabled={isUpload}>\r\n                {location.pathname !== \"/edit-campaign\"\r\n                  ? \"Thêm Hoàn Cảnh\"\r\n                  : \"Sửa thông tin hoàn cảnh\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\nexport default FormCampaign;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_create\\test.js",[],["446","447"],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\CampaignAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_quyengop\\FormDonations.js",["448","449","450","451"],"import {\r\n  Button,\r\n  Modal,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Select,\r\n  Spin,\r\n  Typography,\r\n  Result,\r\n} from \"antd\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DonationAPI from \"../../API/DonationsAPI\";\r\nimport { valuesContext } from \"../../App\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\nconst { Text } = Typography;\r\nconst normFile = (e) => {\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e?.fileList;\r\n};\r\n\r\nconst getBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nconst FormDonations = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const dataUser = useContext(valuesContext).data.data;\r\n  const notifyError = useContext(valuesContext).notifyError;\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const { open, handlerOpen, data } = props;\r\n  const handleOk = () => {\r\n    form.submit();\r\n  };\r\n  const handleCancel = () => {\r\n    handlerOpen(false);\r\n    setSuccess(false);\r\n  };\r\n\r\n  const dateFormatList = \"DD/MM/YYYY\";\r\n\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle initialValue=\"VND\">\r\n      <Select style={{ width: 80 }}></Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  //thêm mới hoàn cảnh\r\n  const onFinish = async (values) => {\r\n    setLoad(true);\r\n    setLoading(true);\r\n    values.userId = dataUser?.userId;\r\n    values.campaignId = data?._id;\r\n    values.ThoiGianQuyenGop = new Date();\r\n    try {\r\n      const res = await DonationAPI.postNewDonation(values);\r\n      if (\r\n        res.message === \"Tạo quyên góp thành công, vui lòng chờ admin phê duyệt\"\r\n      ) {\r\n        setLoading(false);\r\n        setLoad(false);\r\n        setSuccess(true);\r\n        form.resetFields();\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setLoading(false);\r\n      setLoad(false);\r\n      notifyError(err?.response?.data?.errors[0].msg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      title={\"Quyên Góp - \" + data.MaHoanCanh}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={[\r\n        !success && (\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n        ),\r\n        !success && (\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            loading={loading}\r\n            onClick={handleOk}\r\n          >\r\n            Quyên Góp\r\n          </Button>\r\n        ),\r\n      ]}\r\n    >\r\n      {!success && (\r\n        <Spin tip=\"Loading...\" size=\"large\" spinning={load ? true : false}>\r\n          <div>\r\n            <Form\r\n              form={form}\r\n              layout=\"vertical\"\r\n              onKeyDown={(e) => (e.key === \"Enter\" ? e.preventDefault() : \"\")}\r\n              onFinish={onFinish}\r\n              initialValues={{\r\n                NguoiQuyenGop: dataUser?.HoVaTen,\r\n                HinhThucQuyenGop: \"ChuyenTienOnline\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                label=\"Người Quyên Góp\"\r\n                name=\"NguoiQuyenGop\"\r\n                rules={[{ max: 50, message: \"Chị được nhập tối đa 50 ký tự\" }]}\r\n                style={{\r\n                  maxWidth: \"80%\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <Input placeholder=\"VD: Nguyên Văn A\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Tên Công Khai\"\r\n                name=\"TenCongKhai\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Tên công khai không được để trống\",\r\n                  },\r\n                  { max: 50, message: \"Chị được nhập tối đa 50 ký tự\" },\r\n                ]}\r\n                style={{\r\n                  maxWidth: \"80%\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <Input placeholder=\"VD: Nguyễn Văn A\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Số Điện Thoại\"\r\n                name=\"SoDienThoai\"\r\n                rules={[\r\n                  { max: 50, message: \"Chỉ được nhập tối đa 50 ký tự\" },\r\n                  {\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Chỉ cho phép số số nguyên dương\",\r\n                  },\r\n                ]}\r\n                style={{\r\n                  maxWidth: \"80%\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <Input placeholder=\"VD: 0978123123\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Hình Thức Quyên Góp\"\r\n                name=\"HinhThucQuyenGop\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Hình thức quyên góp không được để trống\",\r\n                  },\r\n                ]}\r\n                style={{\r\n                  maxWidth: \"80%\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <Select>\r\n                  <Select.Option value=\"ChuyenTienOnline\">\r\n                    Chuyển Tiền Online\r\n                  </Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Số Tiền Quyên Góp\"\r\n                name=\"SoTienQuyenGop\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Số tiền huy động không được để trống\",\r\n                  },\r\n                  {\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Chỉ cho phép số số nguyên dương\",\r\n                  },\r\n                  () => ({\r\n                    validator(_, value) {\r\n                      if (!value || (value !== 0 && value >= 1000)) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error(\r\n                          \"Số tiền khuyên góp không được nhỏ hơn 1000đ.\"\r\n                        )\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}\r\n                style={{\r\n                  maxWidth: \"80%\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <InputNumber\r\n                  placeholder=\"Nhập số tiền quyên góp\"\r\n                  addonAfter={suffixSelector}\r\n                  style={{ width: \"100%\" }}\r\n                  formatter={(value) =>\r\n                    `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                  }\r\n                  min={1000}\r\n                  step={1}\r\n                  maxLength={14}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Lời Nhắn\"\r\n                name=\"LoiNhan\"\r\n                style={{\r\n                  maxWidth: \"80%\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <TextArea rows={1} placeholder=\"Nhập lời nhắn\" />\r\n              </Form.Item>\r\n            </Form>\r\n            {!dataUser && (\r\n              <Text type=\"warning\">\r\n                * Bạn nên đăng nhập và sử dụng tài khoản để có thể theo dõi chi\r\n                tiết những lần mà bạn đã quyên góp!{\" \"}\r\n                <Link to={\"/signin\"}>Đi đến đăng nhập!</Link>\r\n              </Text>\r\n            )}\r\n          </div>\r\n        </Spin>\r\n      )}\r\n      {success && (\r\n        <Result\r\n          status=\"success\"\r\n          title=\"Đã quyên góp thành công!\"\r\n          // subTitle=\"admin sẽ kiểm tra và duyệt đóng góp của ban! cảm ơn bạn đã đồng hành,chung tay góp sức cùng chúng tôi trên chặng đường giúp đỡ những hoàn cảnh khó khăn trên khắp miền tổ quốc\"\r\n          subTitle={\r\n            <div>\r\n              <p>\r\n                Đóng góp của bạn đã được ghi nhận và sẽ được admin kiểm tra và\r\n                phê duyệt sớm nhất có thể!\r\n              </p>\r\n              <p>\r\n                cảm ơn bạn đã đồng hành,chung tay góp sức cùng chúng tôi trên\r\n                chặng đường giúp đỡ những hoàn cảnh khó khăn trên khắp miền tổ\r\n                quốc\r\n              </p>\r\n            </div>\r\n          }\r\n          extra={[\r\n            <Button type=\"primary\" key=\"cancel\" onClick={handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n          ]}\r\n        />\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nexport default FormDonations;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Table\\TableCampaign.js",["452","453","454","455"],"import { SearchOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Input,\r\n  Table,\r\n  Select,\r\n  Pagination,\r\n  DatePicker,\r\n  Tooltip,\r\n  Spin,\r\n  Popconfirm,\r\n  Checkbox,\r\n  Button,\r\n  Tag,\r\n} from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CampaignAPI from \"../API/CampaignAPI\";\r\nimport convertMoney from \"../convertMoney\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport styped from \"./table.module.css\";\r\nimport \"./table.css\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst TableCampaign = () => {\r\n  const [data, setData] = useState([]);\r\n  const [dataGoc, setDataGoc] = useState([]);\r\n  const [valueMaHoanCanh, setValueMaHoanCanh] = useState(\"\");\r\n  const [valueTieuDe, setValueTieuDe] = useState(\"\");\r\n  const [valueDiaChi, setValueDiaChi] = useState(\"\");\r\n  const [valueDoiTuongQuyenGop, setValueDoiTuongQuyenGop] = useState(\"\");\r\n  const [valueNgayBatDau, setValueNgayBatDau] = useState(\"\");\r\n  const [valueNgayKetThuc, setValueNgayKetThuc] = useState(\"\");\r\n  const [valueSoTienHuyDong, setValueSoTienHuyDong] = useState(\"\");\r\n  const [valueSoTienDaNhan, setValueSoTienDaNhan] = useState(\"\");\r\n  const [valueLuotQuyenGop, setValueLuotQuyenGop] = useState(\"\");\r\n  const [page, setPage] = useState({ page: 1, pageSize: 10 });\r\n  const [loading, setLoading] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [checkedList, setCheckedList] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  //toastify thông báo thành công khi nhận được response chả về thành công\r\n  const notify = (values) =>\r\n    toast.success(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  //toastify thông báo thát bại khi nhận được response chả về thất bại\r\n  const notifyError = (values) =>\r\n    toast.error(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  // sự kiện chọn mục muốn xóa\r\n  const onChange = (list) => {\r\n    if (list.target.checked) {\r\n      setCheckedList([...checkedList, list.target.options]);\r\n    } else\r\n      setCheckedList(checkedList?.filter((x) => x !== list.target.options));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await CampaignAPI.getAllCampaignPaging(page);\r\n        if (res.message === \"lấy dữ liệu thanh công\") {\r\n          setDataGoc(res);\r\n          setData(res.data);\r\n          setLoad(false);\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setLoad(false);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [page, loading]);\r\n\r\n  // xử lý phân trang\r\n  //xử lý sự kiện onchang môi khi chuyển trang hoặc thêm mục hiện thì\r\n  const onChangePageCampaign = (page, pageSize) => {\r\n    setPage({ page: page, pageSize: pageSize });\r\n    setLoad(true);\r\n  };\r\n  const item = data?.map((item, index) => {\r\n    item.key = index;\r\n    item.stt = index + 1;\r\n    return item;\r\n  });\r\n\r\n  // lọc danh sách data gửi về theo value đang tìm kiếm\r\n  useEffect(() => {\r\n    const filterData = () => {\r\n      const test = dataGoc?.data?.filter(\r\n        (x) =>\r\n          x.MaHoanCanh.toString()\r\n            .toLowerCase()\r\n            .includes(valueMaHoanCanh.toLowerCase()) &&\r\n          x.TieuDe.toString()\r\n            .toLowerCase()\r\n            .includes(valueTieuDe.toLowerCase()) &&\r\n          x.DiaChi.toString()\r\n            .toLowerCase()\r\n            .includes(valueDiaChi.toLowerCase()) &&\r\n          x.DoiTuongQuyenGop.toString()\r\n            .toLowerCase()\r\n            .includes(valueDoiTuongQuyenGop.toLowerCase()) &&\r\n          dinhDangNgay(x.NgayBatDau)\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(valueNgayBatDau.toLowerCase()) &&\r\n          dinhDangNgay(x.NgayKetThuc)\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(valueNgayKetThuc.toLowerCase()) &&\r\n          x.SoTienHuyDong?.toString()\r\n            .toLowerCase()\r\n            .includes(valueSoTienHuyDong.toLowerCase()) &&\r\n          x.SoTienDaNhan?.toString()\r\n            .toLowerCase()\r\n            .includes(valueSoTienDaNhan.toLowerCase()) &&\r\n          x.LuotQuyenGop?.toString()\r\n            .toLowerCase()\r\n            .includes(valueLuotQuyenGop.toLowerCase())\r\n      );\r\n\r\n      setData(test);\r\n    };\r\n    filterData();\r\n  }, [\r\n    valueMaHoanCanh,\r\n    valueTieuDe,\r\n    valueDiaChi,\r\n    valueDoiTuongQuyenGop,\r\n    valueNgayBatDau,\r\n    valueNgayKetThuc,\r\n    valueSoTienHuyDong,\r\n    valueSoTienDaNhan,\r\n    valueLuotQuyenGop,\r\n  ]);\r\n  // mẫu input nhập value tìm kiếm\r\n  const inputSelecter = (title, value) => (\r\n    <div className=\"ant-input-affix-wrapper custom-text-input\">\r\n      <span\r\n        style={{ fontSize: \"110%\", margin: \"0px 5px\", alignSelf: \"center\" }}\r\n      >\r\n        <SearchOutlined style={{ color: \"#a0aab3\" }} />\r\n      </span>\r\n      <Input\r\n        placeholder={`${title}`}\r\n        onChange={(e) => {\r\n          value(e.target.value);\r\n        }}\r\n        style={{ border: \"none\" }}\r\n      />\r\n    </div>\r\n  );\r\n  const Selected = (title, value) => (\r\n    <Select\r\n      labelInValue\r\n      defaultValue={{\r\n        value: \"\",\r\n        label: \"tất cả\",\r\n      }}\r\n      style={{ width: 180 }}\r\n      onChange={(e) => value(e.value)}\r\n      options={[...title]}\r\n    />\r\n  );\r\n\r\n  const DateInput = (title, value) => {\r\n    const onChange = (date, dateString) => {\r\n      value(dateString);\r\n    };\r\n    const dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"DD-MM-YYYY\", \"DD-MM-YY\"];\r\n\r\n    return (\r\n      <DatePicker\r\n        placeholder={title}\r\n        format={dateFormatList}\r\n        onChange={onChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  //hàm sư lsy định dạng ngày dd/mm/yyyy\r\n  const dinhDangNgay = (a) => {\r\n    const day = new Date(a);\r\n    return `${day.getDate().toString().padStart(2, \"0\")}/${(day.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}/${day.getFullYear()}`;\r\n  };\r\n\r\n  // kiểu hàng được tạo sẵn\r\n  const columns = [\r\n    {\r\n      title: \"\",\r\n      // (\r\n      //   <Checkbox\r\n      //     // indeterminate={indeterminate}\r\n      //     onChange={onCheckAllChange}\r\n      //     checked={checkAll}\r\n      //   ></Checkbox>\r\n      // )\r\n      children: [\r\n        {\r\n          width: 40,\r\n          dataIndex: \"_id\",\r\n          fixed: \"left\",\r\n          render: function a(_, data) {\r\n            return (\r\n              <Checkbox options={data?._id} onChange={onChange}></Checkbox>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"STT\",\r\n      children: [\r\n        {\r\n          title: \"\",\r\n          dataIndex: \"stt\",\r\n          width: 60,\r\n          fixed: \"left\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Trạng Thái\",\r\n      children: [\r\n        {\r\n          width: 150,\r\n          className: \"tdcenter\",\r\n          render: (_, status) => {\r\n            if (status?.TrangThai === \"Đã hoàn thành\") {\r\n              return (\r\n                <Tag className=\"tag\" color={\"#FAAD14\"}>\r\n                  {status?.TrangThai}\r\n                </Tag>\r\n              );\r\n            }\r\n            if (\r\n              new Date(status?.NgayKetThuc) >= new Date() &&\r\n              status?.TrangThai === \"Chưa hoàn thành\"\r\n            ) {\r\n              return (\r\n                <Tag className=\"tag\" color={\"#6ABE39\"}>\r\n                  {status?.TrangThai}\r\n                </Tag>\r\n              );\r\n            }\r\n            if (\r\n              new Date(status?.NgayKetThuc) < new Date() &&\r\n              status?.TrangThai === \"Chưa hoàn thành\"\r\n            ) {\r\n              return (\r\n                <Tag className=\"tag\" color={\"#638be8\"}>\r\n                  Hết thời gian\r\n                </Tag>\r\n              );\r\n            }\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Mã Hoàn Cảnh\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueMaHoanCanh),\r\n          dataIndex: \"MaHoanCanh\",\r\n          width: 150,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Tiêu Đề\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueTieuDe),\r\n          dataIndex: \"TieuDe\",\r\n          width: 200,\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (TieuDe) => (\r\n            <Tooltip placement=\"topLeft\" title={TieuDe} color=\"#0798db\">\r\n              {TieuDe}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Địa Chỉ\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueDiaChi),\r\n          dataIndex: \"DiaChi\",\r\n          width: 200,\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (DiaChi) => (\r\n            <Tooltip placement=\"topLeft\" title={DiaChi} color=\"#0798db\">\r\n              {DiaChi}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Đôi Tượng Quyên Góp\",\r\n      children: [\r\n        {\r\n          title: Selected(\r\n            [\r\n              {\r\n                value: \"\",\r\n                label: \"tất cả\",\r\n              },\r\n              {\r\n                value: \"Người Già Và Người Khuyết Tật\",\r\n                label: \"Người Già Và Người Khuyết Tật\",\r\n              },\r\n              {\r\n                value: \"Trẻ Em\",\r\n                label: \"Trẻ Em\",\r\n              },\r\n              {\r\n                value: \"Người Vùng Sâu,Vùng Xa\",\r\n                label: \"Người Vùng Sâu,Vùng Xa\",\r\n              },\r\n              {\r\n                value: \"Bảo Vệ Động Vật\",\r\n                label: \"Bảo Vệ Động Vật\",\r\n              },\r\n            ],\r\n            setValueDoiTuongQuyenGop\r\n          ),\r\n          dataIndex: \"DoiTuongQuyenGop\",\r\n          width: 200,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Ngày Băt Đầu\",\r\n      children: [\r\n        {\r\n          title: DateInput(\"dd/mm/yyyy\", setValueNgayBatDau),\r\n          dataIndex: \"NgayBatDau\",\r\n          width: 200,\r\n          render: (NgayBatDau) => {\r\n            return dinhDangNgay(NgayBatDau);\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Ngày Kết Thúc\",\r\n      children: [\r\n        {\r\n          title: DateInput(\"dd/mm/yyyy\", setValueNgayKetThuc),\r\n          dataIndex: \"NgayKetThuc\",\r\n          width: 200,\r\n          render: (NgayKetThuc) => {\r\n            return dinhDangNgay(NgayKetThuc);\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Số Tiền Huy Động\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tim kiếm\", setValueSoTienHuyDong),\r\n          dataIndex: \"SoTienHuyDong\",\r\n          width: 200,\r\n          render: (SoTienHuyDong) => {\r\n            return convertMoney(SoTienHuyDong) + \" \" + \"VND\";\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Số Tiền Đã Nhận\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tim kiếm\", setValueSoTienDaNhan),\r\n          dataIndex: \"SoTienDaNhan\",\r\n          width: 200,\r\n          render: (SoTienDaNhan) => {\r\n            return convertMoney(SoTienDaNhan) + \" \" + \"VND\";\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Lượt Quyên Góp\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tim kiếm\", setValueLuotQuyenGop),\r\n          dataIndex: \"LuotQuyenGop\",\r\n          width: 150,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      children: [\r\n        {\r\n          title:\r\n            checkedList.length > 0 ? (\r\n              <Popconfirm\r\n                placement=\"left\"\r\n                title=\"Bạn có chắc muốn xóa các đợt quyên góp này?\"\r\n                description=\"Sau khi xóa sẽ không thể hoàn tác được bạn vẫn muốn tiếp tục?\"\r\n                onConfirm={async () => {\r\n                  setLoad(true);\r\n                  try {\r\n                    const res = await CampaignAPI.postRemoveManyCampaign({\r\n                      arrCampaignId: checkedList,\r\n                    });\r\n                    if (res.message === \"Đã xóa thành công!\") {\r\n                      setLoad(false);\r\n                      setLoading(true);\r\n                      setCheckedList([]);\r\n                      notify(res.message);\r\n                    }\r\n                  } catch (err) {\r\n                    console.log(err);\r\n                    setLoad(false);\r\n                    notifyError(err);\r\n                  }\r\n                }}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n              >\r\n                <Button type=\"dashed\" danger size=\"small\">\r\n                  Xóa mục đã chọn\r\n                </Button>\r\n              </Popconfirm>\r\n            ) : (\r\n              \"\"\r\n            ),\r\n          key: \"operation\",\r\n          fixed: \"right\",\r\n          width: 150,\r\n          render: function a(_, data) {\r\n            return (\r\n              checkedList.length === 0 && (\r\n                <div style={{ textAlign: \"center\", display: \"flex\" }}>\r\n                  <Tooltip title=\"Xem\" placement=\"top\" color=\"#0000007a\">\r\n                    <button\r\n                      className={styped.btnButtom}\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: `/quyengop/${data._id}`,\r\n                          state: data._id,\r\n                        })\r\n                      }\r\n                    >\r\n                      <svg\r\n                        width=\"30\"\r\n                        height=\"36\"\r\n                        viewBox=\"0 0 37 36\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M18.4998 21.7524C19.6001 21.7524 20.5344 21.368 21.3027 20.599C22.0716 19.8307 22.4561 18.8964 22.4561 17.7961C22.4561 16.6958 22.0716 15.7615 21.3027 14.9932C20.5344 14.2243 19.6001 13.8398 18.4998 13.8398C17.3994 13.8398 16.4651 14.2243 15.6968 14.9932C14.9279 15.7615 14.5434 16.6958 14.5434 17.7961C14.5434 18.8964 14.9279 19.8307 15.6968 20.599C16.4651 21.368 17.3994 21.7524 18.4998 21.7524ZM18.4998 20.4175C17.7716 20.4175 17.1528 20.1625 16.6434 19.6524C16.1334 19.143 15.8784 18.5243 15.8784 17.7961C15.8784 17.068 16.1334 16.4489 16.6434 15.9388C17.1528 15.4295 17.7716 15.1748 18.4998 15.1748C19.2279 15.1748 19.847 15.4295 20.357 15.9388C20.8664 16.4489 21.1211 17.068 21.1211 17.7961C21.1211 18.5243 20.8664 19.143 20.357 19.6524C19.847 20.1625 19.2279 20.4175 18.4998 20.4175ZM18.4998 24.5922C16.38 24.5922 14.4341 24.034 12.6619 22.9175C10.8904 21.801 9.53535 20.288 8.59684 18.3786C8.56448 18.3139 8.54021 18.2288 8.52403 18.1233C8.50785 18.0184 8.49976 17.9094 8.49976 17.7961C8.49976 17.6828 8.50785 17.5735 8.52403 17.468C8.54021 17.3631 8.56448 17.2783 8.59684 17.2136C9.53535 15.3042 10.8904 13.7913 12.6619 12.6748C14.4341 11.5583 16.38 11 18.4998 11C20.6195 11 22.5651 11.5583 24.3366 12.6748C26.1088 13.7913 27.4642 15.3042 28.4027 17.2136C28.435 17.2783 28.4593 17.3631 28.4755 17.468C28.4917 17.5735 28.4998 17.6828 28.4998 17.7961C28.4998 17.9094 28.4917 18.0184 28.4755 18.1233C28.4593 18.2288 28.435 18.3139 28.4027 18.3786C27.4642 20.288 26.1088 21.801 24.3366 22.9175C22.5651 24.034 20.6195 24.5922 18.4998 24.5922ZM18.4998 23.1359C20.3282 23.1359 22.0072 22.6544 23.5366 21.6913C25.0655 20.7288 26.2344 19.4304 27.0434 17.7961C26.2344 16.1618 25.0655 14.8631 23.5366 13.9C22.0072 12.9375 20.3282 12.4563 18.4998 12.4563C16.6713 12.4563 14.9923 12.9375 13.4629 13.9C11.9341 14.8631 10.7651 16.1618 9.95607 17.7961C10.7651 19.4304 11.9341 20.7288 13.4629 21.6913C14.9923 22.6544 16.6713 23.1359 18.4998 23.1359Z\"\r\n                          fill=\"#212121\"\r\n                        ></path>\r\n                      </svg>\r\n                    </button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Sửa\" placement=\"top\" color=\"#0000007a\">\r\n                    <button\r\n                      className={styped.btnButtom}\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: `/edit-campaign`,\r\n                          state: data._id,\r\n                        })\r\n                      }\r\n                    >\r\n                      <svg\r\n                        width=\"30\"\r\n                        height=\"36\"\r\n                        viewBox=\"0 0 37 36\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M11.65 25H12.9L22.15 15.75L20.925 14.5L11.65 23.775V25ZM25.35 14.65L21.975 11.3L23.3 9.99995C23.5834 9.71662 23.9377 9.57495 24.363 9.57495C24.7877 9.57495 25.1417 9.71662 25.425 9.99995L26.65 11.225C26.9334 11.525 27.0834 11.879 27.1 12.287C27.1167 12.6956 26.975 13.0416 26.675 13.325L25.35 14.65ZM11.05 26.5C10.8 26.5 10.5877 26.4126 10.413 26.238C10.2377 26.0626 10.15 25.85 10.15 25.6V23.5C10.15 23.3833 10.171 23.271 10.213 23.163C10.2544 23.0543 10.325 22.95 10.425 22.85L20.9 12.375L24.275 15.75L13.8 26.225C13.7 26.325 13.596 26.396 13.488 26.438C13.3794 26.4793 13.2667 26.5 13.15 26.5H11.05ZM21.525 15.125L20.925 14.5L22.15 15.75L21.525 15.125Z\"\r\n                          fill=\"#212121\"\r\n                        ></path>\r\n                      </svg>\r\n                    </button>\r\n                  </Tooltip>\r\n                  <Popconfirm\r\n                    placement=\"left\"\r\n                    title=\"Bạn có chắc muốn xóa đợt quyên góp này?\"\r\n                    description=\"Sau khi xóa sẽ không thể hoàn tác được bạn vẫn muốn tiếp tục?\"\r\n                    onConfirm={async () => {\r\n                      setLoad(true);\r\n                      try {\r\n                        const res = await CampaignAPI.postRemoveCampaign({\r\n                          campaignId: data._id,\r\n                        });\r\n                        if (res.message === \"Đã xóa campaign thành công!\") {\r\n                          setLoad(false);\r\n                          setLoading(true);\r\n                          notify(res.message);\r\n                        }\r\n                      } catch (err) {\r\n                        console.log(err);\r\n                        setLoad(false);\r\n                        notifyError(err);\r\n                      }\r\n                    }}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                  >\r\n                    <button className={styped.btnButtom}>\r\n                      <Tooltip title=\"Xóa\" placement=\"top\" color=\"#ff0101a3\">\r\n                        <svg\r\n                          width=\"15\"\r\n                          height=\"36\"\r\n                          viewBox=\"0 0 448 512\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0H284.2c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64S14.3 32 32 32h96l7.2-14.3zM32 128H416V448c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"\r\n                            fill=\"red\"\r\n                          ></path>\r\n                        </svg>\r\n                      </Tooltip>\r\n                    </button>\r\n                  </Popconfirm>\r\n                </div>\r\n              )\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <h2 className=\"title-table\">Danh Sách Đợt Quyên Góp</h2>\r\n      <Spin tip=\"Loading...\" spinning={load} size=\"large\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={item}\r\n          scroll={{ x: 1300, y: 300 }}\r\n          className={styped.tableMain}\r\n          pagination={{ style: { display: \"none\" }, pageSize: page.pageSize }}\r\n        />\r\n      </Spin>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          margin: \"2% 0\",\r\n        }}\r\n      >\r\n        <Pagination\r\n          defaultCurrent={page.page}\r\n          defaultPageSize={page.pageSize}\r\n          current={page?.page}\r\n          pageSizeOptions={[5, 10, 20, 50]}\r\n          onChange={onChangePageCampaign}\r\n          total={dataGoc?.total}\r\n          showSizeChanger\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCampaign;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\error\\error.jsx",["456","457"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Image from \"../Share/img/Image\";\r\nimport { Button, Typography } from \"antd\";\r\n\r\nimport styled from \"./error.module.css\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst Error = () => {\r\n  const history = useHistory();\r\n  window.scrollTo(0, 143);\r\n  return (\r\n    <div className={styled.container}>\r\n      <div className={styled.body}>\r\n        <img src={Image.imgError} />\r\n        <Typography></Typography>\r\n        <Typography.Title level={3}>\r\n          Xin lỗi, trang bạn truy cập không tồn tại.\r\n        </Typography.Title>\r\n        {/* <Text disabled aria-level={1}>\r\n          Xin lỗi, trang bạn truy cập không tồn tại.\r\n        </Text> */}\r\n        <Button type=\"primary\" onClick={() => history.replace(\"/\")}>\r\n          Back Home\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Table\\TableUser.js",["458","459","460","461"],"import { SearchOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Input,\r\n  Table,\r\n  Select,\r\n  Pagination,\r\n  Tooltip,\r\n  Spin,\r\n  Popconfirm,\r\n  Checkbox,\r\n  Button,\r\n} from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserAPI from \"../API/UserAPI\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport styped from \"./table.module.css\";\r\nimport \"./table.css\";\r\n\r\nconst TableUser = () => {\r\n  const [data, setData] = useState([]);\r\n  const [dataGoc, setDataGoc] = useState([]);\r\n  const [valueHoVaTen, setValueHoVaTen] = useState(\"\");\r\n  const [valueEmail, setValueEmail] = useState(\"\");\r\n  const [valueSoDienThoai, setValueSoDienThoai] = useState(\"\");\r\n  const [valueVaiTro, setValueVaiTro] = useState(\"\");\r\n  const [valueTrangThai, setValueTrangThai] = useState(\"\");\r\n  const [page, setPage] = useState({ page: 1, pageSize: 10 });\r\n  const [loading, setLoading] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [checkedList, setCheckedList] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  //toastify thông báo thành công khi nhận được response chả về thành công\r\n  const notify = (values) =>\r\n    toast.success(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  //toastify thông báo thát bại khi nhận được response chả về thất bại\r\n  const notifyError = (values) =>\r\n    toast.error(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  // sự kiện chọn mục muốn xóa\r\n  // const onChange = (list) => {\r\n  //   if (list.target.checked) {\r\n  //     setCheckedList([...checkedList, list.target.options]);\r\n  //   } else\r\n  //     setCheckedList(checkedList?.filter((x) => x !== list.target.options));\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await UserAPI.getAllData(\r\n          page,\r\n          \"Breare \" + window.localStorage.getItem(\"User\")\r\n        );\r\n        if (res.message === \"Lấy dữ liệu người dùng thành công\") {\r\n          setDataGoc(res);\r\n          setData(res.data);\r\n          setLoad(false);\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setLoad(false);\r\n        setLoading(false);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [page, loading]);\r\n\r\n  // xử lý phân trang\r\n  //xử lý sự kiện onchang môi khi chuyển trang hoặc thêm mục hiện thì\r\n  const onChangePageCampaign = (page, pageSize) => {\r\n    setPage({ page: page, pageSize: pageSize });\r\n    setLoad(true);\r\n  };\r\n  const item = data?.map((item, index) => {\r\n    item.key = index;\r\n    item.stt = index + 1;\r\n    return item;\r\n  });\r\n\r\n  // lọc danh sách data gửi về theo value đang tìm kiếm\r\n  useEffect(() => {\r\n    const filterData = () => {\r\n      const test = dataGoc?.data?.filter(\r\n        (x) =>\r\n          x.HoVaTen.toString()\r\n            .toLowerCase()\r\n            .includes(valueHoVaTen.toLowerCase()) &&\r\n          x.Email.toString().toLowerCase().includes(valueEmail.toLowerCase()) &&\r\n          x.VaiTro.toString()\r\n            .toLowerCase()\r\n            .includes(valueVaiTro.toLowerCase()) &&\r\n          x.TrangThai.toString()\r\n            .toLowerCase()\r\n            .includes(valueTrangThai.toLowerCase()) &&\r\n          (valueSoDienThoai.length > 0\r\n            ? x?.SoDienThoai?.toString()\r\n                ?.toLowerCase()\r\n                ?.includes(valueSoDienThoai?.toLowerCase())\r\n            : x.TrangThai.toString()\r\n                .toLowerCase()\r\n                .includes(valueTrangThai.toLowerCase()))\r\n      );\r\n\r\n      setData(test);\r\n    };\r\n    filterData();\r\n  }, [valueHoVaTen, valueEmail, valueSoDienThoai, valueVaiTro, valueTrangThai]);\r\n  // mẫu input nhập value tìm kiếm\r\n  const inputSelecter = (title, value) => (\r\n    <div className=\"ant-input-affix-wrapper custom-text-input\">\r\n      <span\r\n        style={{ fontSize: \"110%\", margin: \"0px 5px\", alignSelf: \"center\" }}\r\n      >\r\n        <SearchOutlined style={{ color: \"#a0aab3\" }} />\r\n      </span>\r\n      <Input\r\n        placeholder={`${title}`}\r\n        onChange={(e) => {\r\n          value(e.target.value);\r\n        }}\r\n        style={{ border: \"none\" }}\r\n      />\r\n    </div>\r\n  );\r\n  const Selected = (title, value) => (\r\n    <Select\r\n      labelInValue\r\n      defaultValue={{\r\n        value: \"\",\r\n        label: \"tất cả\",\r\n      }}\r\n      style={{ width: 180 }}\r\n      onChange={(e) => value(e.value)}\r\n      options={[...title]}\r\n    />\r\n  );\r\n\r\n  // kiểu hàng được tạo sẵn\r\n  const columns = [\r\n    // {\r\n    //   title: \"\",\r\n    //   children: [\r\n    //     {\r\n    //       width: 40,\r\n    //       dataIndex: \"_id\",\r\n    //       fixed: \"left\",\r\n    //       render: function a(_, data) {\r\n    //         return (\r\n    //           <Checkbox options={data?._id} onChange={onChange}></Checkbox>\r\n    //         );\r\n    //       },\r\n    //     },\r\n    //   ],\r\n    // },\r\n    {\r\n      title: \"STT\",\r\n      children: [\r\n        {\r\n          title: \"\",\r\n          dataIndex: \"stt\",\r\n          width: 60,\r\n          fixed: \"left\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Họ Và Tên\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueHoVaTen),\r\n          dataIndex: \"HoVaTen\",\r\n          width: 150,\r\n          fixed: \"left\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueEmail),\r\n          dataIndex: \"Email\",\r\n          width: 200,\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (TieuDe) => (\r\n            <Tooltip placement=\"topLeft\" title={TieuDe} color=\"#0798db\">\r\n              {TieuDe}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Số Điện Thoại\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueSoDienThoai),\r\n          dataIndex: \"SoDienThoai\",\r\n          width: 200,\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (DiaChi) => (\r\n            <Tooltip placement=\"topLeft\" title={DiaChi} color=\"#0798db\">\r\n              {DiaChi}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Vai Trò\",\r\n      children: [\r\n        {\r\n          title: Selected(\r\n            [\r\n              {\r\n                value: \"\",\r\n                label: \"tất cả\",\r\n              },\r\n              {\r\n                value: \"admin\",\r\n                label: \"Admin\",\r\n              },\r\n              {\r\n                value: \"người dùng\",\r\n                label: \"Người Dùng\",\r\n              },\r\n            ],\r\n            setValueVaiTro\r\n          ),\r\n          dataIndex: \"VaiTro\",\r\n          width: 200,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"TrangThai\",\r\n      children: [\r\n        {\r\n          title: Selected(\r\n            [\r\n              {\r\n                value: \"\",\r\n                label: \"tất cả\",\r\n              },\r\n              {\r\n                value: \"hoạt động\",\r\n                label: \"Hoạt Dộng\",\r\n              },\r\n              {\r\n                value: \"không hoạt động\",\r\n                label: \"Không Hoạt Động\",\r\n              },\r\n            ],\r\n            setValueTrangThai\r\n          ),\r\n          dataIndex: \"TrangThai\",\r\n          width: 200,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      children: [\r\n        {\r\n          title:\r\n            // checkedList.length > 0 ? (\r\n            //   <Popconfirm\r\n            //     placement=\"left\"\r\n            //     title=\"Bạn có chắc muốn xóa các đợt quyên góp này?\"\r\n            //     description=\"Sau khi xóa sẽ không thể hoàn tác được bạn vẫn muốn tiếp tục?\"\r\n            //     // onConfirm={async () => {\r\n            //     //   setLoad(true);\r\n            //     //   try {\r\n            //     //     const res = await CampaignAPI.postRemoveManyCampaign({\r\n            //     //       arrCampaignId: checkedList,\r\n            //     //     });\r\n            //     //     if (res.message === \"Đã xóa thành công!\") {\r\n            //     //       setLoad(false);\r\n            //     //       setLoading(true);\r\n            //     //       setCheckedList([]);\r\n            //     //       notify(res.message);\r\n            //     //     }\r\n            //     //   } catch (err) {\r\n            //     //     console.log(err);\r\n            //     //     setLoad(false);\r\n            //     //     notifyError(err);\r\n            //     //   }\r\n            //     // }}\r\n            //     okText=\"Yes\"\r\n            //     cancelText=\"No\"\r\n            //   >\r\n            //     <Button type=\"dashed\" danger size=\"small\">\r\n            //       Xóa mục đã chọn\r\n            //     </Button>\r\n            //   </Popconfirm>\r\n            // ) : (\r\n            \"\",\r\n          // )\r\n          key: \"operation\",\r\n          fixed: \"right\",\r\n          width: 150,\r\n          render: function a(_, data) {\r\n            return (\r\n              checkedList.length === 0 && (\r\n                <div style={{ textAlign: \"center\", display: \"flex\" }}>\r\n                  <Tooltip title=\"Xem\" placement=\"top\" color=\"#0000007a\">\r\n                    <button\r\n                      className={styped.btnButtom}\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: `/table-user/view/${data._id}`,\r\n                          state: data._id,\r\n                        })\r\n                      }\r\n                    >\r\n                      <svg\r\n                        width=\"30\"\r\n                        height=\"36\"\r\n                        viewBox=\"0 0 37 36\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M18.4998 21.7524C19.6001 21.7524 20.5344 21.368 21.3027 20.599C22.0716 19.8307 22.4561 18.8964 22.4561 17.7961C22.4561 16.6958 22.0716 15.7615 21.3027 14.9932C20.5344 14.2243 19.6001 13.8398 18.4998 13.8398C17.3994 13.8398 16.4651 14.2243 15.6968 14.9932C14.9279 15.7615 14.5434 16.6958 14.5434 17.7961C14.5434 18.8964 14.9279 19.8307 15.6968 20.599C16.4651 21.368 17.3994 21.7524 18.4998 21.7524ZM18.4998 20.4175C17.7716 20.4175 17.1528 20.1625 16.6434 19.6524C16.1334 19.143 15.8784 18.5243 15.8784 17.7961C15.8784 17.068 16.1334 16.4489 16.6434 15.9388C17.1528 15.4295 17.7716 15.1748 18.4998 15.1748C19.2279 15.1748 19.847 15.4295 20.357 15.9388C20.8664 16.4489 21.1211 17.068 21.1211 17.7961C21.1211 18.5243 20.8664 19.143 20.357 19.6524C19.847 20.1625 19.2279 20.4175 18.4998 20.4175ZM18.4998 24.5922C16.38 24.5922 14.4341 24.034 12.6619 22.9175C10.8904 21.801 9.53535 20.288 8.59684 18.3786C8.56448 18.3139 8.54021 18.2288 8.52403 18.1233C8.50785 18.0184 8.49976 17.9094 8.49976 17.7961C8.49976 17.6828 8.50785 17.5735 8.52403 17.468C8.54021 17.3631 8.56448 17.2783 8.59684 17.2136C9.53535 15.3042 10.8904 13.7913 12.6619 12.6748C14.4341 11.5583 16.38 11 18.4998 11C20.6195 11 22.5651 11.5583 24.3366 12.6748C26.1088 13.7913 27.4642 15.3042 28.4027 17.2136C28.435 17.2783 28.4593 17.3631 28.4755 17.468C28.4917 17.5735 28.4998 17.6828 28.4998 17.7961C28.4998 17.9094 28.4917 18.0184 28.4755 18.1233C28.4593 18.2288 28.435 18.3139 28.4027 18.3786C27.4642 20.288 26.1088 21.801 24.3366 22.9175C22.5651 24.034 20.6195 24.5922 18.4998 24.5922ZM18.4998 23.1359C20.3282 23.1359 22.0072 22.6544 23.5366 21.6913C25.0655 20.7288 26.2344 19.4304 27.0434 17.7961C26.2344 16.1618 25.0655 14.8631 23.5366 13.9C22.0072 12.9375 20.3282 12.4563 18.4998 12.4563C16.6713 12.4563 14.9923 12.9375 13.4629 13.9C11.9341 14.8631 10.7651 16.1618 9.95607 17.7961C10.7651 19.4304 11.9341 20.7288 13.4629 21.6913C14.9923 22.6544 16.6713 23.1359 18.4998 23.1359Z\"\r\n                          fill=\"#212121\"\r\n                        ></path>\r\n                      </svg>\r\n                    </button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Sửa\" placement=\"top\" color=\"#0000007a\">\r\n                    <button\r\n                      className={styped.btnButtom}\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: `/table-user/edit/${data._id}`,\r\n                          state: data._id,\r\n                        })\r\n                      }\r\n                    >\r\n                      <svg\r\n                        width=\"30\"\r\n                        height=\"36\"\r\n                        viewBox=\"0 0 37 36\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M11.65 25H12.9L22.15 15.75L20.925 14.5L11.65 23.775V25ZM25.35 14.65L21.975 11.3L23.3 9.99995C23.5834 9.71662 23.9377 9.57495 24.363 9.57495C24.7877 9.57495 25.1417 9.71662 25.425 9.99995L26.65 11.225C26.9334 11.525 27.0834 11.879 27.1 12.287C27.1167 12.6956 26.975 13.0416 26.675 13.325L25.35 14.65ZM11.05 26.5C10.8 26.5 10.5877 26.4126 10.413 26.238C10.2377 26.0626 10.15 25.85 10.15 25.6V23.5C10.15 23.3833 10.171 23.271 10.213 23.163C10.2544 23.0543 10.325 22.95 10.425 22.85L20.9 12.375L24.275 15.75L13.8 26.225C13.7 26.325 13.596 26.396 13.488 26.438C13.3794 26.4793 13.2667 26.5 13.15 26.5H11.05ZM21.525 15.125L20.925 14.5L22.15 15.75L21.525 15.125Z\"\r\n                          fill=\"#212121\"\r\n                        ></path>\r\n                      </svg>\r\n                    </button>\r\n                  </Tooltip>\r\n                  {data?.VaiTro !== \"admin\" && (\r\n                    <Popconfirm\r\n                      placement=\"left\"\r\n                      title=\"Bạn có chắc muốn xóa đợt quyên góp này?\"\r\n                      description=\"Sau khi xóa sẽ không thể hoàn tác được bạn vẫn muốn tiếp tục?\"\r\n                      onConfirm={async () => {\r\n                        setLoad(true);\r\n                        try {\r\n                          const res = await UserAPI.postAdminDeleteUser(\r\n                            { userId: data._id },\r\n                            \"Breare \" + window.localStorage.getItem(\"User\")\r\n                          );\r\n                          if (\r\n                            res.message ===\r\n                            \"đã xóa thông tin người dùng trên hệ thông\"\r\n                          ) {\r\n                            setLoad(false);\r\n                            setLoading(true);\r\n                            notify(res.message);\r\n                          }\r\n                        } catch (err) {\r\n                          setLoad(false);\r\n                          console.log(err);\r\n                          notifyError(\r\n                            err?.response?.data?.errors.length > 0\r\n                              ? err?.response?.data?.errors[0]?.msg\r\n                              : \"xóa thất bại\"\r\n                          );\r\n                        }\r\n                      }}\r\n                      okText=\"Yes\"\r\n                      cancelText=\"No\"\r\n                    >\r\n                      <button className={styped.btnButtom}>\r\n                        <Tooltip title=\"Xóa\" placement=\"top\" color=\"#ff0101a3\">\r\n                          <svg\r\n                            width=\"15\"\r\n                            height=\"36\"\r\n                            viewBox=\"0 0 448 512\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0H284.2c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64S14.3 32 32 32h96l7.2-14.3zM32 128H416V448c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"\r\n                              fill=\"red\"\r\n                            ></path>\r\n                          </svg>\r\n                        </Tooltip>\r\n                      </button>\r\n                    </Popconfirm>\r\n                  )}\r\n                </div>\r\n              )\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <h2 className=\"title-table\">Danh Sách Người Dùng</h2>\r\n      <Spin tip=\"Loading...\" spinning={load} size=\"large\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={item}\r\n          scroll={{ x: 1300, y: 300 }}\r\n          className={styped.tableMain}\r\n          pagination={{ style: { display: \"none\" }, pageSize: page.pageSize }}\r\n        />\r\n      </Spin>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          margin: \"2% 0\",\r\n        }}\r\n      >\r\n        <Pagination\r\n          defaultCurrent={page.page}\r\n          defaultPageSize={page.pageSize}\r\n          current={page?.page}\r\n          pageSizeOptions={[5, 10, 20, 50]}\r\n          onChange={onChangePageCampaign}\r\n          total={dataGoc?.total}\r\n          showSizeChanger\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableUser;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_Edit_User\\Form_Edit_User.jsx",["462","463","464","465","466","467","468","469","470","471","472","473","474"],"import {\r\n  UploadOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Select,\r\n  Upload,\r\n  Modal,\r\n  Spin,\r\n} from \"antd\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { useLocation, useHistory, useParams } from \"react-router-dom\";\r\nimport { valuesContext } from \"../../App\";\r\nimport UserAPI from \"../../API/UserAPI\";\r\n\r\nimport styled from \"./Form_Edit_User.module.css\";\r\nimport \"./Form_Edit_User.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst FormEditUser = () => {\r\n  const [maXacNhan, setMaXacNhan] = useState(false);\r\n  const [ma, setMa] = useState(\"\");\r\n  const [noEdit, setNoEdit] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [loadResetPassword, setLoadResetPassword] = useState(false);\r\n  const [taiKhoanVaEmail, setTaiKhoanVaEmail] = useState([]);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const location = useLocation();\r\n  const context = useContext(valuesContext);\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  //toastify thông báo thành công khi nhận được response chả về thành công\r\n  const notify = (values) =>\r\n    toast.success(values, {\r\n      autoClose: 3000,\r\n      onClose: () => history.push(\"/table-user\"),\r\n    });\r\n\r\n  //toastify thông báo thát bại khi nhận được response chả về thất bại\r\n  const notifyError = (values) =>\r\n    toast.error(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  // hook useEffect này dùng để gọi API và lấy giá trị của tên đăng nhập và email đã được đăng ký\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await UserAPI.getAllTenDangNhap();\r\n        setTaiKhoanVaEmail(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [load]);\r\n\r\n  //hàm dùng để kiểm tra value nhập có trùng với tên đăng nhập hay Email dữ liệu đã có trong hệ thống hay không\r\n  const kiemTraTaiKhoan = (e) => {\r\n    return taiKhoanVaEmail && taiKhoanVaEmail.find((x) => x.TenDangNhap === e);\r\n  };\r\n  const kiemTraEmail = (e) => {\r\n    return taiKhoanVaEmail && taiKhoanVaEmail.find((x) => x.Email === e);\r\n  };\r\n\r\n  //lấy dữ liệu người dùng và tự động thêm vào form edit\r\n  useEffect(() => {\r\n    if (params.type === \"edit\" && params.id) {\r\n      try {\r\n        const fetchData = async () => {\r\n          const res = await UserAPI.getUserId(\r\n            params.id,\r\n            \"Breare \" + window.localStorage.getItem(\"User\")\r\n          );\r\n          form.setFieldsValue({\r\n            TenDangNhap: res.data.TenDangNhap,\r\n            HoVaTen: res.data.HoVaTen,\r\n            Email: res.data.Email,\r\n            SoDienThoai: res.data.SoDienThoai,\r\n            VaiTro: res.data.VaiTro,\r\n            TrangThai: res.data.TrangThai,\r\n          });\r\n        };\r\n        fetchData();\r\n      } catch (err) {\r\n        console.log(err);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    }\r\n  }, [params.type, params.id]);\r\n\r\n  //admin giúp người dùng tạo một tài khoản mới\r\n  const onFinishCreateUser = async (values) => {\r\n    try {\r\n      setLoad(true);\r\n      const res = await UserAPI.postAdminCreateUser(\r\n        values,\r\n        \"Breare \" + window.localStorage.getItem(\"User\")\r\n      );\r\n      if (res.message === \"Thêm tài khoản mới thành công!\") {\r\n        setLoad(false);\r\n        form.resetFields();\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: res.message,\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n        }).then(() => {\r\n          notify(\"Chuẩn bị chuyển qua màn hình danh sách người dùng!\");\r\n        });\r\n      } else {\r\n        setLoad(false);\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"tạo tài khoản thất bại!\",\r\n          showConfirmButton: false,\r\n          timer: 4000,\r\n        });\r\n        // }\r\n      }\r\n    } catch (err) {\r\n      setLoad(false);\r\n      notifyError(err?.response?.data?.errors[0].msg);\r\n    }\r\n  };\r\n\r\n  //Update lại thông tin user\r\n  const onFinishEdit = async (values) => {\r\n    setLoad(true);\r\n    values.userId = params.id;\r\n    try {\r\n      console.log(values);\r\n      const res = await UserAPI.postAdminUpdateUser(\r\n        values,\r\n        \"Breare \" + window.localStorage.getItem(\"User\")\r\n      );\r\n      if (res.message === \"Cập nhật người dùng thành công\") {\r\n        setLoad(false);\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Cập nhật người dùng thành công!\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n        }).then(() => {\r\n          notify(\"Chuẩn bị chuyển qua màn hình danh sách người dùng!\");\r\n        });\r\n        setNoEdit(true);\r\n        form.resetFields();\r\n      }\r\n    } catch (err) {\r\n      setLoad(false);\r\n      notifyError(err?.response?.data?.errors[0].msg);\r\n    }\r\n  };\r\n  //Reset Password user yêu cầu quyên admin\r\n  const resetPasswordHandler = async () => {\r\n    setLoadResetPassword(true);\r\n    try {\r\n      const res = await UserAPI.postAdminResetPasswordUserId(\r\n        { userId: params.id },\r\n        \"Breare \" + window.localStorage.getItem(\"User\")\r\n      );\r\n      console.log(res);\r\n      if (res.message === \"đặt lại mật khẩu thành công!\") {\r\n        notify(res.message);\r\n        setLoadResetPassword(false);\r\n      }\r\n    } catch (err) {\r\n      setLoadResetPassword(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <h2 className=\"title-form\">\r\n        Form {params?.type === \"edit\" ? \"cập nhật\" : \"thêm mới\"} tài khoản\r\n      </h2>\r\n      <Spin tip=\"Loading...\" size=\"large\" spinning={load ? true : false}>\r\n        <div className={styled.font_Form}>\r\n          {params?.type === \"edit\" && params.id !== \"null\" && (\r\n            <Button\r\n              type=\"dashed\"\r\n              danger\r\n              className=\"ResetPassword\"\r\n              loading={loadResetPassword}\r\n              onClick={() =>\r\n                Swal.fire({\r\n                  title:\r\n                    \"Bạn có chắc muốn đặt lại mật khẩu của người dùng này?\",\r\n                  text: \"Điều sẽ khiến chủ của tài khoản không hài lòng về trang web! bạn vẫn muốn tiếp tục chứ? \",\r\n                  icon: \"warning\",\r\n                  showCancelButton: true,\r\n                  confirmButtonColor: \"#3085d6\",\r\n                  cancelButtonColor: \"#d33\",\r\n                  confirmButtonText: \"Xác nhận đặt lại mật khẩu\",\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    resetPasswordHandler();\r\n                  }\r\n                })\r\n              }\r\n            >\r\n              Đặt lại mật khâu của người dùng\r\n            </Button>\r\n          )}\r\n          <Button\r\n            danger\r\n            className=\"huyEdit\"\r\n            onClick={() => history.push(\"/table-user\")}\r\n          >\r\n            {params?.type === \"edit\" && params.id !== \"null\"\r\n              ? \"Hủy Cập Nhật\"\r\n              : \"Hủy thêm mới\"}\r\n          </Button>\r\n          <Form\r\n            form={form}\r\n            disabled={noEdit}\r\n            layout=\"vertical\"\r\n            onKeyDown={(e) => (e.key === \"Enter\" ? e.preventDefault() : \"\")}\r\n            onFinish={\r\n              params?.type === \"edit\" && params.id !== \"null\"\r\n                ? onFinishEdit\r\n                : onFinishCreateUser\r\n            }\r\n          >\r\n            <div>\r\n              <Row>\r\n                <Form.Item\r\n                  label=\"Tên đăng nhập\"\r\n                  name=\"TenDangNhap\"\r\n                  rules={\r\n                    params?.type === \"edit\" && params.id !== \"null\"\r\n                      ? [\r\n                          {\r\n                            required: true,\r\n                            message: \"Tên đăng nhập không được để trống\",\r\n                          },\r\n                        ]\r\n                      : [\r\n                          {\r\n                            required: true,\r\n                            message: \"Tên đăng nhập không được để trống!\",\r\n                          },\r\n                          {\r\n                            max: 100,\r\n                            message: \"Số ký tự không được vượt quá 100 ký tự\",\r\n                          },\r\n                          {\r\n                            pattern: new RegExp(/^[a-zA-Z0-9]+$/i),\r\n                            message:\r\n                              \"Tên đăng nhập chỉ cho phép các chữ cái (a-z,A-Z) số (0-9)\",\r\n                          },\r\n                          () => ({\r\n                            validator(_, value) {\r\n                              if (!value || !kiemTraTaiKhoan(value)) {\r\n                                return Promise.resolve();\r\n                              }\r\n                              return Promise.reject(\r\n                                new Error(\"Tên tài khoản đã có người sử dụng!\")\r\n                              );\r\n                            },\r\n                          }),\r\n                        ]\r\n                  }\r\n                  style={{\r\n                    maxWidth: \"40%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    disabled={\r\n                      params?.type === \"edit\" && params.id !== \"null\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Họ và tên\"\r\n                  name=\"HoVaTen\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Họ và tên không được để trống\",\r\n                    },\r\n                  ]}\r\n                  style={{\r\n                    maxWidth: \"40%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <Input placeholder=\"Nhập họ và tên mới\" />\r\n                </Form.Item>\r\n              </Row>\r\n              <Row>\r\n                <Form.Item\r\n                  label=\"Email\"\r\n                  name=\"Email\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Email không được để trống!\",\r\n                    },\r\n                    {\r\n                      max: 50,\r\n                      message: \"Số ký tự không được vượt quá 50 ký tự\",\r\n                    },\r\n                    {\r\n                      pattern: new RegExp(\r\n                        /^[a-zA-Z0-9._]+@[a-zA-Z0-9]+\\.(com|vn)$/g\r\n                      ),\r\n                      message: \"Email không hợp lệ\",\r\n                    },\r\n                    {\r\n                      pattern: new RegExp(/^[a-zA-Z0-9@.]+$/i),\r\n                      message:\r\n                        \"Email chỉ cho phép các chữ cái (a-z,A-Z) số (0-9) và dấu chấm (.)\",\r\n                    },\r\n                    location?.pathname?.split(\"/\")[1] === \"create-user\" &&\r\n                      (() => ({\r\n                        validator(_, value) {\r\n                          if (!value || !kiemTraEmail(value)) {\r\n                            return Promise.resolve();\r\n                          }\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Email đã tồn tại trên hệ thông! hãy chọn email khác.\"\r\n                            )\r\n                          );\r\n                        },\r\n                      })),\r\n                  ]}\r\n                  style={{\r\n                    maxWidth: \"40%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <Input placeholder=\"Nhập Email\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Số Điện Thoại\"\r\n                  name=\"SoDienThoai\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Số điện thoại không được để trống\",\r\n                    },\r\n                    {\r\n                      pattern: new RegExp(\r\n                        /^(0|\\+84)(3[2-9]|5[689]|7[0|6-9]|8[1-9]|9[0-9])[0-9]{7}$/\r\n                      ),\r\n                      message: \"Số điện thoại không đúng định dạng\",\r\n                    },\r\n                  ]}\r\n                  style={{\r\n                    maxWidth: \"40%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Nhập số điện thoại\"\r\n                  />\r\n                </Form.Item>\r\n              </Row>\r\n              <Row style={{ marginBottom: \"50px\" }}>\r\n                <Form.Item\r\n                  label=\"Vai Trò\"\r\n                  name=\"VaiTro\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Vai trò không được để trống\",\r\n                    },\r\n                  ]}\r\n                  style={{\r\n                    maxWidth: \"40%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <Select placeholder=\"Chọn vai trò\">\r\n                    <Select.Option value=\"người dùng\">Người dùng</Select.Option>\r\n                    <Select.Option value=\"admin\">Admin</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Trạng Thái\"\r\n                  name=\"TrangThai\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Trạng Thái không được để trống\",\r\n                    },\r\n                  ]}\r\n                  style={{\r\n                    maxWidth: \"40%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <Select placeholder=\"Chọn trạng thái\">\r\n                    <Select.Option value=\"hoạt động\">Hoạt Động</Select.Option>\r\n                    <Select.Option value=\"không hoạt động\">\r\n                      Không Hoạt Động\r\n                    </Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Row>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {params?.type === \"edit\" && params.id !== \"null\"\r\n                    ? \"Cập nhật\"\r\n                    : \"Thêm mới\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            {/* <div style={{ display: maXacNhan ? \"block\" : \"none\" }}>\r\n              <Form.Item\r\n                label=\"Xác nhận mã\"\r\n                name=\"XacNhanMa\"\r\n                rules={[\r\n                  () => ({\r\n                    validator(_, value) {\r\n                      if (!value || (value && value.length === 6)) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error(\"Số ký tự it nhất là 6 ký tự\")\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Nhập mã xác nhận\"\r\n                  maxLength={6}\r\n                  style={{ width: \"50%\" }}\r\n                />\r\n              </Form.Item>\r\n              <p>\r\n                Vui lòng kiểm tra email đã nhập ở mục đăng ký để lấy mã xác\r\n                thực!\r\n              </p>\r\n              <Form.Item style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  style={{ width: \"30%\" }}\r\n                >\r\n                  Xác nhận\r\n                </Button>\r\n              </Form.Item>\r\n            </div> */}\r\n          </Form>\r\n        </div>\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\nexport default FormEditUser;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Detail\\detail_User\\Detail_User.jsx",["475","476","477","478","479","480","481","482"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { valuesContext } from \"../../App\";\r\nimport {\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PhoneOutlined,\r\n  UserOutlined,\r\n  ScheduleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Switch,\r\n  Button,\r\n  Tabs,\r\n  Card,\r\n  List,\r\n  Row,\r\n  Typography,\r\n  Skeleton,\r\n  Avatar,\r\n  Space,\r\n  Spin,\r\n  Tooltip,\r\n  Modal,\r\n  Tag,\r\n} from \"antd\";\r\nimport UserAPI from \"../../API/UserAPI\";\r\nimport DonationAPI from \"../../API/DonationsAPI\";\r\nimport convertMoney from \"../../convertMoney\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport styled from \"./Detail_User.module.css\";\r\nimport \"./Detail._User.css\";\r\n\r\nconst DetailUser = () => {\r\n  const [data, setData] = useState(\"\");\r\n  const [dataDonationUser, setDataDonationUser] = useState(\"\");\r\n  const [loadUser, setLoadUser] = useState(false);\r\n  const [loadDonation, setLoadDonation] = useState(false);\r\n  const [key, setKey] = useState({ key1: \"1\", key2: \"1\" });\r\n  const [checkUpdateEmail, setCheckUpadateEmail] = useState(true);\r\n  const [taiKhoanVaEmail, setTaiKhoanVaEmail] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [ma, setMa] = useState(\"\");\r\n  const [maXacNhan, setMaXacNhan] = useState(false);\r\n\r\n  const { id } = useParams();\r\n  const context = useContext(valuesContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { Meta } = Card;\r\n  const { Text } = Typography;\r\n  const [form] = Form.useForm();\r\n  const [form2] = Form.useForm();\r\n  const [form3] = Form.useForm();\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  //toastify thông báo thành công khi nhận được response chả về thành công\r\n  const notify = (values) =>\r\n    toast.success(values, {\r\n      autoClose: 3000,\r\n      onClose: () => {\r\n        // if (location?.pathname?.split(\"/\")[1] === \"table-user\") {\r\n        setKey({ key1: \"1\", key2: \"1\" });\r\n        setDisabled(false);\r\n        setCheckUpadateEmail(true);\r\n        // }\r\n        // if (location?.pathname?.split(\"/\")[1] === \"CapNhatThongTinTaiKhoan\") {\r\n        //   history.replace(`/ThongTintaiKhoan/${id}`);\r\n        //   setDisabled(false);\r\n        //   setCheckUpadateEmail(true);\r\n        // }\r\n      },\r\n    });\r\n\r\n  // const notify2 = (values) =>\r\n  //   toast.success(values, {\r\n  //     autoClose: 3000,\r\n  //     onClose: () => {\r\n  //       setKey({ key1: \"1\", key2: \"1\" });\r\n  //     },\r\n  //   });\r\n\r\n  //toastify thông báo thát bại khi nhận được response chả về thất bại\r\n  const notifyError = (values) =>\r\n    toast.error(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  //hàm sử lý định dạng ngày DD/MM/YYYY\r\n  const dinhDangDate = (day) => {\r\n    const date = new Date(day);\r\n\r\n    return (\r\n      date.getHours().toString().padStart(2, \"0\") +\r\n      \":\" +\r\n      date.getMinutes().toString().padStart(2, \"0\") +\r\n      \" \" +\r\n      date.getDate().toString().padStart(2, \"0\") +\r\n      \"/\" +\r\n      (date.getMonth() + 1).toString().padStart(2, \"0\") +\r\n      \"/\" +\r\n      date.getFullYear()\r\n    );\r\n  };\r\n\r\n  //thông tin người dùng theo userId\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoadUser(true);\r\n      try {\r\n        if (location?.pathname?.split(\"/\")[1] === \"table-user\") {\r\n          const res = await UserAPI.getUserId(\r\n            id,\r\n            \"Breare \" + window.localStorage.getItem(\"User\")\r\n          );\r\n          if (res.message === \"lấy dữ liệu thành công\") {\r\n            setData(res);\r\n            form.setFieldsValue({\r\n              HoVaTen: res?.data?.HoVaTen,\r\n              SoDienThoai: res?.data?.SoDienThoai,\r\n              Email: res?.data?.Email,\r\n            });\r\n            setLoadUser(false);\r\n          }\r\n        } else if (\r\n          location?.pathname?.split(\"/\")[1] === \"ThongTintaiKhoan\" ||\r\n          location?.pathname?.split(\"/\")[1] === \"CapNhatThongTinTaiKhoan\"\r\n        ) {\r\n          const res = await UserAPI.getUserViewUserId(\r\n            id,\r\n            \"Breare \" + window.localStorage.getItem(\"User\")\r\n          );\r\n          if (res.message === \"lấy dữ liệu thành công\") {\r\n            setData(res);\r\n            form.setFieldsValue({\r\n              HoVaTen: res?.data?.HoVaTen,\r\n              SoDienThoai: res?.data?.SoDienThoai,\r\n              Email: res?.data?.Email,\r\n            });\r\n            setLoadUser(false);\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        setLoadUser(false);\r\n        console.log(err);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id, load, loading, location?.pathname?.split(\"/\")[1]]);\r\n\r\n  //lấy dữ liệu donation theo userId\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoadDonation(true);\r\n      try {\r\n        if (location?.pathname?.split(\"/\")[1] === \"table-user\") {\r\n          const res = await DonationAPI.getDonationOfUserId(\r\n            id,\r\n            \"Breare \" + window.localStorage.getItem(\"User\")\r\n          );\r\n          if (res.message === \"lấy dữ liệu thành công\") {\r\n            setDataDonationUser(res);\r\n            setLoadDonation(false);\r\n          } else {\r\n            setDataDonationUser(res);\r\n            setLoadDonation(false);\r\n          }\r\n        } else if (\r\n          location?.pathname?.split(\"/\")[1] === \"ThongTintaiKhoan\" ||\r\n          location?.pathname?.split(\"/\")[1] === \"CapNhatThongTinTaiKhoan\"\r\n        ) {\r\n          const res = await DonationAPI.getUserDoanetionOfUserId(\r\n            id,\r\n            \"Breare \" + window.localStorage.getItem(\"User\")\r\n          );\r\n          if (res.message === \"lấy dữ liệu thành công\") {\r\n            setDataDonationUser(res);\r\n            setLoadDonation(false);\r\n          } else {\r\n            setDataDonationUser(res);\r\n            setLoadDonation(false);\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        setLoadDonation(false);\r\n        console.log(err);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id, location?.pathname?.split(\"/\")[1]]);\r\n\r\n  // hook useEffect này dùng để gọi API và lấy giá trị của tên đăng nhập và email đã được đăng ký\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await UserAPI.getAllTenDangNhap();\r\n        setTaiKhoanVaEmail(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [load]);\r\n\r\n  //hàm dùng để kiểm tra value nhập có trùng với tên đăng nhập hay Email dữ liệu đã có trong hệ thống hay không\r\n  const kiemTraEmail = (e) => {\r\n    if (context.data.data.Email !== e) {\r\n      return taiKhoanVaEmail && taiKhoanVaEmail.find((x) => x.Email === e);\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //sử lý thay đổi luồng xử lý để khớp với title trong thẻ Menu\r\n  useEffect(() => {\r\n    if (location?.pathname?.split(\"/\")[1] === \"CapNhatThongTinTaiKhoan\") {\r\n      setKey({ key1: \"2\", key2: \"1\" });\r\n    } else if (location?.pathname?.split(\"/\")[1] === \"ThongTintaiKhoan\") {\r\n      setKey({ key1: \"1\", key2: \"1\" });\r\n    } else {\r\n      return;\r\n    }\r\n  }, [location?.pathname?.split(\"/\")[1]]);\r\n\r\n  //check người dùng có muôn thay đổi Email hay không!\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      Email: data?.data?.Email,\r\n    });\r\n  }, [checkUpdateEmail]);\r\n\r\n  const onChange = (k) => {\r\n    setKey({ key1: k, key2: key.key2 });\r\n  };\r\n  const onChange2 = (k) => {\r\n    setKey({ key1: key.key1, key2: k });\r\n  };\r\n  const EditPasswordHandler = () => {\r\n    setKey({ key1: \"2\", key2: \"2\" });\r\n  };\r\n  const EditDetailHandler = () => {\r\n    setKey({ key1: \"2\", key2: \"1\" });\r\n  };\r\n\r\n  const checkEditEmail = (checked) => {\r\n    setCheckUpadateEmail(checked);\r\n  };\r\n\r\n  //hàm sử lý gửi requet không nếu không thay đổi Email\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    setLoad(true);\r\n    values.userId = id;\r\n    try {\r\n      const res = await UserAPI.postUserUpdateUserId(\r\n        values,\r\n        \"Breare \" + window.localStorage.getItem(\"User\")\r\n      );\r\n      if (res.message === \"cập nhật thông tin thành công!\") {\r\n        setLoad(false);\r\n        setDisabled(true);\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Cập nhật thành công!\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n        }).then(() => {\r\n          notify(\"Chuẩn bị chuyển qua màn hình thông tin người dùng!\");\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setLoad(false);\r\n      console.log(err);\r\n      notifyError(err?.response?.data?.errors[0]?.msg);\r\n    }\r\n  };\r\n\r\n  //hàm sử lý gửi requet không nếu thay đổi Email mới\r\n  const onFinishEmail = async (values) => {\r\n    values.userId = id;\r\n    try {\r\n      if (maXacNhan) {\r\n        setLoading(true);\r\n        const res = await UserAPI.postXacNhanEmail(values, \"Breare \" + ma);\r\n        if (res.message === \"Cập nhật thông tìn và Email thành công!\") {\r\n          setLoading(false);\r\n          setCheckUpadateEmail(true);\r\n          setOpen(false);\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: \"Cập nhật thành công!\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          }).then(() => {\r\n            notify(\"Chuẩn bị chuyển qua màn hình thông tin người dùng!\");\r\n          });\r\n        }\r\n      } else {\r\n        setLoad(true);\r\n        const res = await UserAPI.postUserUpdateUserId(\r\n          values,\r\n          \"Breare \" + window.localStorage.getItem(\"User\")\r\n        );\r\n        console.log(res);\r\n        if (res.message === \"success\") {\r\n          setLoad(false);\r\n          setDisabled(true);\r\n          setMaXacNhan(true);\r\n          setMa(res.token);\r\n          setOpen(true);\r\n        } else {\r\n          setLoad(false);\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"tạo tài khoản thất bại!\",\r\n            showConfirmButton: false,\r\n            timer: 4000,\r\n          });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setLoad(false);\r\n      console.log(err);\r\n      notifyError(err?.response?.data?.errors[0]?.msg);\r\n    }\r\n  };\r\n  const showModal = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // hàm sử lý requet có dư liệu người dùng muốn thay đổi mật khẩu\r\n  const submitUpdatePassWord = async (values) => {\r\n    setLoad(true);\r\n    values.userId = id;\r\n    try {\r\n      const res = await UserAPI.postUserUpdatePassword(\r\n        values,\r\n        \"Breare \" + window.localStorage.getItem(\"User\")\r\n      );\r\n      if (res.message === \"thay đổi mật khẩu thành công!\") {\r\n        setLoad(false);\r\n        form3.resetFields();\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Cập nhật thành công!\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n        }).then(() => {\r\n          Swal.fire({\r\n            title: \"Bạn có muốn đăng nhập lại?\",\r\n            text: \"Đã thay đổi mật khẩu thành công , bạn có muốn đăng nhập lại hay vẫn ở lại phiên đăng nhập này?\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#26bc2c\",\r\n            cancelButtonColor: \"#3372ddf0\",\r\n            cancelButtonText: \"Ở lại phiên đăng nhập!\",\r\n            confirmButtonText: \"Đăng nhập lại!\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.localStorage.removeItem(\"User\");\r\n              context.loadAuth(true);\r\n              history.replace(\"/signin\");\r\n            } else {\r\n              notify(\"Chuẩn bị chuyển qua màn hình thông tin người dùng!\");\r\n            }\r\n          });\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setLoad(false);\r\n      console.log(err);\r\n      notifyError(err?.response?.data?.errors[0]?.msg);\r\n    }\r\n  };\r\n\r\n  const items = [\r\n    {\r\n      key: \"1\",\r\n      label: `Chi Tiết`,\r\n      children: (\r\n        <>\r\n          <div\r\n            style={{\r\n              marginTop: \"20px\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n            }}\r\n          >\r\n            <Card\r\n              style={{\r\n                width: 300,\r\n                height: 200,\r\n              }}\r\n              actions={\r\n                context?.data?.data?.userId === id && [\r\n                  <Tooltip\r\n                    title=\"Thay đổi mật khẩu\"\r\n                    placement=\"bottom\"\r\n                    color=\"#1677ff\"\r\n                  >\r\n                    <div\r\n                      className={styled.Buttom_edit_password}\r\n                      onClick={EditPasswordHandler}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"100%\"\r\n                        height=\"1em\"\r\n                        viewBox=\"0 0 448 512\"\r\n                      >\r\n                        <path\r\n                          fill=\"#00000073\"\r\n                          d=\"M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </Tooltip>,\r\n                  <Tooltip\r\n                    title=\"Cập nhật thông tin\"\r\n                    placement=\"bottom\"\r\n                    color=\"#1677ff\"\r\n                  >\r\n                    <EditOutlined key=\"edit\" onClick={EditDetailHandler} />\r\n                  </Tooltip>,\r\n                ]\r\n              }\r\n            >\r\n              <Skeleton loading={loadUser} avatar active>\r\n                <Meta\r\n                  avatar={\r\n                    <Avatar src=\"https://taimienphi.vn/tmp/cf/aut/mAKI-top-anh-dai-dien-dep-chat-1.jpg\" />\r\n                  }\r\n                  title={data?.data?.HoVaTen}\r\n                  description={\r\n                    <span>\r\n                      {data?.data?.TrangThai === \"hoạt động\" && (\r\n                        <LoadingOutlined style={{ color: \"green\" }} />\r\n                      )}\r\n                      {data?.data?.TrangThai === \"không hoạt động\" && (\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          height=\"1em\"\r\n                          viewBox=\"0 0 448 512\"\r\n                        >\r\n                          <path\r\n                            fill=\"red\"\r\n                            d=\"M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z\"\r\n                          />\r\n                        </svg>\r\n                      )}{\" \"}\r\n                      {data?.data?.TrangThai}\r\n                    </span>\r\n                  }\r\n                />\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                  <Row>\r\n                    <Space>\r\n                      <Text type=\"secondary\">\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"15\"\r\n                          height=\"15\"\r\n                          viewBox=\"0 -100 512 512\"\r\n                        >\r\n                          <path\r\n                            height=\"100%\"\r\n                            fill=\"#00000073\"\r\n                            d=\"M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48H48zM0 176V384c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V176L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z\"\r\n                          />\r\n                        </svg>{\" \"}\r\n                        email :\r\n                      </Text>\r\n                      <Text type=\"secondary\">{data?.data?.Email}</Text>\r\n                    </Space>\r\n                  </Row>\r\n                  {data?.data?.SoDienThoai && (\r\n                    <Row>\r\n                      <Space>\r\n                        <Text type=\"secondary\">\r\n                          <PhoneOutlined /> sđt :\r\n                        </Text>\r\n                        <Text type=\"secondary\">{data?.data?.SoDienThoai}</Text>\r\n                      </Space>\r\n                    </Row>\r\n                  )}\r\n                  <Row>\r\n                    <Space>\r\n                      <Text type=\"secondary\">\r\n                        <UserOutlined /> vai trò :\r\n                      </Text>\r\n                      <Text type=\"secondary\">\r\n                        {data?.data?.VaiTro === \"người dùng\"\r\n                          ? \"thành viên\"\r\n                          : \"quản trị viên\"}\r\n                      </Text>\r\n                    </Space>\r\n                  </Row>\r\n                </div>\r\n              </Skeleton>\r\n            </Card>\r\n            <Spin tip=\"Loading...\" spinning={loadDonation} size=\"large\">\r\n              <List\r\n                style={{ fontFamily: \"serif\" }}\r\n                itemLayout=\"vertical\"\r\n                size=\"small\"\r\n                header={\r\n                  <h3>\r\n                    {dataDonationUser?.data\r\n                      ? \"Những đợt quyên góp đã tham giá\"\r\n                      : dataDonationUser?.message}\r\n                  </h3>\r\n                }\r\n                pagination={{\r\n                  onChange: (page) => {\r\n                    console.log(page);\r\n                  },\r\n                  pageSize: 3,\r\n                }}\r\n                bordered\r\n                dataSource={dataDonationUser?.data}\r\n                renderItem={(item, index) => {\r\n                  return (\r\n                    <List.Item\r\n                      key={index}\r\n                      extra={\r\n                        <img\r\n                          width={272}\r\n                          alt=\"img1\"\r\n                          src={item?.campaign?.HinhAnh[0].url}\r\n                        />\r\n                      }\r\n                    >\r\n                      <List.Item.Meta\r\n                        title={\r\n                          <Link to={`/quyengop/${item?.campaign?._id}`}>\r\n                            Mã đợt quyên góp: {item.campaign.MaHoanCanh}\r\n                          </Link>\r\n                        }\r\n                        description={\r\n                          \"Thời gian quyên góp : \" +\r\n                          dinhDangDate(item.ThoiGianQuyenGop)\r\n                        }\r\n                      />\r\n                      <Row>\r\n                        <Space>\r\n                          <Text type=\"secondary\">\r\n                            <ScheduleOutlined /> trang thái quyên góp :\r\n                          </Text>\r\n                          <Text type=\"secondary\">\r\n                            <Tag\r\n                              className=\"tag\"\r\n                              color={\r\n                                item?.TrangThaiQuyenGop ? \"#6ABE39\" : \"#FAAD14\"\r\n                              }\r\n                            >\r\n                              {item?.TrangThaiQuyenGop\r\n                                ? \"Đã duyệt\"\r\n                                : \"Chờ Duyệt\"}\r\n                            </Tag>\r\n                          </Text>\r\n                        </Space>\r\n                      </Row>\r\n                      <Row>\r\n                        <Space>\r\n                          <Text type=\"secondary\">\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              height=\"1em\"\r\n                              viewBox=\"0 0 320 512\"\r\n                            >\r\n                              <path\r\n                                fill=\"#00000073\"\r\n                                d=\"M160 0c17.7 0 32 14.3 32 32V67.7c1.6 .2 3.1 .4 4.7 .7c.4 .1 .7 .1 1.1 .2l48 8.8c17.4 3.2 28.9 19.9 25.7 37.2s-19.9 28.9-37.2 25.7l-47.5-8.7c-31.3-4.6-58.9-1.5-78.3 6.2s-27.2 18.3-29 28.1c-2 10.7-.5 16.7 1.2 20.4c1.8 3.9 5.5 8.3 12.8 13.2c16.3 10.7 41.3 17.7 73.7 26.3l2.9 .8c28.6 7.6 63.6 16.8 89.6 33.8c14.2 9.3 27.6 21.9 35.9 39.5c8.5 17.9 10.3 37.9 6.4 59.2c-6.9 38-33.1 63.4-65.6 76.7c-13.7 5.6-28.6 9.2-44.4 11V480c0 17.7-14.3 32-32 32s-32-14.3-32-32V445.1c-.4-.1-.9-.1-1.3-.2l-.2 0 0 0c-24.4-3.8-64.5-14.3-91.5-26.3c-16.1-7.2-23.4-26.1-16.2-42.2s26.1-23.4 42.2-16.2c20.9 9.3 55.3 18.5 75.2 21.6c31.9 4.7 58.2 2 76-5.3c16.9-6.9 24.6-16.9 26.8-28.9c1.9-10.6 .4-16.7-1.3-20.4c-1.9-4-5.6-8.4-13-13.3c-16.4-10.7-41.5-17.7-74-26.3l-2.8-.7 0 0C119.4 279.3 84.4 270 58.4 253c-14.2-9.3-27.5-22-35.8-39.6c-8.4-17.9-10.1-37.9-6.1-59.2C23.7 116 52.3 91.2 84.8 78.3c13.3-5.3 27.9-8.9 43.2-11V32c0-17.7 14.3-32 32-32z\"\r\n                              />\r\n                            </svg>{\" \"}\r\n                            số tiền quyên góp :\r\n                          </Text>\r\n                          <Text type=\"secondary\">\r\n                            {convertMoney(item?.SoTienQuyenGop) + \" \" + \"VND\"}\r\n                          </Text>\r\n                        </Space>\r\n                      </Row>\r\n                      <Row>\r\n                        <Space>\r\n                          <Text type=\"secondary\">\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              height=\"1em\"\r\n                              viewBox=\"0 0 640 512\"\r\n                            >\r\n                              <path\r\n                                fill=\"#00000073\"\r\n                                d=\"M535 41c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l64 64c4.5 4.5 7 10.6 7 17s-2.5 12.5-7 17l-64 64c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l23-23L384 112c-13.3 0-24-10.7-24-24s10.7-24 24-24l174.1 0L535 41zM105 377l-23 23L256 400c13.3 0 24 10.7 24 24s-10.7 24-24 24L81.9 448l23 23c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0L7 441c-4.5-4.5-7-10.6-7-17s2.5-12.5 7-17l64-64c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM96 64H337.9c-3.7 7.2-5.9 15.3-5.9 24c0 28.7 23.3 52 52 52l117.4 0c-4 17 .6 35.5 13.8 48.8c20.3 20.3 53.2 20.3 73.5 0L608 169.5V384c0 35.3-28.7 64-64 64H302.1c3.7-7.2 5.9-15.3 5.9-24c0-28.7-23.3-52-52-52l-117.4 0c4-17-.6-35.5-13.8-48.8c-20.3-20.3-53.2-20.3-73.5 0L32 342.5V128c0-35.3 28.7-64 64-64zm64 64H96v64c35.3 0 64-28.7 64-64zM544 320c-35.3 0-64 28.7-64 64h64V320zM320 352a96 96 0 1 0 0-192 96 96 0 1 0 0 192z\"\r\n                              />\r\n                            </svg>{\" \"}\r\n                            Hình thức quyên góp :\r\n                          </Text>\r\n                          <Text type=\"secondary\">\r\n                            {item?.HinhThucQuyenGop === \"ChuyenTienOnline\"\r\n                              ? \"Chuyển Tiền Online\"\r\n                              : \"\"}\r\n                          </Text>\r\n                        </Space>\r\n                      </Row>\r\n                    </List.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Spin>\r\n          </div>\r\n        </>\r\n      ),\r\n    },\r\n    context?.data?.data?.userId === id && {\r\n      key: \"2\",\r\n      label: `Thay đổi thông tin`,\r\n      children: (\r\n        <>\r\n          <div\r\n            style={{\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <Tabs\r\n              tabPosition={\"left\"}\r\n              activeKey={key.key2}\r\n              items={[\r\n                {\r\n                  key: \"1\",\r\n                  label: \"Cập nhật thông tin\",\r\n                  children: (\r\n                    <>\r\n                      <Spin tip=\"Loading\" spinning={load} size=\"large\">\r\n                        <Form\r\n                          disabled={disabled}\r\n                          {...layout}\r\n                          name=\"nest-messages\"\r\n                          form={form}\r\n                          // initialValues={{\r\n                          //   HoVaTen: data?.data?.HoVaTen,\r\n                          //   SoDienThoai: data?.data?.SoDienThoai,\r\n                          // }}\r\n                          onFinish={checkUpdateEmail ? onFinish : onFinishEmail}\r\n                        >\r\n                          <Form.Item\r\n                            name=\"HoVaTen\"\r\n                            label=\"Họ Và Tên\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Họ và tên không được để trống!\",\r\n                              },\r\n                              {\r\n                                max: 150,\r\n                                message:\r\n                                  \"Số ký tự không được vượt quá 150 ký tự\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input />\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Không cập nhập email\">\r\n                            <Switch\r\n                              defaultChecked={checkUpdateEmail}\r\n                              onChange={checkEditEmail}\r\n                            />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            name={checkUpdateEmail ? \"\" : \"Email\"}\r\n                            label=\"Email\"\r\n                            rules={\r\n                              !checkUpdateEmail && [\r\n                                {\r\n                                  required: true,\r\n                                  message: \"Email không được để trống!\",\r\n                                },\r\n                                {\r\n                                  max: 50,\r\n                                  message:\r\n                                    \"Số ký tự không được vượt quá 50 ký tự\",\r\n                                },\r\n                                {\r\n                                  pattern: new RegExp(\r\n                                    /^[a-zA-Z0-9._]+@[a-zA-Z0-9]+\\.(com|vn)$/g\r\n                                  ),\r\n                                  message: \"Email không hợp lệ\",\r\n                                },\r\n                                {\r\n                                  pattern: new RegExp(/^[a-zA-Z0-9@.]+$/i),\r\n                                  message:\r\n                                    \"Email chỉ cho phép các chữ cái (a-z,A-Z) số (0-9) và dấu chấm (.)\",\r\n                                },\r\n                                () => ({\r\n                                  validator(_, value) {\r\n                                    if (!value || !kiemTraEmail(value)) {\r\n                                      return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(\r\n                                      new Error(\r\n                                        \"Email đã tồn tại trên hệ thông! hãy chọn email khác.\"\r\n                                      )\r\n                                    );\r\n                                  },\r\n                                }),\r\n                              ]\r\n                            }\r\n                          >\r\n                            <Input disabled={checkUpdateEmail || disabled} />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name=\"SoDienThoai\"\r\n                            label=\"Số Điện Thoại\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Số điện thoại không được để trống!\",\r\n                              },\r\n                              {\r\n                                pattern: new RegExp(\r\n                                  /^(0|\\+84)(3[2-9]|5[689]|7[0|6-9]|8[1-9]|9[0-9])[0-9]{7}$/\r\n                                ),\r\n                                message: \"Số điện thoại không đúng định dạng\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            wrapperCol={{\r\n                              ...layout.wrapperCol,\r\n                              offset: 8,\r\n                            }}\r\n                          >\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                              Cập nhật\r\n                            </Button>\r\n                          </Form.Item>\r\n                        </Form>\r\n                        {disabled && !checkUpdateEmail && (\r\n                          <Row justify=\"end\">\r\n                            <Button type=\"primary\" onClick={showModal}>\r\n                              Nhập mã xác thực\r\n                            </Button>\r\n                          </Row>\r\n                        )}\r\n                      </Spin>\r\n                      <Modal\r\n                        open={open}\r\n                        title=\"Xác nhận mã thay đổi thông tin và Email\"\r\n                        // onOk={handleOk}\r\n                        onCancel={handleCancel}\r\n                        footer={[\r\n                          <Button key=\"back\" onClick={handleCancel}>\r\n                            Đóng\r\n                          </Button>,\r\n                          <Button\r\n                            key=\"submit\"\r\n                            type=\"primary\"\r\n                            loading={loading}\r\n                            onClick={() => form2.submit()}\r\n                          >\r\n                            Gửi mã\r\n                          </Button>,\r\n                        ]}\r\n                      >\r\n                        <Form form={form2} onFinish={onFinishEmail}>\r\n                          <Form.Item\r\n                            label=\"Mã xác nhận\"\r\n                            name=\"XacNhanMa\"\r\n                            rules={[\r\n                              () => ({\r\n                                validator(_, value) {\r\n                                  if (!value || (value && value.length === 6)) {\r\n                                    return Promise.resolve();\r\n                                  }\r\n                                  return Promise.reject(\r\n                                    new Error(\"Số ký tự it nhất là 6 ký tự\")\r\n                                  );\r\n                                },\r\n                              }),\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              placeholder=\"Nhập mã xác nhận\"\r\n                              maxLength={6}\r\n                            />\r\n                          </Form.Item>\r\n                          <p>\r\n                            Vui lòng kiểm tra email đã nhập ở mục đăng ký để lấy\r\n                            mã xác thực!\r\n                          </p>\r\n                        </Form>\r\n                      </Modal>\r\n                    </>\r\n                  ),\r\n                },\r\n                {\r\n                  key: \"2\",\r\n                  label: \"Thay đổi mật khẩu\",\r\n                  children: (\r\n                    <>\r\n                      <Spin tip=\"Loading\" spinning={load} size=\"large\">\r\n                        <Form\r\n                          {...layout}\r\n                          name=\"nest-messages2\"\r\n                          form={form3}\r\n                          onFinish={submitUpdatePassWord}\r\n                        >\r\n                          <Form.Item\r\n                            name=\"MatKhauCu\"\r\n                            label=\"Mật khẩu cũ\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"mật khẩu cũ không được để trống!\",\r\n                              },\r\n                              {\r\n                                max: 50,\r\n                                message:\r\n                                  \"Số ký tự không được vượt quá 50 ký tự\",\r\n                              },\r\n                              {\r\n                                min: 8,\r\n                                message: \"Số ký tự it nhất là 8 ký tự\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input.Password placeholder=\"Nhập mật khâu cũ\" />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name=\"MatKhauMoi\"\r\n                            label=\"Mật khẩu mới\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Mật khẩu mới không được để trống!\",\r\n                              },\r\n                              {\r\n                                max: 50,\r\n                                message:\r\n                                  \"Số ký tự không được vượt quá 50 ký tự\",\r\n                              },\r\n                              {\r\n                                min: 8,\r\n                                message: \"Số ký tự it nhất là 8 ký tự\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input.Password placeholder=\"Nhập mật khâu mới\" />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name=\"NhapLaiMatKhauMoi\"\r\n                            label=\"Nhập lại mật khẩu mới\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Vui lòng nhập lại mật khẩu\",\r\n                              },\r\n                              ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                  if (\r\n                                    !value ||\r\n                                    getFieldValue(\"MatKhauMoi\") === value\r\n                                  ) {\r\n                                    return Promise.resolve();\r\n                                  }\r\n                                  return Promise.reject(\r\n                                    new Error(\r\n                                      \"Hai mật khẩu mới bạn đã nhập không khớp!\"\r\n                                    )\r\n                                  );\r\n                                },\r\n                              }),\r\n                            ]}\r\n                          >\r\n                            <Input.Password placeholder=\"Nhập mật khâu cũ\" />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            wrapperCol={{\r\n                              ...layout.wrapperCol,\r\n                              offset: 8,\r\n                            }}\r\n                          >\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                              Thay đổi mật khẩu\r\n                            </Button>\r\n                          </Form.Item>\r\n                        </Form>\r\n                      </Spin>\r\n                    </>\r\n                  ),\r\n                },\r\n              ]}\r\n              onChange={onChange2}\r\n            ></Tabs>\r\n          </div>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ToastContainer />\r\n      <Tabs activeKey={key.key1} items={items} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailUser;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\DonationsAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Authentication\\ForgotPassword.jsx",["483","484","485","486"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport UserAPI from \"../API/UserAPI\";\r\nimport { Button, Form, Input, Spin } from \"antd\";\r\nimport Swal from \"sweetalert2\";\r\nimport { valuesContext } from \"../App\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport styled from \"./Auth.module.css\";\r\n\r\nfunction ForgotPassword(props) {\r\n  const [load, setLoad] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [maXacNhan, setMaXacNhan] = useState(false);\r\n  const [ma, setMa] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  //thông báo tự đông chuyển trang\r\n  const notify = () =>\r\n    toast.success(\"Chuẩn bị chuyến đến màng hình đăng nhập!\", {\r\n      autoClose: 3000,\r\n      onClose: () => history.push(\"/signin\", { pathName: location.pathname }),\r\n    });\r\n\r\n  window.scrollTo(0, 143);\r\n\r\n  const onFinish = async (values) => {\r\n    // console.log(\"Success:\" /*, values*/);\r\n    try {\r\n      if (maXacNhan) {\r\n        values.userId = ma?.userId;\r\n        setLoad(true);\r\n        const res = await UserAPI.postUserResetPassword(\r\n          values,\r\n          \"Breare \" + ma?.token\r\n        );\r\n        if (\r\n          res.message ===\r\n          \"đặt lại mật khẩu thành công thành công! Vui lòng kiếm tra hòm thư của bạn\"\r\n        ) {\r\n          setLoad(false);\r\n          form.resetFields();\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: res.message,\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          }).then(() => {\r\n            notify();\r\n          });\r\n        } else {\r\n          setLoad(false);\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"tạo tài khoản thất bại!\",\r\n            showConfirmButton: false,\r\n            timer: 4000,\r\n          });\r\n        }\r\n        setMaXacNhan(false);\r\n      } else {\r\n        setLoad(true);\r\n        const res = await UserAPI.postEmailSendMaXacThuc(values);\r\n        if (res.message === \"success\") {\r\n          setLoad(false);\r\n          setMaXacNhan(true);\r\n          setMa(res);\r\n        } else {\r\n          setLoad(false);\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"tạo tài khoản thất bại!\",\r\n            showConfirmButton: false,\r\n            timer: 4000,\r\n          });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setLoad(false);\r\n      console.log(err.response);\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: err.response?.data.errors[0].msg,\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n      });\r\n    }\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Spin\r\n      tip=\"...Loading\"\r\n      size=\"large\"\r\n      spinning={load ? true : false}\r\n      style={{ top: 100 }}\r\n    >\r\n      <div className={styled.font_Signin}>\r\n        <Form\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"vertical\"\r\n        >\r\n          <h1>Thay Đổi Mật Khẩu</h1>\r\n          <div style={{ display: !maXacNhan ? \"block\" : \"none\" }}>\r\n            {/* <Form.Item\r\n              label=\"Tên tài khoản sử dụng để đăng nhập\"\r\n              name=\"TenDangNhap\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Tên đăng nhập không được để trống!\",\r\n                },\r\n                { max: 100, message: \"Số ký tự không được vượt quá 100 ký tự\" },\r\n                {\r\n                  pattern: new RegExp(/^[a-zA-Z0-9]+$/i),\r\n                  message:\r\n                    \"Tên đăng nhập chỉ cho phép các chữ cái (a-z,A-Z) số (0-9)\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Nhập tên tài khoản\" />\r\n            </Form.Item> */}\r\n            <Form.Item\r\n              label=\"Email đã đăng ký\"\r\n              name=\"Email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Email không được để trống!\",\r\n                },\r\n                { max: 50, message: \"Số ký tự không được vượt quá 50 ký tự\" },\r\n                {\r\n                  pattern: new RegExp(\r\n                    /^[a-zA-Z0-9._]+@[a-zA-Z0-9]+\\.(com|vn)$/g\r\n                  ),\r\n                  message: \"Email không hợp lệ\",\r\n                },\r\n                {\r\n                  pattern: new RegExp(/^[a-zA-Z0-9@.]+$/i),\r\n                  message:\r\n                    \"Email chỉ cho phép các chữ cái (a-z,A-Z) số (0-9) và dấu chấm (.)\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Nhập Email\" />\r\n            </Form.Item>\r\n          </div>\r\n          <div style={{ display: maXacNhan ? \"block\" : \"none\" }}>\r\n            <Form.Item\r\n              label=\"Xác nhận mã\"\r\n              name=\"XacNhanMa\"\r\n              rules={[\r\n                () => ({\r\n                  validator(_, value) {\r\n                    if (!value || (value && value.length === 6)) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      new Error(\"Số ký tự it nhất là 6 ký tự\")\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Nhập mã xác nhận\"\r\n                maxLength={6}\r\n                style={{ width: \"50%\" }}\r\n              />\r\n            </Form.Item>\r\n            <p>\r\n              Vui lòng kiểm tra email đã nhập ở mục đăng ký để lấy mã xác thực!\r\n            </p>\r\n            {/* <Form.Item style={{ textAlign: \"center\" }}>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"30%\" }}>\r\n                Xác nhận\r\n              </Button>\r\n            </Form.Item> */}\r\n          </div>\r\n          <Form.Item style={{ textAlign: \"center\" }}>\r\n            <Button htmlType=\"submit\" style={{ width: \"50%\" }}>\r\n              {!maXacNhan ? \"Gửi mã\" : \"Xác nhận\"}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Spin>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Table\\tableDonation.js",["487","488","489"],"import { SearchOutlined, PlusOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Input,\r\n  Table,\r\n  Select,\r\n  Pagination,\r\n  Tooltip,\r\n  Spin,\r\n  Popconfirm,\r\n  Checkbox,\r\n  Button,\r\n  DatePicker,\r\n  Tag,\r\n} from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport convertMoney from \"../convertMoney\";\r\nimport FormAdminCreateDonations from \"../Form/Form_admin_create_donation/FormAdminCreateDonations\";\r\n\r\nimport styped from \"./table.module.css\";\r\nimport \"./table.css\";\r\nimport DonationAPI from \"../API/DonationsAPI\";\r\n\r\nconst TableDonations = () => {\r\n  const [data, setData] = useState([]);\r\n  const [dataGoc, setDataGoc] = useState([]);\r\n  const [valueStatus, setValueStatus] = useState(\"\");\r\n  const [valueCampaignId, setValueCampaignId] = useState(\"\");\r\n  const [valueUserId, setValueUserId] = useState(\"\");\r\n  const [valueTenCongKhai, setValueTenCongKhai] = useState(\"\");\r\n  const [valueSoTienQuyenGop, setValueSoTienQuyenGop] = useState(\"\");\r\n  const [valueHinhThucQuyenGop, setValueHinhThucQuyenGop] = useState(\"\");\r\n  const [valueThoiGianQuyenGop, setValueThoiGianQuyenGop] = useState(\"\");\r\n  const [page, setPage] = useState({ page: 1, pageSize: 10 });\r\n  const [loading, setLoading] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [checkedList, setCheckedList] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  //toastify thông báo thành công khi nhận được response chả về thành công\r\n  const notify = (values) =>\r\n    toast.success(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  //toastify thông báo thát bại khi nhận được response chả về thất bại\r\n  const notifyError = (values) =>\r\n    toast.error(values, {\r\n      autoClose: 3000,\r\n    });\r\n\r\n  //Mở modal chứa form thêm mới hoặc cập nhật Donation\r\n  const openModal = (e) => setOpen(e);\r\n  //Thêm donation mới setLoading(true) để tại lại dữ liệu đã thay đổi\r\n  const loadCreateDonation = (e) => setLoading(e);\r\n\r\n  //hàm sư lsy định dạng ngày dd/mm/yyyy\r\n  const dinhDangNgay = (a) => {\r\n    const day = new Date(a);\r\n    return `${day.getDate().toString().padStart(2, \"0\")}/${(day.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}/${day.getFullYear()}`;\r\n  };\r\n\r\n  // sự kiện chọn mục muốn xóa\r\n  const onChange = (list) => {\r\n    if (list.target.checked) {\r\n      setCheckedList([...checkedList, list.target.options]);\r\n    } else\r\n      setCheckedList(checkedList?.filter((x) => x !== list.target.options));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await DonationAPI.getAllDonation(\r\n          page,\r\n          \"Breare \" + window.localStorage.getItem(\"User\")\r\n        );\r\n        if (res.message === \"lấy dữ liệu thành công!\") {\r\n          setDataGoc(res);\r\n          setData(res.data);\r\n          setLoad(false);\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setLoad(false);\r\n        setLoading(false);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [page, loading]);\r\n\r\n  // xử lý phân trang\r\n  //xử lý sự kiện onchang môi khi chuyển trang hoặc thêm mục hiện thì\r\n  const onChangePageCampaign = (page, pageSize) => {\r\n    setPage({ page: page, pageSize: pageSize });\r\n    setLoad(true);\r\n  };\r\n  const item = data?.map((item, index) => {\r\n    item.key = index;\r\n    item.stt = index + 1;\r\n    return item;\r\n  });\r\n\r\n  // lọc danh sách data gửi về theo value đang tìm kiếm\r\n  useEffect(() => {\r\n    const filterData = () => {\r\n      const test = dataGoc?.data?.filter((x) =>\r\n        valueStatus\r\n          ? x.TrangThai === valueStatus\r\n          : x.campaignId\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(valueCampaignId.toLowerCase()) &&\r\n            x.campaignId\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(valueCampaignId.toLowerCase()) &&\r\n            (valueUserId.length > 0\r\n              ? x?.userId\r\n                  ?.toString()\r\n                  .toLowerCase()\r\n                  .includes(valueUserId.toLowerCase())\r\n              : x.campaignId\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(valueCampaignId.toLowerCase())) &&\r\n            x.TenCongKhai.toString()\r\n              .toLowerCase()\r\n              .includes(valueTenCongKhai.toLowerCase()) &&\r\n            x.SoTienQuyenGop.toString()\r\n              .toLowerCase()\r\n              .includes(valueSoTienQuyenGop.toLowerCase()) &&\r\n            x.HinhThucQuyenGop?.toString()\r\n              ?.toLowerCase()\r\n              ?.includes(valueHinhThucQuyenGop.toLowerCase()) &&\r\n            dinhDangNgay(x.ThoiGianQuyenGop)\r\n              ?.toString()\r\n              ?.toLowerCase()\r\n              ?.includes(valueThoiGianQuyenGop.toLowerCase())\r\n      );\r\n\r\n      setData(test);\r\n    };\r\n    filterData();\r\n  }, [\r\n    valueCampaignId,\r\n    valueUserId,\r\n    valueTenCongKhai,\r\n    valueSoTienQuyenGop,\r\n    valueHinhThucQuyenGop,\r\n    valueThoiGianQuyenGop,\r\n    valueStatus,\r\n  ]);\r\n  // mẫu input nhập value tìm kiếm\r\n  const inputSelecter = (title, value) => (\r\n    <div className=\"ant-input-affix-wrapper custom-text-input\">\r\n      <span\r\n        style={{ fontSize: \"110%\", margin: \"0px 5px\", alignSelf: \"center\" }}\r\n      >\r\n        <SearchOutlined style={{ color: \"#a0aab3\" }} />\r\n      </span>\r\n      <Input\r\n        placeholder={`${title}`}\r\n        onChange={(e) => {\r\n          value(e.target.value);\r\n        }}\r\n        style={{ border: \"none\" }}\r\n      />\r\n    </div>\r\n  );\r\n  const Selected = (title, value) => (\r\n    <Select\r\n      labelInValue\r\n      defaultValue={{\r\n        value: \"\",\r\n        label: \"tất cả\",\r\n      }}\r\n      style={{ width: 180 }}\r\n      onChange={(e) => value(e.value)}\r\n      options={[...title]}\r\n    />\r\n  );\r\n  const DateInput = (title, value) => {\r\n    const onChange = (date, dateString) => {\r\n      value(dateString);\r\n    };\r\n    const dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"DD-MM-YYYY\", \"DD-MM-YY\"];\r\n\r\n    return (\r\n      <DatePicker\r\n        placeholder={title}\r\n        format={dateFormatList}\r\n        onChange={onChange}\r\n      />\r\n    );\r\n  };\r\n  // kiểu hàng được tạo sẵn\r\n  const columns = [\r\n    {\r\n      title: \"\",\r\n      children: [\r\n        {\r\n          width: 40,\r\n          dataIndex: \"_id\",\r\n          fixed: \"left\",\r\n          render: function a(_, data) {\r\n            return (\r\n              <Checkbox options={data?._id} onChange={onChange}></Checkbox>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"STT\",\r\n      children: [\r\n        {\r\n          title: \"\",\r\n          dataIndex: \"stt\",\r\n          width: 60,\r\n          fixed: \"left\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Trạng thái Quyên góp\",\r\n      children: [\r\n        {\r\n          title: Selected(\r\n            [\r\n              {\r\n                value: \"\",\r\n                label: \"tất cả\",\r\n              },\r\n              {\r\n                value: true,\r\n                label: \"Đã duyệt\",\r\n              },\r\n              {\r\n                value: false,\r\n                label: \"Chưa duyệt\",\r\n              },\r\n            ],\r\n            setValueStatus\r\n          ),\r\n          dataIndex: \"TrangThai\",\r\n          width: 200,\r\n\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (Status) => (\r\n            <Tooltip placement=\"topLeft\" title={Status} color=\"#0798db\">\r\n              <Tag className=\"tag\" color={Status ? \"#6ABE39\" : \"#FAAD14\"}>\r\n                {Status ? \"Đã duyệt\" : \"Chờ Duyệt\"}\r\n              </Tag>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Id Campaign\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueCampaignId),\r\n          dataIndex: \"campaignId\",\r\n          width: 200,\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (TieuDe) => (\r\n            <Tooltip placement=\"topLeft\" title={TieuDe} color=\"#0798db\">\r\n              {TieuDe}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Id người Quyên Góp\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueUserId),\r\n          dataIndex: \"userId\",\r\n          width: 200,\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (TieuDe) => (\r\n            <Tooltip placement=\"topLeft\" title={TieuDe} color=\"#0798db\">\r\n              {TieuDe}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Tên Công Khai\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueTenCongKhai),\r\n          dataIndex: \"TenCongKhai\",\r\n          width: 150,\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (name) => (\r\n            <Tooltip placement=\"topLeft\" title={name} color=\"#0798db\">\r\n              {name}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Số Tiền Quyên Góp\",\r\n      children: [\r\n        {\r\n          title: inputSelecter(\"Tìm kiếm\", setValueSoTienQuyenGop),\r\n          dataIndex: \"SoTienQuyenGop\",\r\n          width: 200,\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (SoTienQuyenGop) => {\r\n            return convertMoney(SoTienQuyenGop) + \" \" + \"VND\";\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Hình Thức Quyên Góp\",\r\n      children: [\r\n        {\r\n          title: Selected(\r\n            [\r\n              {\r\n                value: \"\",\r\n                label: \"tất cả\",\r\n              },\r\n              {\r\n                value: \"ChuyenTienOnline\",\r\n                label: \"Chuyển Tiền OnLine\",\r\n              },\r\n            ],\r\n            setValueHinhThucQuyenGop\r\n          ),\r\n          dataIndex: \"HinhThucQuyenGop\",\r\n          width: 200,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Thời Gian Quyên Góp\",\r\n      children: [\r\n        {\r\n          title: DateInput(\"dd/mm/yyyy\", setValueThoiGianQuyenGop),\r\n          dataIndex: \"ThoiGianQuyenGop\",\r\n          width: 150,\r\n          render: (ThoiGianQuyenGop) => {\r\n            return dinhDangNgay(ThoiGianQuyenGop);\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      children: [\r\n        {\r\n          title:\r\n            checkedList.length > 0 ? (\r\n              <Popconfirm\r\n                placement=\"left\"\r\n                title=\"Bạn có chắc muốn xóa các quyên góp này?\"\r\n                description=\"Sau khi xóa sẽ không thể hoàn tác được bạn vẫn muốn tiếp tục?\"\r\n                onConfirm={async () => {\r\n                  setLoad(true);\r\n                  try {\r\n                    const res = await DonationAPI.postAdminRemoveManyDonations(\r\n                      {\r\n                        arrDonationIds: checkedList,\r\n                      },\r\n                      \"Breare \" + window.localStorage.getItem(\"User\")\r\n                    );\r\n                    if (res.message === \"Đã xóa thành công!\") {\r\n                      setLoad(false);\r\n                      setLoading(true);\r\n                      setCheckedList([]);\r\n                      notify(res.message);\r\n                    }\r\n                  } catch (err) {\r\n                    console.log(err);\r\n                    setLoad(false);\r\n                    notifyError(err);\r\n                  }\r\n                }}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n              >\r\n                <Button type=\"dashed\" danger size=\"small\">\r\n                  Xóa mục đã chọn\r\n                </Button>\r\n              </Popconfirm>\r\n            ) : (\r\n              \"\"\r\n            ),\r\n          key: \"operation\",\r\n          fixed: \"right\",\r\n          width: 180,\r\n          render: function a(_, data) {\r\n            return (\r\n              checkedList.length === 0 && (\r\n                <div style={{ textAlign: \"center\", display: \"flex\" }}>\r\n                  <Tooltip title=\"phê duyệt\" placement=\"top\" color=\"#0000007a\">\r\n                    <button\r\n                      style={{\r\n                        visibility: data?.TrangThai ? \"hidden\" : \"block\",\r\n                      }}\r\n                      className={styped.btnButtom}\r\n                      onClick={() => {\r\n                        setOpen(true);\r\n                        setType({ type: \"approve\", donationId: data._id });\r\n                      }}\r\n                    >\r\n                      <CheckOutlined />\r\n                    </button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Xem\" placement=\"top\" color=\"#0000007a\">\r\n                    <button\r\n                      className={styped.btnButtom}\r\n                      onClick={() => {\r\n                        setOpen(true);\r\n                        setType({ type: \"view\", donationId: data._id });\r\n                      }}\r\n                    >\r\n                      <svg\r\n                        width=\"30\"\r\n                        height=\"36\"\r\n                        viewBox=\"0 0 37 36\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M18.4998 21.7524C19.6001 21.7524 20.5344 21.368 21.3027 20.599C22.0716 19.8307 22.4561 18.8964 22.4561 17.7961C22.4561 16.6958 22.0716 15.7615 21.3027 14.9932C20.5344 14.2243 19.6001 13.8398 18.4998 13.8398C17.3994 13.8398 16.4651 14.2243 15.6968 14.9932C14.9279 15.7615 14.5434 16.6958 14.5434 17.7961C14.5434 18.8964 14.9279 19.8307 15.6968 20.599C16.4651 21.368 17.3994 21.7524 18.4998 21.7524ZM18.4998 20.4175C17.7716 20.4175 17.1528 20.1625 16.6434 19.6524C16.1334 19.143 15.8784 18.5243 15.8784 17.7961C15.8784 17.068 16.1334 16.4489 16.6434 15.9388C17.1528 15.4295 17.7716 15.1748 18.4998 15.1748C19.2279 15.1748 19.847 15.4295 20.357 15.9388C20.8664 16.4489 21.1211 17.068 21.1211 17.7961C21.1211 18.5243 20.8664 19.143 20.357 19.6524C19.847 20.1625 19.2279 20.4175 18.4998 20.4175ZM18.4998 24.5922C16.38 24.5922 14.4341 24.034 12.6619 22.9175C10.8904 21.801 9.53535 20.288 8.59684 18.3786C8.56448 18.3139 8.54021 18.2288 8.52403 18.1233C8.50785 18.0184 8.49976 17.9094 8.49976 17.7961C8.49976 17.6828 8.50785 17.5735 8.52403 17.468C8.54021 17.3631 8.56448 17.2783 8.59684 17.2136C9.53535 15.3042 10.8904 13.7913 12.6619 12.6748C14.4341 11.5583 16.38 11 18.4998 11C20.6195 11 22.5651 11.5583 24.3366 12.6748C26.1088 13.7913 27.4642 15.3042 28.4027 17.2136C28.435 17.2783 28.4593 17.3631 28.4755 17.468C28.4917 17.5735 28.4998 17.6828 28.4998 17.7961C28.4998 17.9094 28.4917 18.0184 28.4755 18.1233C28.4593 18.2288 28.435 18.3139 28.4027 18.3786C27.4642 20.288 26.1088 21.801 24.3366 22.9175C22.5651 24.034 20.6195 24.5922 18.4998 24.5922ZM18.4998 23.1359C20.3282 23.1359 22.0072 22.6544 23.5366 21.6913C25.0655 20.7288 26.2344 19.4304 27.0434 17.7961C26.2344 16.1618 25.0655 14.8631 23.5366 13.9C22.0072 12.9375 20.3282 12.4563 18.4998 12.4563C16.6713 12.4563 14.9923 12.9375 13.4629 13.9C11.9341 14.8631 10.7651 16.1618 9.95607 17.7961C10.7651 19.4304 11.9341 20.7288 13.4629 21.6913C14.9923 22.6544 16.6713 23.1359 18.4998 23.1359Z\"\r\n                          fill=\"#212121\"\r\n                        ></path>\r\n                      </svg>\r\n                    </button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Sửa\" placement=\"top\" color=\"#0000007a\">\r\n                    <button\r\n                      className={styped.btnButtom}\r\n                      onClick={() => {\r\n                        setOpen(true);\r\n                        setType({ type: \"update\", donationId: data._id });\r\n                      }}\r\n                    >\r\n                      <svg\r\n                        width=\"30\"\r\n                        height=\"36\"\r\n                        viewBox=\"0 0 37 36\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M11.65 25H12.9L22.15 15.75L20.925 14.5L11.65 23.775V25ZM25.35 14.65L21.975 11.3L23.3 9.99995C23.5834 9.71662 23.9377 9.57495 24.363 9.57495C24.7877 9.57495 25.1417 9.71662 25.425 9.99995L26.65 11.225C26.9334 11.525 27.0834 11.879 27.1 12.287C27.1167 12.6956 26.975 13.0416 26.675 13.325L25.35 14.65ZM11.05 26.5C10.8 26.5 10.5877 26.4126 10.413 26.238C10.2377 26.0626 10.15 25.85 10.15 25.6V23.5C10.15 23.3833 10.171 23.271 10.213 23.163C10.2544 23.0543 10.325 22.95 10.425 22.85L20.9 12.375L24.275 15.75L13.8 26.225C13.7 26.325 13.596 26.396 13.488 26.438C13.3794 26.4793 13.2667 26.5 13.15 26.5H11.05ZM21.525 15.125L20.925 14.5L22.15 15.75L21.525 15.125Z\"\r\n                          fill=\"#212121\"\r\n                        ></path>\r\n                      </svg>\r\n                    </button>\r\n                  </Tooltip>\r\n                  <Popconfirm\r\n                    placement=\"left\"\r\n                    title=\"Bạn có chắc muốn xóa quyên góp này?\"\r\n                    description=\"Sau khi xóa sẽ không thể hoàn tác được bạn vẫn muốn tiếp tục?\"\r\n                    onConfirm={async () => {\r\n                      setLoad(true);\r\n                      try {\r\n                        const res = await DonationAPI.postAdminRemoveDonation(\r\n                          { donationId: data._id },\r\n                          \"Breare \" + window.localStorage.getItem(\"User\")\r\n                        );\r\n                        if (res.message === \"Đã xóa donation thành công!\") {\r\n                          setLoad(false);\r\n                          setLoading(true);\r\n                          notify(res.message);\r\n                        }\r\n                      } catch (err) {\r\n                        setLoad(false);\r\n                        console.log(err);\r\n                        notifyError(err?.response?.data?.errors[0]?.msg);\r\n                      }\r\n                    }}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                  >\r\n                    <button className={styped.btnButtom}>\r\n                      <Tooltip title=\"Xóa\" placement=\"top\" color=\"#ff0101a3\">\r\n                        <svg\r\n                          width=\"15\"\r\n                          height=\"36\"\r\n                          viewBox=\"0 0 448 512\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0H284.2c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64S14.3 32 32 32h96l7.2-14.3zM32 128H416V448c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"\r\n                            fill=\"red\"\r\n                          ></path>\r\n                        </svg>\r\n                      </Tooltip>\r\n                    </button>\r\n                  </Popconfirm>\r\n                </div>\r\n              )\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <h2 className=\"title-table\">Danh Sách Quyên Góp</h2>\r\n      <div style={{ width: \"80%\", margin: \"auto\", textAlign: \"end\" }}>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType({ type: \"create\" });\r\n          }}\r\n        >\r\n          Thêm Quyên Góp\r\n        </Button>\r\n      </div>\r\n      <FormAdminCreateDonations\r\n        open={open}\r\n        handlerOpen={openModal}\r\n        loadCreateDonation={loadCreateDonation}\r\n        notifyError={notifyError}\r\n        notify={notify}\r\n        type={type}\r\n      />\r\n      <Spin tip=\"Loading...\" spinning={load} size=\"large\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={item}\r\n          scroll={{ x: 1300, y: 280 }}\r\n          className={styped.tableMain}\r\n          pagination={{ style: { display: \"none\" }, pageSize: page.pageSize }}\r\n        />\r\n      </Spin>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          margin: \"2% 0\",\r\n        }}\r\n      >\r\n        <Pagination\r\n          defaultCurrent={page.page}\r\n          defaultPageSize={page.pageSize}\r\n          current={page?.page}\r\n          pageSizeOptions={[5, 10, 20, 50]}\r\n          onChange={onChangePageCampaign}\r\n          total={dataGoc?.total}\r\n          showSizeChanger\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableDonations;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Form\\Form_admin_create_donation\\FormAdminCreateDonations.js",["490","491","492","493","494","495","496","497","498","499","500","501"],"import { PlusOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Select,\r\n  Spin,\r\n  Typography,\r\n  TreeSelect,\r\n  Row,\r\n  Upload,\r\n} from \"antd\";\r\nimport configApp from \"../../configApp\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport DonationAPI from \"../../API/DonationsAPI\";\r\nimport CampaignAPI from \"../../API/CampaignAPI\";\r\nimport UserAPI from \"../../API/UserAPI\";\r\nimport { valuesContext } from \"../../App\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\nconst { Text } = Typography;\r\nconst normFile = (e) => {\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e?.fileList;\r\n};\r\n\r\nconst getBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nconst FormAdminCreateDonations = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [load, setLoad] = useState(false);\r\n  const [dataCampaign, setDataCampaign] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n  const [dataUserArr, setDataUserArr] = useState([]);\r\n  const [value2, setValue2] = useState(\"\");\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [fileList, setFileList] = useState([]);\r\n  const dataUser = useContext(valuesContext).data.data;\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const { open, handlerOpen, type, loadCreateDonation, notifyError, notify } =\r\n    props;\r\n  const handleOk = () => {\r\n    form.submit();\r\n  };\r\n  const handleCancel = () => {\r\n    handlerOpen(false);\r\n  };\r\n\r\n  const dateFormatList = \"DD/MM/YYYY\";\r\n\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle initialValue=\"VND\">\r\n      <Select style={{ width: 80 }}></Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  //lấy danh sách tất cả campaign\r\n  useEffect(() => {\r\n    const fetchDate = async () => {\r\n      try {\r\n        const res = await CampaignAPI.getAllCampaign();\r\n        if (res.message === \"lấy dữ liệu thanh công\") {\r\n          setDataCampaign(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    };\r\n    fetchDate();\r\n  }, []);\r\n  //Lấy danh sách tất cả các user\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await UserAPI.AdminGetAllData(\r\n          \"Breare \" + window.localStorage.getItem(\"User\")\r\n        );\r\n        if (res.message === \"Lấy dữ liệu người dùng thành công\") {\r\n          setDataUserArr(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      SoDienThoai: value2.split(\" - \")[3] ?? \"\",\r\n      TenCongKhai: value2.split(\" - \")[0] ?? \"\",\r\n    });\r\n  }, [value2]);\r\n  //xóa tất cả giá trị cũ khi thêm mới form donation\r\n  useEffect(() => {\r\n    if (type?.type === \"create\") {\r\n      form.resetFields();\r\n      setFileList([]);\r\n      setValue(\"\");\r\n      setValue2(\"\");\r\n    }\r\n  }, [type]);\r\n\r\n  //admin lấy dữ liệu donation theo donationId để xem chi tiết\r\n  useEffect(() => {\r\n    if (type?.type === \"view\" || type?.type === \"approve\") {\r\n      form.resetFields();\r\n      setFileList([]);\r\n      setValue(\"\");\r\n      setValue2(\"\");\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await DonationAPI.getAdminFindByIdDonation(\r\n            type?.donationId,\r\n            \"Breare \" + window.localStorage.getItem(\"User\")\r\n          );\r\n          if (res.message === \"Lấy dữ liệu thành công!\") {\r\n            form.setFieldsValue({\r\n              MaDotQuyenGop: res.data?.campaignId?.MaHoanCanh,\r\n              NguoiQuyenGop: res.data?.NguoiQuyenGop,\r\n              TenCongKhai: res.data?.TenCongKhai,\r\n              SoDienThoai: res.data?.SoDienThoai,\r\n              HinhThucQuyenGop: res.data.HinhThucQuyenGop,\r\n              SoTienQuyenGop: res.data?.SoTienQuyenGop,\r\n              LoiNhan: res.data?.LoiNhan,\r\n            });\r\n            setFileList(res.data?.HinhAnhQuyenGop);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          notifyError(err?.response?.data?.errors[0].msg);\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [type]);\r\n\r\n  //admin lấy dữ liệu donation theo donationId để xem chi tiết\r\n  useEffect(() => {\r\n    if (type?.type === \"update\") {\r\n      form.resetFields();\r\n      setFileList([]);\r\n      setValue(\"\");\r\n      setValue2(\"\");\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await DonationAPI.getAdminFindByIdDonation(\r\n            type?.donationId,\r\n            \"Breare \" + window.localStorage.getItem(\"User\")\r\n          );\r\n          console.log(res);\r\n          if (res.message === \"Lấy dữ liệu thành công!\") {\r\n            form.setFieldsValue({\r\n              MaDotQuyenGop: res.data?.campaignId?.MaHoanCanh,\r\n              NguoiQuyenGop: res.data?.NguoiQuyenGop,\r\n              TenCongKhai: res.data?.TenCongKhai,\r\n              SoDienThoai: res.data?.SoDienThoai,\r\n              HinhThucQuyenGop: res.data.HinhThucQuyenGop,\r\n              SoTienQuyenGop: res.data?.SoTienQuyenGop,\r\n              LoiNhan: res.data?.LoiNhan,\r\n            });\r\n            setFileList(res.data?.HinhAnhQuyenGop);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          notifyError(err?.response?.data?.errors[0].msg);\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [type]);\r\n\r\n  //thêm mới donation\r\n  const onFinish = async (values) => {\r\n    setLoad(true);\r\n    values.userId = values.NguoiQuyenGop?.split(\" - \")[2];\r\n    values.NguoiQuyenGop = values.NguoiQuyenGop?.split(\" - \")[0];\r\n    values.campaignId = values.MaDotQuyenGop?.split(\" - \")[2];\r\n    values.ThoiGianQuyenGop = new Date();\r\n    try {\r\n      const res = await DonationAPI.postAdminCreateDonation(\r\n        values,\r\n        \"Breare \" + window.localStorage.getItem(\"User\")\r\n      );\r\n      if (res.message === \"Quyên góp thành công!\") {\r\n        loadCreateDonation(true);\r\n        setLoad(false);\r\n        handlerOpen(false);\r\n        notify(res.message);\r\n        setValue(\"\");\r\n        setValue2(\"\");\r\n        setFileList([]);\r\n        form.resetFields();\r\n      }\r\n      console.log(res);\r\n    } catch (err) {\r\n      setLoad(false);\r\n      notifyError(err?.response?.data?.errors[0].msg);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //cập nhật donation\r\n  const updateHandler = async (values) => {\r\n    setLoad(true);\r\n    values.donationId = type?.donationId;\r\n    values.userId = values.NguoiQuyenGop?.split(\" - \")[2] ?? \"\";\r\n    values.NguoiQuyenGop = values.NguoiQuyenGop?.split(\" - \")[0] ?? \"\";\r\n    values.campaignId = values.MaDotQuyenGop?.split(\" - \")[2] ?? \"\";\r\n    try {\r\n      const res = await DonationAPI.postAdminUpdateDonation(\r\n        values,\r\n        \"Breare \" + window.localStorage.getItem(\"User\")\r\n      );\r\n      if (res.message === \"Cập nhật donation thành công!\") {\r\n        loadCreateDonation(true);\r\n        setLoad(false);\r\n        handlerOpen(false);\r\n        notify(res.message);\r\n        setValue(\"\");\r\n        setValue2(\"\");\r\n        setFileList([]);\r\n        form.resetFields();\r\n      }\r\n      console.log(res);\r\n    } catch (err) {\r\n      setLoad(false);\r\n      notifyError(err?.response?.data?.errors[0].msg);\r\n      console.log(err);\r\n    }\r\n    console.log(values);\r\n  };\r\n\r\n  //hàm sử lý phê duyệt donation\r\n  const approveHandler = async () => {\r\n    setLoad(true);\r\n    const donationId = type?.donationId;\r\n    try {\r\n      const res = await DonationAPI.postAdminApproveDonationId(\r\n        { donationId },\r\n        \"Breare \" + window.localStorage.getItem(\"User\")\r\n      );\r\n      if (res?.message === \"Phê duyệt thành công!\") {\r\n        loadCreateDonation(true);\r\n        setLoad(false);\r\n        handlerOpen(false);\r\n        notify(res.message);\r\n      }\r\n      console.log(res);\r\n    } catch (err) {\r\n      setLoad(false);\r\n      notifyError(err?.response?.data?.errors[0].msg);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //mảng hiển thị ra thông tìn Mã hoàn cảnh và tiêu để hoàn cảnh trong treeSelect\r\n  const treeCampaignData = dataCampaign?.map((item, index) => ({\r\n    title: value ? item.MaHoanCanh : item.MaHoanCanh + \" - \" + item.TieuDe,\r\n    value: item.MaHoanCanh + \" - \" + item.TieuDe + \" - \" + item._id,\r\n  }));\r\n  const onChangeCampaign = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  //mảng dùng để hiển thì ra tên người dùng , email và số điện thoại(nếu có) của các tài khoản\r\n  const treeUserData = dataUserArr?.map((item, index) => ({\r\n    title: value2\r\n      ? item.HoVaTen\r\n      : item.HoVaTen +\r\n        \" - \" +\r\n        item.Email +\r\n        (item.SoDienThoai ? \" - \" + item.SoDienThoai : \"\"),\r\n    value:\r\n      item.HoVaTen +\r\n      \" - \" +\r\n      item.Email +\r\n      \" - \" +\r\n      item._id +\r\n      (item.SoDienThoai ? \" - \" + item.SoDienThoai : \"\"),\r\n  }));\r\n  const onChangeUser = (newValue) => {\r\n    setValue2(newValue);\r\n  };\r\n\r\n  const handleCancel2 = () => setPreviewOpen(false);\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewOpen(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  };\r\n  const handleChange = ({ fileList: newFileList }) => setFileList(newFileList);\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div\r\n        style={{\r\n          marginTop: 4,\r\n        }}\r\n      >\r\n        Upload\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        (type?.type === \"update\" || type?.type === \"create\") && [\r\n          <Button key=\"back\" onClick={handleCancel} disabled={loading}>\r\n            {type?.type === \"create\" ? \"Hủy Thêm\" : \"Hủy Cập Nhật\"}\r\n          </Button>,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            loading={loading}\r\n            onClick={handleOk}\r\n          >\r\n            {type?.type === \"create\" ? \"Quyên Góp\" : \"Cập Nhật\"}\r\n          </Button>,\r\n        ]\r\n      }\r\n    >\r\n      <Spin tip=\"Loading...\" size=\"large\" spinning={load ? true : false}>\r\n        <div>\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            disabled={\r\n              type?.type === \"update\" || type?.type === \"create\" ? false : true\r\n            }\r\n            onKeyDown={(e) => (e.key === \"Enter\" ? e.preventDefault() : \"\")}\r\n            onFinish={\r\n              type?.type === \"create\"\r\n                ? onFinish\r\n                : type?.type === \"update\"\r\n                ? updateHandler\r\n                : \"\"\r\n            }\r\n            initialValues={{\r\n              HinhThucQuyenGop: \"ChuyenTienOnline\",\r\n            }}\r\n          >\r\n            <Form.Item\r\n              label=\"Mã Đợt Quyên Góp\"\r\n              name=\"MaDotQuyenGop\"\r\n              rules={\r\n                type?.type === \"update\" && [\r\n                  {\r\n                    required: true,\r\n                    message: \"Mã hoàn cảnh không được để trống!\",\r\n                  },\r\n                ]\r\n              }\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <TreeSelect\r\n                onMouseDown={(e) => setValue(\"\")}\r\n                showSearch\r\n                dropdownStyle={{\r\n                  maxHeight: 400,\r\n                  overflow: \"auto\",\r\n                  minWidth: 300,\r\n                }}\r\n                placeholder={\r\n                  type?.type === \"update\" ? \"Chọn đợt quyên góp\" : \"\"\r\n                }\r\n                dropdownMatchSelectWidth={false}\r\n                allowClear\r\n                treeDefaultExpandAll\r\n                treeData={treeCampaignData}\r\n                onChange={onChangeCampaign}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Người Quyên Góp\"\r\n              name=\"NguoiQuyenGop\"\r\n              rules={\r\n                type?.type === \"update\" && [\r\n                  {\r\n                    required: true,\r\n                    message: \"Người quyên góp không được để trống!\",\r\n                  },\r\n                ]\r\n              }\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <TreeSelect\r\n                onMouseDown={(e) => setValue2(\"\")}\r\n                showSearch\r\n                dropdownStyle={{\r\n                  maxHeight: 400,\r\n                  overflow: \"auto\",\r\n                  minWidth: 300,\r\n                }}\r\n                placeholder={type?.type === \"update\" ? \"VD: Nguyễn Văn A\" : \"\"}\r\n                dropdownMatchSelectWidth={false}\r\n                allowClear\r\n                treeDefaultExpandAll\r\n                treeData={treeUserData}\r\n                onChange={onChangeUser}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Tên Công Khai\"\r\n              name=\"TenCongKhai\"\r\n              rules={\r\n                type?.type === \"update\" && [\r\n                  {\r\n                    required: true,\r\n                    message: \"Tên công khai không được để trống\",\r\n                  },\r\n                  { max: 50, message: \"Chị được nhập tối đa 50 ký tự\" },\r\n                ]\r\n              }\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Input\r\n                placeholder={type?.type === \"update\" ? \"VD: Nguyễn Văn A\" : \"\"}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Số Điện Thoại\"\r\n              name=\"SoDienThoai\"\r\n              rules={\r\n                type?.type === \"update\" && [\r\n                  {\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Chỉ cho phép số số nguyên dương\",\r\n                  },\r\n                ]\r\n              }\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Input\r\n                placeholder={type?.type === \"update\" ? \"VD: 0978123123\" : \"\"}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Hình Thức Quyên Góp\"\r\n              name=\"HinhThucQuyenGop\"\r\n              rules={\r\n                type?.type === \"update\" && [\r\n                  {\r\n                    required: true,\r\n                    message: \"Hình thức quyên góp không được để trống\",\r\n                  },\r\n                ]\r\n              }\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Select>\r\n                <Select.Option value=\"ChuyenTienOnline\">\r\n                  Chuyển Tiền Online\r\n                </Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Row>\r\n              <Form.Item\r\n                label=\"Số Tiền Quyên Góp\"\r\n                name=\"SoTienQuyenGop\"\r\n                rules={\r\n                  type?.type === \"update\" && [\r\n                    {\r\n                      required: true,\r\n                      message: \"Số tiền huy động không được để trống\",\r\n                    },\r\n                    {\r\n                      pattern: new RegExp(/^[0-9\\b]+$/),\r\n                      message: \"Chỉ cho phép số số nguyên dương\",\r\n                    },\r\n                    () => ({\r\n                      validator(_, value) {\r\n                        if (!value || (value !== 0 && value >= 1000)) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"Số tiền khuyên góp không được nhỏ hơn 1000đ.\"\r\n                          )\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]\r\n                }\r\n                style={{\r\n                  maxWidth: \"40%\",\r\n                  margin: \"0 0 0 10%\",\r\n                }}\r\n              >\r\n                <InputNumber\r\n                  placeholder={\r\n                    type?.type === \"update\" ? \"Nhập số tiền quyên góp\" : \"\"\r\n                  }\r\n                  addonAfter={suffixSelector}\r\n                  style={{ width: \"100%\" }}\r\n                  formatter={(value) =>\r\n                    `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                  }\r\n                  min={1000}\r\n                  step={1}\r\n                  maxLength={14}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Hình ảnh Quyên Góp\"\r\n                name=\"HinhAnhQuyenGop\"\r\n                style={{\r\n                  maxWidth: \"40%\",\r\n                  margin: \"0 10% 0 0 \",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <Upload\r\n                  action={configApp.apiGateWay + \"/upload\"}\r\n                  listType=\"picture-card\"\r\n                  fileList={fileList}\r\n                  onPreview={handlePreview}\r\n                  onChange={handleChange}\r\n                >\r\n                  {fileList.length >= 1 ? null : uploadButton}\r\n                </Upload>\r\n              </Form.Item>\r\n            </Row>\r\n            <Form.Item\r\n              label=\"Lời Nhắn\"\r\n              name=\"LoiNhan\"\r\n              style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <TextArea\r\n                placeholder={type?.type === \"update\" ? \"Nhập lời nhắn\" : \"\"}\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n          {type?.type === \"approve\" && (\r\n            <div style={{ margin: \"10px\", textAlign: \"center\" }}>\r\n              <Button type=\"primary\" onClick={approveHandler}>\r\n                Phê duyệt\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Spin>\r\n      <Modal\r\n        open={previewOpen}\r\n        title={previewTitle}\r\n        footer={null}\r\n        onCancel={handleCancel2}\r\n      >\r\n        <img\r\n          alt=\"example\"\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n          src={previewImage}\r\n        />\r\n      </Modal>\r\n    </Modal>\r\n  );\r\n};\r\nexport default FormAdminCreateDonations;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\UploadAPI.jsx",[],["502","503"],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Img\\Image.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\programme\\Programme.jsx",["504","505","506","507","508","509","510","511","512"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Progress,\r\n  Typography,\r\n  Pagination,\r\n  Tooltip,\r\n  Spin,\r\n  Empty,\r\n} from \"antd\";\r\nimport { valuesContext } from \"../App\";\r\nimport convertMoney from \"../convertMoney\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Image from \"../Img/Image\";\r\nimport CampaignAPI from \"../API/CampaignAPI\";\r\nimport styled from \"./Programme.module.css\";\r\n\r\nconst { Meta } = Card;\r\nconst { Text } = Typography;\r\n\r\nfunction Programme(props) {\r\n  const [products, setProducts] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [pageUnfCampaign, setPageUnfCampaign] = useState({\r\n    page: 1,\r\n    pageSize: 6,\r\n  });\r\n  const [dataUnfCamapaign, setDataUnfCamapaign] = useState([]);\r\n  const [unfLoad, setUnfLoad] = useState(false);\r\n\r\n  const [pageCmpCampaign, setPageCmpCampaign] = useState({\r\n    page: 1,\r\n    pageSize: 6,\r\n  });\r\n  const [dataCmpCamapaign, setDataCmpCamapaign] = useState([]);\r\n  const [CmpLoad, setCmpLoad] = useState(false);\r\n\r\n  const notifyError = useContext(valuesContext).notifyError;\r\n  const { programme, id } = useParams();\r\n\r\n  const history = useHistory();\r\n  //xử lý sự kiện onchang môi khi chuyển trang hoặc thêm mục hiện thì trong đợt quyên góp chưa hoàn thành\r\n  const onChangePageUnfCampaign = (page, pageSize) => {\r\n    setPageUnfCampaign({ page: page, pageSize: pageSize });\r\n    setUnfLoad(true);\r\n  };\r\n  //xử lý sự kiện onchang môi khi chuyển trang hoặc thêm mục hiện thì trong đợt quyên góp đã hoàn thành\r\n  const onChangePageCmpCampaign = (page, pageSize) => {\r\n    setPageCmpCampaign({ page: page, pageSize: pageSize });\r\n    setCmpLoad(true);\r\n  };\r\n\r\n  //Get dữ liệu campaign chưa hoàn thành cà đã phân trang\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await CampaignAPI.postUnfCampaignType({\r\n          type: history.location.state?.title,\r\n          page: pageUnfCampaign.page,\r\n          pageSize: pageUnfCampaign.pageSize,\r\n        });\r\n        if (res.message === \"lấy dữ liệu thanh công\") {\r\n          setDataUnfCamapaign(res);\r\n          setUnfLoad(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setUnfLoad(false);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [pageUnfCampaign, history.location.state?.title]);\r\n\r\n  // Get dữ liệu campaign đã hoàn thành cà đã phân trang\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await CampaignAPI.postCmpCampaignType({\r\n          type: history.location.state?.title,\r\n          page: pageUnfCampaign.page,\r\n          pageSize: pageUnfCampaign.pageSize,\r\n        });\r\n        if (res.message === \"lấy dữ liệu thanh công\") {\r\n          setDataCmpCamapaign(res);\r\n          setCmpLoad(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setCmpLoad(false);\r\n        notifyError(err?.response?.data?.errors[0].msg);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [pageCmpCampaign, history.location.state?.title]);\r\n\r\n  const title = history.location.state?.title;\r\n\r\n  return (\r\n    <div className=\"page-holder\" style={{ margin: \"0 0 20px 0\" }}>\r\n      <header className=\"header bg-white\">\r\n        <div className=\"container\">\r\n          <section\r\n            className=\"hero pb-3 bg-cover bg-center d-flex align-items-center\"\r\n            style={{\r\n              backgroundImage: `url(${Image.img5})`,\r\n              minHeight: \"450px\",\r\n            }}\r\n          >\r\n            <div className=\"container py-5\">\r\n              <div className=\"row px-4 px-lg-5\">\r\n                <div className={styled.banner}>\r\n                  {/* <p className=\"text-muted small text-uppercase mb-2\">\r\n                    New Inspiration 2020\r\n                  </p> */}\r\n                  <h1 className=\"h2  mb-3\" style={{ color: \"#ff00c3\" }}>\r\n                    {title === \"Trẻ Em\"\r\n                      ? \"Vì Trẻ Em\"\r\n                      : title === \"Người Già Và Người Khuyết Tật\"\r\n                      ? \"Người Già, Người Khuyết Tật\"\r\n                      : title === \"Người Vùng Sâu,Vùng Xa\"\r\n                      ? \"Người Vùng Sâu,Vùng Xa\"\r\n                      : \"Cứu Trợ Động Vật\"}\r\n                  </h1>\r\n                  <p\r\n                    style={{\r\n                      color: \"#ff00c3\",\r\n                      fontWeight: \"600\",\r\n                      fontSize: \"larger\",\r\n                    }}\r\n                  >\r\n                    {title === \"Trẻ Em\"\r\n                      ? \"Giúp đỡ trẻ em vùng cao, trẻ em nghèo, mồ côi, có hoàn cảnh khó khăn\"\r\n                      : title === \"Người Già Và Người Khuyết Tật\"\r\n                      ? \"Giúp đỡ người già neo đơn, người vô gia cư, không nơi nương tựa\"\r\n                      : title === \"Người Vùng Sâu,Vùng Xa\"\r\n                      ? \"Giúp đỡ vùng sâu, người vung cao, người có hoàn cảnh khó khăn\"\r\n                      : \"Cứu trợ động vật, chó mèo bị bỏ rơi hoặc bị thương cần được chữa trị và chăm sóc phục hồi\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {dataUnfCamapaign.data?.length > 0 && (\r\n            <section className=\"pt-5\">\r\n              <header className=\"text-center\">\r\n                {/* <p className=\"small text-muted small text-uppercase mb-1\">\r\n                Carefully created collections\r\n              </p> */}\r\n                <h2\r\n                  className=\"h5 text-uppercase mb-4\"\r\n                  style={{ color: \"#0798db\" }}\r\n                >\r\n                  Những đợt quyên góp đang được tiến hành\r\n                </h2>\r\n              </header>\r\n              <Spin tip=\"Loading...\" spinning={unfLoad} size=\"large\">\r\n                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                  {dataUnfCamapaign?.data?.length > 0 &&\r\n                    dataUnfCamapaign?.data?.map((item, index) => (\r\n                      <Card\r\n                        key={index}\r\n                        hoverable\r\n                        style={{ width: \"31%\", margin: \"1% 1% 1% 1%\" }}\r\n                        cover={\r\n                          <img\r\n                            alt=\"example\"\r\n                            src={item.HinhAnh.length > 0 && item.HinhAnh[0].url}\r\n                          />\r\n                        }\r\n                        actions={[\r\n                          <Button\r\n                            type=\"primary\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: `/quyengop/${item._id}`,\r\n                                state: item,\r\n                              })\r\n                            }\r\n                          >\r\n                            Đóng Góp\r\n                          </Button>,\r\n                        ]}\r\n                      >\r\n                        <Tooltip\r\n                          title={item.TieuDe}\r\n                          placement=\"bottom\"\r\n                          color=\"#0798db\"\r\n                        >\r\n                          <div>\r\n                            <Meta\r\n                              title={item.TieuDe}\r\n                              style={{ marginBottom: 10 }}\r\n                            />\r\n                          </div>\r\n                        </Tooltip>\r\n                        <div>\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                backgroundColor: \"#86d9ffbf\",\r\n                                color: \"#3a83e6\",\r\n                                padding: \"1% 2% 1% 2%\",\r\n                                borderRadius: \"5px\",\r\n                              }}\r\n                            >\r\n                              {item.MaHoanCanh}\r\n                            </Text>\r\n                            <Text\r\n                              style={{\r\n                                backgroundColor: \"#d7ad2f61\",\r\n                                color: \"#ff9900\",\r\n                                padding: \"1% 2% 1% 2%\",\r\n                                borderRadius: \"5px\",\r\n                              }}\r\n                            >\r\n                              Còn{\" \"}\r\n                              {(new Date(item.NgayKetThuc) -\r\n                                new Date(item.NgayBatDau)) /\r\n                                1000 /\r\n                                60 /\r\n                                60 /\r\n                                24}{\" \"}\r\n                              ngày\r\n                            </Text>\r\n                          </div>\r\n                          <Row>\r\n                            <Text strong>\r\n                              {convertMoney(\r\n                                item.SoTienDaNhan ? item.SoTienDaNhan : 0\r\n                              )}\r\n                              đ\r\n                            </Text>\r\n                            <Text>/{convertMoney(item.SoTienHuyDong)}đ</Text>\r\n                          </Row>\r\n                          <Progress\r\n                            strokeColor=\"#0798db\"\r\n                            percent={(\r\n                              ((item.SoTienDaNhan ? item.SoTienDaNhan : 0) /\r\n                                item.SoTienHuyDong) *\r\n                              100\r\n                            ).toFixed(2)}\r\n                            showInfo={false}\r\n                          />\r\n                          <Row className={styled.solieu}>\r\n                            <Col span={12}>\r\n                              <p>Lượt quyên góp</p>\r\n                              <p>\r\n                                <b>\r\n                                  {item.LuotQuyenGop ? item.LuotQuyenGop : 0}\r\n                                </b>\r\n                              </p>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <p>Đạt được</p>\r\n                              <p>\r\n                                <b>\r\n                                  {(\r\n                                    ((item.SoTienDaNhan\r\n                                      ? item.SoTienDaNhan\r\n                                      : 0) /\r\n                                      item.SoTienHuyDong) *\r\n                                    100\r\n                                  ).toFixed(2)}\r\n                                  %\r\n                                </b>\r\n                              </p>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Card>\r\n                    ))}\r\n                </div>\r\n              </Spin>\r\n              <Pagination\r\n                defaultCurrent={pageUnfCampaign.page}\r\n                defaultPageSize={pageUnfCampaign.pageSize}\r\n                current={pageUnfCampaign?.page}\r\n                // total={data.length}\r\n                // showTotal={showTotal}\r\n                pageSizeOptions={[6, 12, 24, 48]}\r\n                onChange={onChangePageUnfCampaign}\r\n                total={dataUnfCamapaign.total}\r\n                showSizeChanger\r\n                style={{ textAlign: \"center\" }}\r\n              />\r\n            </section>\r\n          )}\r\n          {dataUnfCamapaign.data?.length === 0 && (\r\n            <section className=\"pt-5\">\r\n              <header className=\"text-center\">\r\n                {/* <p className=\"small text-muted small text-uppercase mb-1\">\r\n                Carefully created collections\r\n              </p> */}\r\n                <h2\r\n                  className=\"h5 text-uppercase mb-4\"\r\n                  style={{ color: \"#0798db\" }}\r\n                >\r\n                  Những đợt quyên góp đang được tiến hành\r\n                </h2>\r\n              </header>\r\n              <Empty description={false}>\r\n                <p>Hiện không có đợt quyên góp nào được tiến hành</p>\r\n              </Empty>\r\n            </section>\r\n          )}\r\n          {dataCmpCamapaign.data?.length > 0 && (\r\n            <section className=\"pt-5\">\r\n              <header className=\"text-center\">\r\n                {/* <p className=\"small text-muted small text-uppercase mb-1\">\r\n                Carefully created collections\r\n              </p> */}\r\n                <h2\r\n                  className=\"h5 text-uppercase mb-4\"\r\n                  style={{ color: \"#db07b1\" }}\r\n                >\r\n                  Những đợt quyên góp Đã Hoàn Thành\r\n                </h2>\r\n              </header>\r\n              <Spin tip=\"Loading...\" spinning={CmpLoad} size=\"large\">\r\n                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                  {dataCmpCamapaign?.data?.length > 0 &&\r\n                    dataCmpCamapaign?.data?.map((item, index) => (\r\n                      <Card\r\n                        key={index}\r\n                        hoverable\r\n                        style={{ width: \"31%\", margin: \"1% 1% 1% 1%\" }}\r\n                        cover={\r\n                          <img\r\n                            alt=\"example\"\r\n                            src={item.HinhAnh.length > 0 && item.HinhAnh[0].url}\r\n                          />\r\n                        }\r\n                        actions={[\r\n                          <Button\r\n                            type=\"text\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: `/xem/${item._id}`,\r\n                                state: item._id,\r\n                              })\r\n                            }\r\n                          >\r\n                            Chi Tiết\r\n                          </Button>,\r\n                        ]}\r\n                      >\r\n                        <Tooltip\r\n                          title={item.TieuDe}\r\n                          placement=\"bottom\"\r\n                          color=\"#0798db\"\r\n                        >\r\n                          <div>\r\n                            <Meta\r\n                              title={item.TieuDe}\r\n                              style={{ marginBottom: 10 }}\r\n                            />\r\n                          </div>\r\n                        </Tooltip>\r\n                        <div>\r\n                          <Text\r\n                            style={{\r\n                              backgroundColor: \"#d7ad2f61\",\r\n                              color: \"#ff9900\",\r\n                              padding: \"1% 2% 1% 2%\",\r\n                              borderRadius: \"5px\",\r\n                            }}\r\n                          >\r\n                            Còn{\" \"}\r\n                            {(new Date(item.NgayKetThuc) -\r\n                              new Date(item.NgayBatDau)) /\r\n                              1000 /\r\n                              60 /\r\n                              60 /\r\n                              24}{\" \"}\r\n                            ngày\r\n                          </Text>\r\n                          <Row>\r\n                            <Text strong>\r\n                              {convertMoney(item.SoTienDaNhan)}đ\r\n                            </Text>\r\n                            <Text>/{convertMoney(item.SoTienHuyDong)}đ</Text>\r\n                          </Row>\r\n                          <Progress\r\n                            strokeColor=\"#0798db\"\r\n                            percent={(\r\n                              (item.SoTienDaNhan / item.SoTienHuyDong) *\r\n                              100\r\n                            ).toFixed(2)}\r\n                            showInfo={false}\r\n                          />\r\n                          <Row className={styled.solieu}>\r\n                            <Col span={12}>\r\n                              <p>Lượt quyên góp</p>\r\n                              <p>\r\n                                <b>{item.LuotQuyenGop}</b>\r\n                              </p>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <p>Đạt được</p>\r\n                              <p>\r\n                                <b>\r\n                                  {(\r\n                                    (item.SoTienDaNhan / item.SoTienHuyDong) *\r\n                                    100\r\n                                  ).toFixed(2)}\r\n                                  %\r\n                                </b>\r\n                              </p>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Card>\r\n                    ))}\r\n                </div>\r\n              </Spin>\r\n              <Pagination\r\n                defaultCurrent={pageCmpCampaign.page}\r\n                defaultPageSize={pageCmpCampaign.pageSize}\r\n                current={pageCmpCampaign?.page}\r\n                // total={data.length}\r\n                // showTotal={showTotal}\r\n                pageSizeOptions={[6, 12, 24, 48]}\r\n                onChange={onChangePageCmpCampaign}\r\n                total={dataCmpCamapaign.total}\r\n                showSizeChanger\r\n                style={{ textAlign: \"center\" }}\r\n              />\r\n            </section>\r\n          )}\r\n          {dataCmpCamapaign.data?.length === 0 && (\r\n            <section className=\"pt-5\">\r\n              <header className=\"text-center\">\r\n                {/* <p className=\"small text-muted small text-uppercase mb-1\">\r\n                Carefully created collections\r\n              </p> */}\r\n                <h2\r\n                  className=\"h5 text-uppercase mb-4\"\r\n                  style={{ color: \"#0798db\" }}\r\n                >\r\n                  Những đợt quyên góp Đã Hoàn Thành\r\n                </h2>\r\n              </header>\r\n              <Empty description={false}>\r\n                <p>Hiện chưa có đợt quyên góp nào hoàn thành</p>\r\n              </Empty>\r\n            </section>\r\n          )}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Programme;\r\n","C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Introduce\\GioiThieu.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\API\\AuthAPI.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\configApp.jsx",[],"C:\\Users\\LTC\\Desktop\\học tập\\Đồ án\\CLIENT\\src\\Manage_User\\ChiTietUser.jsx",["513"],"import React from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\nimport FormEditUser from \"../Form/Form_Edit_User/Form_Edit_User\";\r\nimport DetailUser from \"../Detail/detail_User/Detail_User\";\r\n\r\nconst ManageUser = () => {\r\n  const params = useParams();\r\n  return (\r\n    <>\r\n      {params.type === \"edit\" && <FormEditUser />}\r\n      {params.type === \"view\" && <DetailUser />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageUser;\r\n",{"ruleId":"514","replacedBy":"515"},{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","severity":1,"message":"519","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":13},{"ruleId":"518","severity":1,"message":"522","line":15,"column":9,"nodeType":"520","messageId":"521","endLine":15,"endColumn":16},{"ruleId":"523","severity":1,"message":"524","line":47,"column":6,"nodeType":"525","endLine":47,"endColumn":17,"suggestions":"526"},{"ruleId":"518","severity":1,"message":"527","line":53,"column":11,"nodeType":"520","messageId":"521","endLine":53,"endColumn":20},{"ruleId":"528","severity":1,"message":"529","line":74,"column":31,"nodeType":"530","endLine":78,"endColumn":32},{"ruleId":"518","severity":1,"message":"531","line":2,"column":8,"nodeType":"520","messageId":"521","endLine":2,"endColumn":18},{"ruleId":"518","severity":1,"message":"532","line":26,"column":9,"nodeType":"520","messageId":"521","endLine":26,"endColumn":17},{"ruleId":"518","severity":1,"message":"533","line":30,"column":16,"nodeType":"520","messageId":"521","endLine":30,"endColumn":23},{"ruleId":"518","severity":1,"message":"534","line":74,"column":9,"nodeType":"520","messageId":"521","endLine":74,"endColumn":23},{"ruleId":"523","severity":1,"message":"535","line":124,"column":6,"nodeType":"525","endLine":124,"endColumn":20,"suggestions":"536"},{"ruleId":"518","severity":1,"message":"537","line":142,"column":9,"nodeType":"520","messageId":"521","endLine":142,"endColumn":21},{"ruleId":"518","severity":1,"message":"538","line":147,"column":9,"nodeType":"520","messageId":"521","endLine":147,"endColumn":15},{"ruleId":"539","severity":1,"message":"540","line":366,"column":17,"nodeType":"530","endLine":366,"endColumn":50},{"ruleId":"539","severity":1,"message":"540","line":372,"column":17,"nodeType":"530","endLine":372,"endColumn":50},{"ruleId":"539","severity":1,"message":"540","line":420,"column":17,"nodeType":"530","endLine":423,"endColumn":18},{"ruleId":"539","severity":1,"message":"540","line":472,"column":13,"nodeType":"530","endLine":480,"endColumn":14},{"ruleId":"518","severity":1,"message":"541","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":15},{"ruleId":"518","severity":1,"message":"527","line":78,"column":11,"nodeType":"520","messageId":"521","endLine":78,"endColumn":20},{"ruleId":"523","severity":1,"message":"542","line":250,"column":6,"nodeType":"525","endLine":250,"endColumn":12,"suggestions":"543"},{"ruleId":"539","severity":1,"message":"540","line":404,"column":23,"nodeType":"530","endLine":409,"endColumn":24},{"ruleId":"518","severity":1,"message":"541","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":15},{"ruleId":"518","severity":1,"message":"544","line":19,"column":10,"nodeType":"520","messageId":"521","endLine":19,"endColumn":14},{"ruleId":"523","severity":1,"message":"524","line":129,"column":6,"nodeType":"525","endLine":129,"endColumn":17,"suggestions":"545"},{"ruleId":"518","severity":1,"message":"546","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"531","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":18},{"ruleId":"518","severity":1,"message":"547","line":5,"column":10,"nodeType":"520","messageId":"521","endLine":5,"endColumn":14},{"ruleId":"518","severity":1,"message":"548","line":15,"column":10,"nodeType":"520","messageId":"521","endLine":15,"endColumn":14},{"ruleId":"549","severity":1,"message":"550","line":167,"column":23,"nodeType":"530","endLine":172,"endColumn":25},{"ruleId":"549","severity":1,"message":"550","line":173,"column":23,"nodeType":"530","endLine":173,"endColumn":67},{"ruleId":"549","severity":1,"message":"550","line":174,"column":23,"nodeType":"530","endLine":174,"endColumn":67},{"ruleId":"518","severity":1,"message":"546","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"551","line":6,"column":10,"nodeType":"520","messageId":"521","endLine":6,"endColumn":21},{"ruleId":"518","severity":1,"message":"552","line":73,"column":13,"nodeType":"520","messageId":"521","endLine":73,"endColumn":17},{"ruleId":"523","severity":1,"message":"553","line":97,"column":6,"nodeType":"525","endLine":97,"endColumn":12,"suggestions":"554"},{"ruleId":"539","severity":1,"message":"555","line":152,"column":17,"nodeType":"530","endLine":152,"endColumn":66},{"ruleId":"539","severity":1,"message":"540","line":201,"column":17,"nodeType":"530","endLine":205,"endColumn":18},{"ruleId":"539","severity":1,"message":"540","line":21,"column":7,"nodeType":"530","endLine":28,"endColumn":8},{"ruleId":"518","severity":1,"message":"556","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":25},{"ruleId":"539","severity":1,"message":"540","line":180,"column":19,"nodeType":"530","endLine":186,"endColumn":20},{"ruleId":"523","severity":1,"message":"535","line":26,"column":6,"nodeType":"525","endLine":26,"endColumn":8,"suggestions":"557"},{"ruleId":"518","severity":1,"message":"558","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":26},{"ruleId":"539","severity":1,"message":"540","line":41,"column":7,"nodeType":"530","endLine":41,"endColumn":32},{"ruleId":"514","replacedBy":"559"},{"ruleId":"516","replacedBy":"560"},{"ruleId":"514","replacedBy":"561"},{"ruleId":"516","replacedBy":"562"},{"ruleId":"518","severity":1,"message":"519","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":13},{"ruleId":"518","severity":1,"message":"563","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":28},{"ruleId":"518","severity":1,"message":"547","line":15,"column":10,"nodeType":"520","messageId":"521","endLine":15,"endColumn":14},{"ruleId":"518","severity":1,"message":"564","line":25,"column":10,"nodeType":"520","messageId":"521","endLine":25,"endColumn":18},{"ruleId":"518","severity":1,"message":"565","line":25,"column":20,"nodeType":"520","messageId":"521","endLine":25,"endColumn":31},{"ruleId":"566","severity":1,"message":"567","line":156,"column":51,"nodeType":"568","messageId":"569","endLine":156,"endColumn":52},{"ruleId":"566","severity":1,"message":"567","line":156,"column":57,"nodeType":"568","messageId":"569","endLine":156,"endColumn":58},{"ruleId":"566","severity":1,"message":"567","line":158,"column":51,"nodeType":"568","messageId":"569","endLine":158,"endColumn":52},{"ruleId":"566","severity":1,"message":"567","line":158,"column":57,"nodeType":"568","messageId":"569","endLine":158,"endColumn":58},{"ruleId":"566","severity":1,"message":"567","line":159,"column":51,"nodeType":"568","messageId":"569","endLine":159,"endColumn":52},{"ruleId":"566","severity":1,"message":"567","line":159,"column":57,"nodeType":"568","messageId":"569","endLine":159,"endColumn":58},{"ruleId":"518","severity":1,"message":"570","line":15,"column":34,"nodeType":"520","messageId":"521","endLine":15,"endColumn":44},{"ruleId":"523","severity":1,"message":"571","line":94,"column":6,"nodeType":"525","endLine":94,"endColumn":10,"suggestions":"572"},{"ruleId":"523","severity":1,"message":"571","line":115,"column":6,"nodeType":"525","endLine":115,"endColumn":36,"suggestions":"573"},{"ruleId":"523","severity":1,"message":"571","line":136,"column":6,"nodeType":"525","endLine":136,"endColumn":35,"suggestions":"574"},{"ruleId":"528","severity":1,"message":"529","line":164,"column":17,"nodeType":"530","endLine":164,"endColumn":52},{"ruleId":"575","severity":1,"message":"576","line":207,"column":23,"nodeType":"577","messageId":"578","endLine":207,"endColumn":31},{"ruleId":"575","severity":1,"message":"579","line":225,"column":25,"nodeType":"577","messageId":"578","endLine":225,"endColumn":37},{"ruleId":"575","severity":1,"message":"576","line":462,"column":23,"nodeType":"577","messageId":"578","endLine":462,"endColumn":31},{"ruleId":"575","severity":1,"message":"579","line":480,"column":25,"nodeType":"577","messageId":"578","endLine":480,"endColumn":37},{"ruleId":"518","severity":1,"message":"558","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":26},{"ruleId":"518","severity":1,"message":"580","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":12},{"ruleId":"518","severity":1,"message":"581","line":47,"column":9,"nodeType":"520","messageId":"521","endLine":47,"endColumn":17},{"ruleId":"518","severity":1,"message":"546","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"551","line":6,"column":10,"nodeType":"520","messageId":"521","endLine":6,"endColumn":21},{"ruleId":"518","severity":1,"message":"552","line":73,"column":13,"nodeType":"520","messageId":"521","endLine":73,"endColumn":17},{"ruleId":"523","severity":1,"message":"553","line":97,"column":6,"nodeType":"525","endLine":97,"endColumn":12,"suggestions":"582"},{"ruleId":"539","severity":1,"message":"555","line":152,"column":17,"nodeType":"530","endLine":152,"endColumn":66},{"ruleId":"539","severity":1,"message":"540","line":201,"column":17,"nodeType":"530","endLine":205,"endColumn":18},{"ruleId":"514","replacedBy":"583"},{"ruleId":"516","replacedBy":"584"},{"ruleId":"518","severity":1,"message":"585","line":11,"column":41,"nodeType":"520","messageId":"521","endLine":11,"endColumn":51},{"ruleId":"523","severity":1,"message":"586","line":144,"column":6,"nodeType":"525","endLine":144,"endColumn":25,"suggestions":"587"},{"ruleId":"514","replacedBy":"588"},{"ruleId":"516","replacedBy":"589"},{"ruleId":"514","replacedBy":"590"},{"ruleId":"516","replacedBy":"591"},{"ruleId":"539","severity":1,"message":"540","line":21,"column":7,"nodeType":"530","endLine":28,"endColumn":8},{"ruleId":"518","severity":1,"message":"592","line":48,"column":10,"nodeType":"520","messageId":"521","endLine":48,"endColumn":14},{"ruleId":"523","severity":1,"message":"593","line":81,"column":6,"nodeType":"525","endLine":81,"endColumn":25,"suggestions":"594"},{"ruleId":"523","severity":1,"message":"595","line":106,"column":6,"nodeType":"525","endLine":106,"endColumn":27,"suggestions":"596"},{"ruleId":"514","replacedBy":"597"},{"ruleId":"516","replacedBy":"598"},{"ruleId":"518","severity":1,"message":"599","line":18,"column":9,"nodeType":"520","messageId":"521","endLine":18,"endColumn":20},{"ruleId":"518","severity":1,"message":"600","line":21,"column":7,"nodeType":"520","messageId":"521","endLine":21,"endColumn":15},{"ruleId":"518","severity":1,"message":"601","line":28,"column":7,"nodeType":"520","messageId":"521","endLine":28,"endColumn":16},{"ruleId":"518","severity":1,"message":"602","line":55,"column":9,"nodeType":"520","messageId":"521","endLine":55,"endColumn":23},{"ruleId":"518","severity":1,"message":"603","line":25,"column":7,"nodeType":"520","messageId":"521","endLine":25,"endColumn":20},{"ruleId":"523","severity":1,"message":"604","line":136,"column":6,"nodeType":"525","endLine":146,"endColumn":4,"suggestions":"605"},{"ruleId":"566","severity":1,"message":"567","line":387,"column":54,"nodeType":"568","messageId":"569","endLine":387,"endColumn":55},{"ruleId":"566","severity":1,"message":"567","line":400,"column":53,"nodeType":"568","messageId":"569","endLine":400,"endColumn":54},{"ruleId":"518","severity":1,"message":"606","line":8,"column":9,"nodeType":"520","messageId":"521","endLine":8,"endColumn":13},{"ruleId":"549","severity":1,"message":"550","line":16,"column":9,"nodeType":"530","endLine":16,"endColumn":37},{"ruleId":"518","severity":1,"message":"607","line":10,"column":3,"nodeType":"520","messageId":"521","endLine":10,"endColumn":11},{"ruleId":"518","severity":1,"message":"608","line":11,"column":3,"nodeType":"520","messageId":"521","endLine":11,"endColumn":9},{"ruleId":"518","severity":1,"message":"609","line":33,"column":23,"nodeType":"520","messageId":"521","endLine":33,"endColumn":37},{"ruleId":"523","severity":1,"message":"604","line":119,"column":6,"nodeType":"525","endLine":119,"endColumn":79,"suggestions":"610"},{"ruleId":"518","severity":1,"message":"611","line":2,"column":3,"nodeType":"520","messageId":"521","endLine":2,"endColumn":17},{"ruleId":"518","severity":1,"message":"612","line":3,"column":3,"nodeType":"520","messageId":"521","endLine":3,"endColumn":22},{"ruleId":"518","severity":1,"message":"613","line":4,"column":3,"nodeType":"520","messageId":"521","endLine":4,"endColumn":15},{"ruleId":"518","severity":1,"message":"614","line":8,"column":3,"nodeType":"520","messageId":"521","endLine":8,"endColumn":13},{"ruleId":"518","severity":1,"message":"615","line":11,"column":3,"nodeType":"520","messageId":"521","endLine":11,"endColumn":14},{"ruleId":"518","severity":1,"message":"616","line":14,"column":3,"nodeType":"520","messageId":"521","endLine":14,"endColumn":9},{"ruleId":"518","severity":1,"message":"617","line":15,"column":3,"nodeType":"520","messageId":"521","endLine":15,"endColumn":8},{"ruleId":"518","severity":1,"message":"618","line":30,"column":10,"nodeType":"520","messageId":"521","endLine":30,"endColumn":19},{"ruleId":"518","severity":1,"message":"619","line":30,"column":21,"nodeType":"520","messageId":"521","endLine":30,"endColumn":33},{"ruleId":"518","severity":1,"message":"620","line":31,"column":10,"nodeType":"520","messageId":"521","endLine":31,"endColumn":12},{"ruleId":"518","severity":1,"message":"621","line":31,"column":14,"nodeType":"520","messageId":"521","endLine":31,"endColumn":19},{"ruleId":"518","severity":1,"message":"622","line":40,"column":9,"nodeType":"520","messageId":"521","endLine":40,"endColumn":16},{"ruleId":"523","severity":1,"message":"593","line":103,"column":6,"nodeType":"525","endLine":103,"endColumn":30,"suggestions":"623"},{"ruleId":"523","severity":1,"message":"624","line":168,"column":6,"nodeType":"525","endLine":168,"endColumn":60,"suggestions":"625"},{"ruleId":"523","severity":1,"message":"626","line":168,"column":26,"nodeType":"627","endLine":168,"endColumn":59},{"ruleId":"523","severity":1,"message":"628","line":212,"column":6,"nodeType":"525","endLine":212,"endColumn":45,"suggestions":"629"},{"ruleId":"523","severity":1,"message":"626","line":212,"column":11,"nodeType":"627","endLine":212,"endColumn":44},{"ruleId":"523","severity":1,"message":"628","line":246,"column":6,"nodeType":"525","endLine":246,"endColumn":41,"suggestions":"630"},{"ruleId":"523","severity":1,"message":"626","line":246,"column":7,"nodeType":"627","endLine":246,"endColumn":40},{"ruleId":"523","severity":1,"message":"631","line":253,"column":6,"nodeType":"525","endLine":253,"endColumn":24,"suggestions":"632"},{"ruleId":"566","severity":1,"message":"567","line":609,"column":71,"nodeType":"568","messageId":"569","endLine":609,"endColumn":72},{"ruleId":"518","severity":1,"message":"558","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":26},{"ruleId":"518","severity":1,"message":"633","line":1,"column":38,"nodeType":"520","messageId":"521","endLine":1,"endColumn":48},{"ruleId":"518","severity":1,"message":"547","line":2,"column":10,"nodeType":"520","messageId":"521","endLine":2,"endColumn":14},{"ruleId":"518","severity":1,"message":"634","line":7,"column":10,"nodeType":"520","messageId":"521","endLine":7,"endColumn":23},{"ruleId":"518","severity":1,"message":"635","line":43,"column":9,"nodeType":"520","messageId":"521","endLine":43,"endColumn":16},{"ruleId":"523","severity":1,"message":"604","line":154,"column":6,"nodeType":"525","endLine":162,"endColumn":4,"suggestions":"636"},{"ruleId":"566","severity":1,"message":"567","line":336,"column":55,"nodeType":"568","messageId":"569","endLine":336,"endColumn":56},{"ruleId":"518","severity":1,"message":"599","line":23,"column":9,"nodeType":"520","messageId":"521","endLine":23,"endColumn":20},{"ruleId":"518","severity":1,"message":"606","line":25,"column":9,"nodeType":"520","messageId":"521","endLine":25,"endColumn":13},{"ruleId":"518","severity":1,"message":"600","line":26,"column":7,"nodeType":"520","messageId":"521","endLine":26,"endColumn":15},{"ruleId":"518","severity":1,"message":"637","line":42,"column":19,"nodeType":"520","messageId":"521","endLine":42,"endColumn":29},{"ruleId":"518","severity":1,"message":"638","line":53,"column":9,"nodeType":"520","messageId":"521","endLine":53,"endColumn":17},{"ruleId":"518","severity":1,"message":"602","line":66,"column":9,"nodeType":"520","messageId":"521","endLine":66,"endColumn":23},{"ruleId":"523","severity":1,"message":"571","line":88,"column":6,"nodeType":"525","endLine":88,"endColumn":8,"suggestions":"639"},{"ruleId":"523","severity":1,"message":"571","line":105,"column":6,"nodeType":"525","endLine":105,"endColumn":8,"suggestions":"640"},{"ruleId":"523","severity":1,"message":"593","line":111,"column":6,"nodeType":"525","endLine":111,"endColumn":14,"suggestions":"641"},{"ruleId":"523","severity":1,"message":"593","line":120,"column":6,"nodeType":"525","endLine":120,"endColumn":12,"suggestions":"642"},{"ruleId":"523","severity":1,"message":"643","line":154,"column":6,"nodeType":"525","endLine":154,"endColumn":12,"suggestions":"644"},{"ruleId":"523","severity":1,"message":"643","line":189,"column":6,"nodeType":"525","endLine":189,"endColumn":12,"suggestions":"645"},{"ruleId":"514","replacedBy":"646"},{"ruleId":"516","replacedBy":"647"},{"ruleId":"518","severity":1,"message":"547","line":16,"column":10,"nodeType":"520","messageId":"521","endLine":16,"endColumn":14},{"ruleId":"518","severity":1,"message":"564","line":25,"column":10,"nodeType":"520","messageId":"521","endLine":25,"endColumn":18},{"ruleId":"518","severity":1,"message":"565","line":25,"column":20,"nodeType":"520","messageId":"521","endLine":25,"endColumn":31},{"ruleId":"518","severity":1,"message":"592","line":26,"column":10,"nodeType":"520","messageId":"521","endLine":26,"endColumn":14},{"ruleId":"518","severity":1,"message":"648","line":26,"column":16,"nodeType":"520","messageId":"521","endLine":26,"endColumn":23},{"ruleId":"518","severity":1,"message":"649","line":42,"column":11,"nodeType":"520","messageId":"521","endLine":42,"endColumn":20},{"ruleId":"518","severity":1,"message":"650","line":42,"column":22,"nodeType":"520","messageId":"521","endLine":42,"endColumn":24},{"ruleId":"523","severity":1,"message":"571","line":77,"column":6,"nodeType":"525","endLine":77,"endColumn":54,"suggestions":"651"},{"ruleId":"523","severity":1,"message":"652","line":100,"column":6,"nodeType":"525","endLine":100,"endColumn":54,"suggestions":"653"},{"ruleId":"518","severity":1,"message":"654","line":2,"column":10,"nodeType":"520","messageId":"521","endLine":2,"endColumn":21},"no-native-reassign",["655"],"no-negated-in-lhs",["656"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'id_user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listCart'. Either include it or remove the dependency array.","ArrayExpression",["657"],"'sum_total' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'ProductAPI' is defined but never used.","'listCart' is assigned a value but never used.","'setStar' is assigned a value but never used.","'handlerComment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["658"],"'onChangeText' is assigned a value but never used.","'upText' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'UserAPI' is defined but never used.","React Hook useEffect has missing dependencies: 'address', 'carts', 'email', 'fullname', 'phone', and 'total'. Either include them or remove the dependency array.",["659"],"'user' is assigned a value but never used.",["660"],"'queryString' is defined but never used.","'Link' is defined but never used.","'temp' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useSelector' is defined but never used.","'test' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["661"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.",["662"],"'useEffect' is defined but never used.",["655"],["656"],["655"],["656"],"'useCallback' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'notifyError'. Either include it or remove the dependency array.",["663"],["664"],["665"],"no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","Duplicate key 'marginBottom'.","'Swal' is defined but never used.","'checkErr' is assigned a value but never used.",["666"],["655"],["656"],"'Breadcrumb' is defined but never used.","React Hook useEffect has a missing dependency: 'data?.data?.userId'. Either include it or remove the dependency array.",["667"],["655"],["656"],["655"],["656"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["668"],"React Hook useEffect has missing dependencies: 'form', 'location.pathname', and 'location.state'. Either include them or remove the dependency array.",["669"],["655"],["656"],"'RangePicker' is assigned a value but never used.","'normFile' is assigned a value but never used.","'getBase64' is assigned a value but never used.","'dateFormatList' is assigned a value but never used.","'CheckboxGroup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dataGoc?.data'. Either include it or remove the dependency array.",["670"],"'Text' is assigned a value but never used.","'Checkbox' is defined but never used.","'Button' is defined but never used.","'setCheckedList' is assigned a value but never used.",["671"],"'UploadOutlined' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'DatePicker' is defined but never used.","'InputNumber' is defined but never used.","'Upload' is defined but never used.","'Modal' is defined but never used.","'maXacNhan' is assigned a value but never used.","'setMaXacNhan' is assigned a value but never used.","'ma' is assigned a value but never used.","'setMa' is assigned a value but never used.","'context' is assigned a value but never used.",["672"],"React Hook useEffect has missing dependencies: 'form' and 'location?.pathname'. Either include them or remove the dependency array.",["673"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ChainExpression","React Hook useEffect has a missing dependency: 'location?.pathname'. Either include it or remove the dependency array.",["674"],["675"],"React Hook useEffect has missing dependencies: 'data?.data?.Email' and 'form'. Either include them or remove the dependency array.",["676"],"'useContext' is defined but never used.","'valuesContext' is defined but never used.","'history' is assigned a value but never used.",["677"],"'setLoading' is assigned a value but never used.","'dataUser' is assigned a value but never used.",["678"],["679"],["680"],["681"],"React Hook useEffect has missing dependencies: 'form' and 'notifyError'. Either include them or remove the dependency array.",["682"],["683"],["655"],["656"],"'setData' is assigned a value but never used.","'programme' is assigned a value but never used.","'id' is assigned a value but never used.",["684"],"React Hook useEffect has missing dependencies: 'notifyError', 'pageUnfCampaign.page', and 'pageUnfCampaign.pageSize'. Either include them or remove the dependency array.",["685"],"'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"694","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"727","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},{"desc":"734","fix":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},"Update the dependencies array to be: [listCart, loadRedux]",{"range":"741","text":"742"},"Update the dependencies array to be: [id, load_comment]",{"range":"743","text":"744"},"Update the dependencies array to be: [address, carts, email, fullname, load, phone, total]",{"range":"745","text":"746"},"Update the dependencies array to be: [checkPush, listCart]",{"range":"747","text":"748"},"Update the dependencies array to be: [fetchData, load]",{"range":"749","text":"750"},"Update the dependencies array to be: [id]",{"range":"751","text":"752"},"Update the dependencies array to be: [id, notifyError]",{"range":"753","text":"754"},"Update the dependencies array to be: [id, notifyError, pageDonationsSortedMoney]",{"range":"755","text":"756"},"Update the dependencies array to be: [id, notifyError, pageDonationsSortedDate]",{"range":"757","text":"758"},{"range":"759","text":"750"},"Update the dependencies array to be: [data?.data?.userId, location.pathname]",{"range":"760","text":"761"},"Update the dependencies array to be: [form, location.pathname]",{"range":"762","text":"763"},"Update the dependencies array to be: [form, location.pathname, location.state, location.state._id]",{"range":"764","text":"765"},"Update the dependencies array to be: [valueMaHoanCanh, valueTieuDe, valueDiaChi, valueDoiTuongQuyenGop, valueNgayBatDau, valueNgayKetThuc, valueSoTienHuyDong, valueSoTienDaNhan, valueLuotQuyenGop, dataGoc?.data]",{"range":"766","text":"767"},"Update the dependencies array to be: [valueHoVaTen, valueEmail, valueSoDienThoai, valueVaiTro, valueTrangThai, dataGoc?.data]",{"range":"768","text":"769"},"Update the dependencies array to be: [params.type, params.id, form]",{"range":"770","text":"771"},"Update the dependencies array to be: [form, id, load, loading, location?.pathname]",{"range":"772","text":"773"},"Update the dependencies array to be: [id, location?.pathname]",{"range":"774","text":"775"},"Update the dependencies array to be: [location?.pathname]",{"range":"776","text":"777"},"Update the dependencies array to be: [checkUpdateEmail, data?.data?.Email, form]",{"range":"778","text":"779"},"Update the dependencies array to be: [valueCampaignId, valueUserId, valueTenCongKhai, valueSoTienQuyenGop, valueHinhThucQuyenGop, valueThoiGianQuyenGop, valueStatus, dataGoc?.data]",{"range":"780","text":"781"},"Update the dependencies array to be: [notifyError]",{"range":"782","text":"783"},{"range":"784","text":"783"},"Update the dependencies array to be: [form, value2]",{"range":"785","text":"786"},"Update the dependencies array to be: [form, type]",{"range":"787","text":"788"},"Update the dependencies array to be: [form, notifyError, type]",{"range":"789","text":"790"},{"range":"791","text":"790"},"Update the dependencies array to be: [pageUnfCampaign, history.location.state?.title, notifyError]",{"range":"792","text":"793"},"Update the dependencies array to be: [pageCmpCampaign, history.location.state?.title, pageUnfCampaign.page, pageUnfCampaign.pageSize, notifyError]",{"range":"794","text":"795"},[1310,1321],"[listCart, loadRedux]",[3259,3273],"[id, load_comment]",[7051,7057],"[address, carts, email, fullname, load, phone, total]",[3638,3649],"[checkPush, listCart]",[2520,2526],"[fetchData, load]",[631,633],"[id]",[2751,2755],"[id, notifyError]",[3454,3484],"[id, notifyError, pageDonationsSortedMoney]",[4178,4207],"[id, notifyError, pageDonationsSortedDate]",[2520,2526],[4486,4505],"[data?.data?.userId, location.pathname]",[2211,2230],"[form, location.pathname]",[3048,3069],"[form, location.pathname, location.state, location.state._id]",[4374,4584],"[valueMaHoanCanh, valueTieuDe, valueDiaChi, valueDoiTuongQuyenGop, valueNgayBatDau, valueNgayKetThuc, valueSoTienHuyDong, valueSoTienDaNhan, valueLuotQuyenGop, dataGoc?.data]",[3702,3775],"[valueHoVaTen, valueEmail, valueSoDienThoai, valueVaiTro, valueTrangThai, dataGoc?.data]",[3112,3136],"[params.type, params.id, form]",[4977,5031],"[form, id, load, loading, location?.pathname]",[6453,6492],"[id, location?.pathname]",[7543,7578],"[location?.pathname]",[7735,7753],"[checkUpdateEmail, data?.data?.Email, form]",[5152,5321],"[valueCampaignId, valueUserId, valueTenCongKhai, valueSoTienQuyenGop, valueHinhThucQuyenGop, valueThoiGianQuyenGop, valueStatus, dataGoc?.data]",[2446,2448],"[notifyError]",[2945,2947],[3113,3121],"[form, value2]",[3342,3348],"[form, type]",[4548,4554],"[form, notifyError, type]",[5757,5763],[2387,2435],"[pageUnfCampaign, history.location.state?.title, notifyError]",[3091,3139],"[pageCmpCampaign, history.location.state?.title, pageUnfCampaign.page, pageUnfCampaign.pageSize, notifyError]"]